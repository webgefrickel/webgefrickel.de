/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feature-settings: 'kern', 'liga', 'clig', 'calt'; }

*, *::before, *::after {
  box-sizing: inherit; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
dl,
dd,
ol,
ul,
hr,
form,
fieldset,
legend,
figure,
table,
th,
td,
caption,
hr {
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

fieldset {
  border: 0; }

label {
  display: block;
  cursor: pointer; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

audio,
iframe,
img,
video {
  max-width: 100%;
  height: auto; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  list-style: none; }

table {
  width: 100%; }

td,
th {
  vertical-align: top; }

th {
  text-align: left; }

hr {
  display: block;
  height: 1px;
  margin: 0 auto;
  border: 0;
  background: currentColor; }

html {
  color: #323232;
  background-color: white;
  font-size: 24px; }

body {
  font-family: Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-style: normal;
  line-height: 1.3333;
  font-size: 0.75rem;
  background-color: #323232; }
  .fonts-loaded body {
    font-family: "Geomanist", Helvetica, Arial, sans-serif; }
  @media (min-width: 45em) {
    body {
      font-size: 1rem; } }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-moz-selection {
  background-color: #8a8a8a;
  color: white;
  text-shadow: none; }

::selection {
  background-color: #8a8a8a;
  color: white;
  text-shadow: none; }

h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
blockquote,
p,
hr,
table,
fieldset,
figure,
pre,
.rhythm,
.page__header {
  margin-bottom: 1.3333rem; }

@font-face {
  font-family: "Geomanist";
  font-weight: 600;
  font-style: normal;
  src: url("../fonts/geomanist-medium.woff2") format("woff2"), url("../fonts/geomanist-medium.woff") format("woff"); }

@font-face {
  font-family: "Geomanist";
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/geomanist-regular.woff2") format("woff2"), url("../fonts/geomanist-regular.woff") format("woff"); }

.article__header--single, .tile__title, .page__header,
h1 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.05;
  letter-spacing: -0.01em; }
  @media (min-width: 45em) {
    .article__header--single, .tile__title, .page__header,
    h1 {
      font-size: 2.66667rem; } }


h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.33332rem;
  line-height: 1.05;
  letter-spacing: -0.01em; }
  @media (min-width: 45em) {
    
    h2 {
      font-size: 2rem;
      margin-bottom: 0.66665rem;
      line-height: 1.1; } }


h3 {
  font-size: 0.75rem;
  margin-bottom: 0.33332rem;
  font-weight: 900;
  line-height: 1.3; }
  @media (min-width: 45em) {
    
    h3 {
      font-size: 1rem; } }
  h2 +
  h3 {
    margin-top: 1.3333rem; }


h4,
h5,
h6 {
  font-size: 0.75rem;
  font-weight: 600; }

a {
  color: #323232;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: none; }

pre,
code {
  background-color: #323232;
  font-family: "Inconsolata", Hack, Menlo, Courier, monospace;
  font-weight: 400;
  font-style: normal;
  line-height: 1.2; }

pre {
  position: relative;
  display: block;
  padding: 0.66665rem;
  color: white;
  font-size: 0.58333rem;
  overflow: scroll; }
  pre > code {
    background-color: transparent; }

p > code {
  padding: 0.16666rem;
  font-size: 0.58333rem;
  background-color: rgba(0, 0, 0, 0.1); }

hr {
  color: #323232;
  height: 0.22222rem; }

strong,
b,
i,
em {
  font-family: Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-style: normal; }
  .fonts-loaded strong, .fonts-loaded
  b, .fonts-loaded
  i, .fonts-loaded
  em {
    font-family: "Geomanist", Helvetica, Arial, sans-serif; }

iframe {
  width: 100%;
  border: 0;
  background: transparent; }

#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  transition: opacity .5s ease; }
  #baguetteBox-overlay.visible {
    opacity: 1; }
  #baguetteBox-overlay .full-image {
    display: inline-block;
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center; }
    #baguetteBox-overlay .full-image figure {
      display: inline;
      margin: 0;
      height: 100%; }
    #baguetteBox-overlay .full-image img {
      display: inline-block;
      width: auto;
      height: auto;
      max-height: 100%;
      max-width: 100%;
      vertical-align: middle;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.6); }
    #baguetteBox-overlay .full-image figcaption {
      display: block;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      line-height: 1.8;
      white-space: normal;
      color: #ccc;
      background-color: #000;
      background-color: rgba(0, 0, 0, 0.6);
      font-family: sans-serif; }
    #baguetteBox-overlay .full-image:before {
      content: "";
      display: inline-block;
      height: 50%;
      width: 1px;
      margin-right: -1px; }

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  transition: left .4s ease, transform .4s ease; }
  #baguetteBox-slider.bounce-from-right {
    animation: bounceFromRight .4s ease-out; }
  #baguetteBox-slider.bounce-from-left {
    animation: bounceFromLeft .4s ease-out; }

@keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

.baguetteBox-button#next-button, .baguetteBox-button#previous-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px; }

.baguetteBox-button {
  color: white;
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: transparent;
  font: 1.6em sans-serif;
  transition: background-color .4s ease; }
  .baguetteBox-button#next-button {
    right: 2%; }
  .baguetteBox-button#previous-button {
    left: 2%; }
  .baguetteBox-button#close-button {
    top: 20px;
    right: 2%;
    right: calc(2% + 6px);
    width: 30px;
    height: 30px; }
  .baguetteBox-button svg {
    position: absolute;
    left: 0;
    top: 0; }
    .baguetteBox-button svg g,
    .baguetteBox-button svg polyline {
      stroke: white; }

/*
Preloader
Borrowed from http://tobiasahlin.com/spinkit/
 */
.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px; }

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: .6;
  position: absolute;
  top: 0;
  left: 0;
  animation: bounce 2s infinite ease-in-out; }

.baguetteBox-double-bounce2 {
  animation-delay: -1s; }

@keyframes bounce {
  0%, 100% {
    transform: scale(0); }
  50% {
    transform: scale(1); } }

/*

Orginal Style from ethanschoonover.com/solarized (c) Jeremy Hull <sourdrums@gmail.com>

*/
.hljs {
  display: block;
  overflow-x: auto;
  color: #839496; }

.hljs-comment,
.hljs-quote {
  color: #586e75; }

/* Solarized Green */
.hljs-keyword,
.hljs-selector-tag,
.hljs-addition {
  color: #859900; }

/* Solarized Cyan */
.hljs-number,
.hljs-string,
.hljs-meta .hljs-meta-string,
.hljs-literal,
.hljs-doctag,
.hljs-regexp {
  color: #2aa198; }

/* Solarized Blue */
.hljs-title,
.hljs-section,
.hljs-name,
.hljs-selector-id,
.hljs-selector-class {
  color: #268bd2; }

/* Solarized Yellow */
.hljs-attribute,
.hljs-attr,
.hljs-variable,
.hljs-template-variable,
.hljs-class .hljs-title,
.hljs-type {
  color: #b58900; }

/* Solarized Orange */
.hljs-symbol,
.hljs-bullet,
.hljs-subst,
.hljs-meta,
.hljs-meta .hljs-keyword,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-link {
  color: #cb4b16; }

/* Solarized Red */
.hljs-built_in,
.hljs-deletion {
  color: #dc322f; }

.hljs-formula {
  background: #073642; }

.hljs-emphasis {
  font-style: italic; }

.hljs-strong {
  font-weight: bold; }

.welcome {
  transition: top 0.7s ease, opacity 0.7s ease, transform 0.7s ease; }

.header, .nav {
  transition: height 0.4s ease; }

.link-section {
  transition: background-color 0.2s ease, width 0.4s ease; }

@keyframes pulse {
  0% {
    transform: translateX(-50%) translateY(-50%) scale(1); }
  50% {
    transform: translateX(-50%) translateY(-50%) scale(1.2); }
  100% {
    transform: translateX(-50%) translateY(-50%) scale(1); } }

.markup--link,
.link-default {
  color: inherit;
  text-decoration: underline; }
  .markup--link:hover, .markup--link:active, .markup--link:focus,
  .link-default:hover,
  .link-default:active,
  .link-default:focus {
    text-decoration: none; }

.link-large,
.link-inverted {
  color: inherit;
  text-decoration: none; }
  .link-large:hover, .link-large:active, .link-large:focus,
  .link-inverted:hover,
  .link-inverted:active,
  .link-inverted:focus {
    text-decoration: underline; }


.decorated {
  border-color: #323232;
  border-bottom: 0.33332rem solid;
  text-decoration: none; }
  
  .decorated--thin {
    border-bottom: 0.16666rem solid; }

.link-section {
  display: none; }
  @media (min-width: 60em) {
    .link-section {
      position: relative;
      display: block;
      overflow: hidden;
      position: absolute;
      top: 0;
      bottom: 0;
      color: transparent;
      z-index: 20;
      width: 0.66665rem; } }
  @media (min-width: 68.75em) {
    .link-section {
      width: 0.99997rem; } }
  .link-section:hover, .link-section:active, .link-section:focus {
    width: 0.99997rem; }
    @media (min-width: 68.75em) {
      .link-section:hover, .link-section:active, .link-section:focus {
        width: 1.3333rem; } }
  .link-section--fake {
    left: 0;
    width: 0; }
    @media (min-width: 68.75em) {
      .link-section--fake {
        width: 0; } }
  .link-section--change {
    width: 100%; }
    .link-section--change:hover, .link-section--change:active, .link-section--change:focus {
      width: 100%; }

.link-as-button {
  background-color: #323232;
  padding-right: 0.33332rem;
  padding-left: 0.33332rem;
  color: #8a8a8a;
  border: 0.22222rem solid #323232; }
  @media (min-width: 45em) {
    .link-as-button {
      padding-top: 0.66665rem;
      padding-bottom: 0.66665rem;
      padding-right: 1.3333rem;
      padding-left: 1.3333rem; } }
  .link-as-button:hover, .link-as-button:active, .link-as-button:focus {
    color: #323232;
    background-color: transparent;
    text-decoration: none; }

.link-section--contact {
  background-color: #70c382; }

.link-section--blog {
  background-color: #5dc5dc; }

.link-section--work {
  background-color: #f78474; }

.link-section--legal-notice {
  background-color: white; }

.link-section--error {
  background-color: #70c382; }

.list--ul {
  padding-left: 1.1em; }
  .list--ul .list__item {
    margin-bottom: 0.33332rem; }

.list--ol {
  counter-reset: step-counter;
  list-style: none; }
  .list--ol .list__item {
    padding-left: 1.8em;
    position: relative;
    counter-increment: step-counter; }
    .list--ol .list__item::before {
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      content: counter(step-counter) "."; }

.graf--codeblock {
  font-size: 0.58333rem; }

.graf--h3 {
  max-width: 90%; }

.article {
  position: relative; }
  .article--preview {
    margin-bottom: 1.3333rem; }
    @media (min-width: 60em) {
      .article--preview {
        margin-bottom: 1.99995rem;
        padding-bottom: 0.66665rem; } }

.article__date {
  margin-bottom: 0.33332rem;
  display: block; }
  @media (min-width: 60em) {
    .article--single .article__date {
      display: none; } }

.article__header {
  margin-bottom: 0.66665rem; }

.article__intro {
  font-size: 1rem;
  line-height: 1.2; }
  @media (min-width: 45em) {
    .article__intro {
      font-size: 1.5rem; } }

.article__footer {
  margin-bottom: 1.3333rem;
  font-size: 0.58333rem; }
  @media (min-width: 45em) {
    .article__footer {
      font-size: 0.75rem; } }

.article__author {
  margin-bottom: 0.66665rem; }

.article__author-image {
  margin-right: 0.66665rem;
  float: left;
  width: 12%;
  border-radius: 100%; }

.note {
  margin-bottom: 1.3333rem; }

.note__footer {
  font-size: 0.58333rem;
  margin-bottom: 0.66665rem; }
  @media (min-width: 45em) {
    .note__footer {
      font-size: 0.75rem; } }

.note__image {
  margin-bottom: 0.66665rem; }

.box {
  position: relative;
  display: block;
  overflow: hidden; }
  .box::before {
    position: relative;
    display: block;
    content: ''; }
    .box::before::before {
      padding-top: 100%; }

.box__content {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.box--2-1::before {
  padding-top: 50%; }

.box--4-3::before {
  padding-top: 75%; }

.button {
  background: transparent;
  padding: 0;
  margin: 0;
  border: 0;
  outline: 0;
  display: inline-block;
  cursor: pointer;
  color: inherit;
  line-height: 1; }

.button--close {
  color: white; }
  .button--close--welcome {
    z-index: 20;
    position: absolute;
    top: 0.66665rem;
    right: 0.66665rem; }
    .close-state--welcome:checked ~ .button--close--welcome {
      display: none; }

.button--nav {
  color: #8a8a8a;
  font-size: 1.5rem;
  margin-right: 0.66665rem;
  line-height: 1.99995rem;
  float: right; }
  @media (min-width: 45em) {
    .button--nav {
      display: none; } }

.device {
  padding-top: 1.99995rem;
  padding-bottom: 1.99995rem;
  padding-right: 0.33332rem;
  padding-left: 0.33332rem;
  z-index: 20;
  background-color: #323232;
  position: relative;
  max-width: 30%;
  border-radius: 0.66665rem; }
  @media (min-width: 60em) {
    .device {
      margin-top: -63%;
      margin-left: -1.3333rem; } }
  .device__inner {
    background-color: #323232; }

@media (min-width: 60em) {
  .device--tablet + .device--mobile {
    margin-top: -55%;
    margin-left: 0;
    margin-right: 1.3333rem;
    float: right; } }

.device--tablet {
  margin: 0;
  padding: 0.99997rem;
  max-width: 80%; }
  @media (min-width: 68.75em) {
    .device--tablet {
      padding: 1.66662rem; } }

.device--desktop {
  padding-top: 3vw;
  padding-right: 2vw;
  padding-bottom: 2vw;
  padding-left: 2vw;
  display: block;
  margin-left: auto;
  margin-right: auto;
  border-radius: 0.33332rem 0.33332rem 0 0;
  max-width: 70%; }
  @media (min-width: 60em) {
    .device--desktop {
      margin: 0;
      max-width: 90%; } }
  @media (min-width: 60em) {
    .device--desktop {
      padding-top: 0.99997rem;
      padding-right: 0.66665rem;
      padding-bottom: 0.66665rem;
      padding-left: 0.66665rem; } }
  .device--desktop::after {
    position: relative;
    display: block;
    content: '';
    background-color: #323232;
    position: absolute;
    bottom: -3vw;
    left: 50%;
    right: auto;
    margin-left: -62%;
    width: 124%;
    height: 3.5vw;
    border-radius: 0 0 1vw 1vw; }
    @media (min-width: 60em) {
      .device--desktop::after {
        bottom: -0.99997rem;
        height: 0.99997rem;
        border-radius: 0 0 0.16666rem 0.16666rem; } }

.gallery {
  margin-bottom: 1.3333rem; }
  .gallery__link {
    float: left;
    text-decoration: none; }
  .gallery__thumb {
    margin-right: 0.33332rem;
    margin-bottom: 0.33332rem;
    height: 90px; }
    @media (min-width: 60em) {
      .gallery__thumb {
        height: 105px; } }
    @media (min-width: 68.75em) {
      .gallery__thumb {
        height: 120px; } }

.grid {
  margin-left: -1.3333rem;
  padding: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  list-style: none; }
  @media (min-width: 45em) {
    .grid {
      -ms-flex-direction: row;
          flex-direction: row; } }

.grid__column {
  padding-left: 1.3333rem;
  -ms-flex: 1;
      flex: 1; }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

.icon--logo {
  width: 150px;
  height: 24px; }

.icon--heart {
  fill: #f78474;
  width: 100%;
  height: 100%; }

.webmentions-mentions,
.webmentions-reposts,
.webmentions-replies,
.webmentions-likes {
  clear: both; }

.webmention {
  margin-bottom: 0.66665rem; }
  @media (min-width: 30em) {
    .webmention {
      padding-right: 0.66665rem;
      float: left;
      width: 50%; } }
  @media (min-width: 45em) {
    .webmention {
      width: 33.3333%; } }

.webmention-author {
  margin-bottom: 0;
  position: relative; }

.webmention-author__meta {
  font-size: 0.58333rem;
  padding-top: 0.33332rem; }

.webmention-author__photo {
  margin-right: 0.33332rem;
  float: left;
  display: block;
  width: 60px;
  height: 60px;
  border-radius: 100%; }

.webmention-text {
  font-size: 0.58333rem;
  margin-top: 0.66665rem;
  margin-bottom: 0.66665rem;
  clear: left; }

.logo {
  color: #8a8a8a;
  margin-left: 0.66665rem;
  float: left;
  line-height: 1.99995rem; }
  .logo:hover, .logo:active, .logo:focus {
    color: white; }
  @media (min-width: 45em) {
    .logo {
      margin-left: 0.66665rem; } }
  @media (min-width: 68.75em) {
    .logo {
      margin-left: 0.99997rem; } }

.love {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transform: translateX(-50%) translateY(-50%) scale(1);
  transform-origin: 50% 50%;
  width: 70%;
  height: 70%;
  animation-name: pulse;
  animation-duration: 2s;
  animation-iteration-count: infinite; }

.pagination {
  margin-top: 1.3333rem; }
  .pagination__newer {
    float: right; }
  .pagination__older {
    float: left; }

.project {
  padding-bottom: 2.6666rem;
  margin-bottom: 1.3333rem; }
  .project:last-of-type {
    border-bottom: 0; }
  @media (min-width: 60em) {
    .project.decorated {
      border-bottom: 0; } }

.project__header {
  margin-bottom: 0.66665rem; }
  @media (min-width: 45em) {
    .project__header {
      font-size: 2.66667rem;
      letter-spacing: -0.01em;
      line-height: 1.05; } }

.project__link {
  padding-top: 0.33332rem;
  padding-bottom: 0.33332rem;
  padding-right: 1.3333rem;
  padding-left: 1.3333rem;
  display: block;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  color: #f78474;
  position: relative;
  display: inline-block; }
  @media (min-width: 60em) {
    .project__link {
      left: 0;
      transform: none; } }

.project__figure {
  margin-bottom: 1.3333rem; }
  @media (min-width: 60em) {
    .project__figure--first {
      display: none; } }
  .project__figure--desktop {
    margin-bottom: calc(1.3333rem + 5vw); }

.sourcebox {
  position: fixed;
  top: 1.99995rem;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #323232;
  color: white;
  z-index: 20;
  font-size: 0.58333rem;
  transform: translateZ(10px); }
  .sourcebox__inner {
    width: 100%;
    height: 100%;
    overflow: scroll; }

.taglist {
  list-style: none; }

.tiles {
  height: calc(100vh - 1.99995rem);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  @media (min-width: 60em) {
    .tiles {
      -ms-flex-direction: row;
          flex-direction: row;
      height: 100vh; } }

.tile {
  padding-right: 0.66665rem;
  padding-left: 0.66665rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex: 1;
      flex: 1;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 60em) {
    .tile {
      position: relative;
      -ms-flex-align: start;
          -ms-grid-row-align: flex-start;
          align-items: flex-start;
      width: 33.3333%; } }
  @media (min-width: 78.125em) {
    .tile {
      padding-top: 0;
      padding-right: 2.33327rem;
      padding-left: 2.33327rem;
      position: relative; } }
  .tile:hover .tile__teaser, .tile:active .tile__teaser, .tile:focus .tile__teaser {
    text-decoration: underline; }

.tile--contact {
  background-color: #70c382; }

.tile--blog {
  background-color: #5dc5dc; }

.tile--work {
  background-color: #f78474; }

.tile--legal-notice {
  background-color: white; }

.tile--error {
  background-color: #70c382; }

@media (min-width: 60em) {
  .tile__inner {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 245px; } }

@media (min-width: 68.75em) {
  .tile__inner {
    width: 285px; } }

@media (min-width: 100em) {
  .tile__inner {
    width: 410px; } }

.tile__title {
  margin-bottom: 0; }
  @media (min-width: 45em) {
    .tile__title {
      margin-bottom: 0;
      font-size: 2rem; } }
  @media (min-width: 60em) {
    .tile__title {
      margin-bottom: 1.3333rem;
      font-size: 1rem; } }

.tile__teaser {
  margin-bottom: 0;
  display: none; }
  @media (min-width: 60em) {
    .tile__teaser {
      font-size: 2.66667rem;
      display: block;
      width: 100%;
      line-height: 1.05; } }
  @media (max-height: 640px) {
    .tile__teaser {
      font-size: 8vh; } }

.welcome {
  position: absolute;
  top: 0;
  left: 0.66665rem;
  right: 0;
  bottom: 0;
  padding: 0.66665rem;
  background-color: #323232;
  color: white;
  z-index: 10;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 60em) {
    .welcome {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 1.3333rem;
      padding: 1.3333rem; } }
  .close-state--welcome:checked ~ .welcome {
    transform: translateX(100%); }
    @media (min-width: 60em) {
      .close-state--welcome:checked ~ .welcome {
        top: 1.99995rem;
        transform: translateY(-100%); } }
  .welcome--done {
    transition: unset; }

.welcome__inner {
  margin-bottom: 0;
  -ms-flex: 1;
      flex: 1;
  font-size: inherit; }
  @media (min-width: 720px) and (max-height: 640px) {
    .welcome__inner {
      font-size: 10vh; } }

@media (min-width: 60em) {
  .wrapper {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 1180px; } }

.header {
  background-color: #323232;
  color: white;
  font-size: 1rem;
  height: 1.99995rem; }
  @media (min-width: 68.75em) {
    .header {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      z-index: 50; } }
  .header--nav--active {
    height: 100vh; }
    @media (min-width: 45em) {
      .header--nav--active {
        height: 1.99995rem; } }
  @media (min-width: 60em) {
    .site--homepage .header--top {
      display: none; } }
  .header--welcome {
    display: none; }
    @media (min-width: 60em) {
      .header--welcome {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        top: auto;
        display: block; } }

.header__legal {
  font-size: 0.58333rem;
  color: #8a8a8a;
  margin-right: 0.66665rem;
  line-height: 1.99995rem;
  display: none;
  float: right; }
  .header__legal:hover, .header__legal:active, .header__legal:focus {
    color: white; }
  @media (min-width: 45em) {
    .header__legal {
      margin-right: 0.66665rem;
      display: block; } }
  .site--homepage .header__legal {
    display: block; }

.header__code {
  color: #8a8a8a;
  margin-right: 0.99997rem;
  font-size: 1.5rem;
  line-height: 1.99995rem;
  display: none;
  float: right; }
  .header__code:hover, .header__code:active, .header__code:focus {
    color: white; }
  @media (min-width: 60em) {
    .header__code {
      margin-left: 1.3333rem;
      display: block; } }

.nav {
  position: relative;
  display: block;
  overflow: hidden;
  background-color: #323232;
  height: 0; }
  @media (min-width: 45em) {
    .nav {
      display: block;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      z-index: 40;
      background-color: transparent;
      padding-left: 5.3332rem;
      width: auto;
      height: auto;
      transition: unset; } }
  @media (min-width: 60em) {
    .nav {
      padding-left: 0; } }
  .nav--active {
    height: calc(100vh - 1.99995rem); }
    @media (min-width: 45em) {
      .nav--active {
        height: auto; } }

.nav__list {
  margin-bottom: 0; }
  @media (min-width: 45em) {
    .nav__list {
      width: 40vw;
      height: auto;
      -ms-flex-direction: row;
          flex-direction: row;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media (min-width: 68.75em) {
    .nav__list {
      width: 30vw; } }

.nav__item {
  font-size: 1.5rem;
  font-weight: 600;
  position: relative;
  -ms-flex: 2;
      flex: 2; }
  @media (min-height: 480px) {
    .nav__item {
      -ms-flex: 4;
          flex: 4; } }
  @media (min-width: 45em) {
    .nav__item {
      background-color: transparent;
      padding: 0;
      width: auto;
      -ms-flex: none;
          flex: none; } }

.nav__link {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding-right: 0.66665rem;
  padding-left: 0.66665rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 45em) {
    .nav__link {
      font-size: 1rem;
      color: #8a8a8a;
      position: static;
      top: auto;
      left: auto;
      padding: 0;
      display: block;
      width: 100%;
      text-align: center;
      line-height: 1.99995rem; }
      .nav__link:hover, .nav__link:active, .nav__link:focus {
        text-decoration: none; } }

.nav__item--legal-notice {
  background-color: #323232;
  font-size: 1rem;
  border-bottom: 1px solid #8a8a8a;
  -ms-flex: 1;
      flex: 1; }
  @media (min-width: 45em) {
    .nav__item--legal-notice {
      display: none; } }
  .nav__item--legal-notice .nav__link {
    color: #8a8a8a; }

@media (min-width: 45em) {
  .nav__item--contact .nav__link:hover, .nav__item--contact .nav__link:active, .nav__item--contact .nav__link:focus {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--contact .nav__link--active {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--blog .nav__link:hover, .nav__item--blog .nav__link:active, .nav__item--blog .nav__link:focus {
    color: #5dc5dc; } }

@media (min-width: 45em) {
  .nav__item--blog .nav__link--active {
    color: #5dc5dc; } }

@media (min-width: 45em) {
  .nav__item--work .nav__link:hover, .nav__item--work .nav__link:active, .nav__item--work .nav__link:focus {
    color: #f78474; } }

@media (min-width: 45em) {
  .nav__item--work .nav__link--active {
    color: #f78474; } }

@media (min-width: 45em) {
  .nav__item--legal-notice .nav__link:hover, .nav__item--legal-notice .nav__link:active, .nav__item--legal-notice .nav__link:focus {
    color: white; } }

@media (min-width: 45em) {
  .nav__item--legal-notice .nav__link--active {
    color: white; } }

@media (min-width: 45em) {
  .nav__item--error .nav__link:hover, .nav__item--error .nav__link:active, .nav__item--error .nav__link:focus {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--error .nav__link--active {
    color: #70c382; } }

.page {
  position: relative;
  display: block;
  overflow: hidden;
  padding: 0.66665rem;
  min-height: 100vh; }
  @media (min-width: 45em) {
    .page {
      padding: 1.3333rem; } }
  @media (min-width: 60em) {
    .page {
      padding-top: 1.99995rem;
      padding-bottom: 1.99995rem;
      padding-right: 2.6666rem;
      padding-left: 2.6666rem; } }
  @media (min-width: 68.75em) {
    .page {
      margin-top: 1.99995rem; } }

.page--contact {
  background-color: #70c382; }

.page--blog {
  background-color: #5dc5dc; }

.page--work {
  background-color: #f78474; }

.page--legal-notice {
  background-color: white; }

.page--error {
  background-color: #70c382; }

.page--home {
  padding: 0;
  min-height: 0; }
  @media (orientation: landscape) {
    .page--home {
      font-size: 6vw; } }
  @media (orientation: portrait) {
    .page--home {
      font-size: 6.5vh; } }
  @media (min-width: 68.75em) {
    .page--home {
      margin-top: 0; } }

.page--contact .link-section--blog,
.page--contact .link-section--work {
  right: 0; }

.page--legal-notice .link-section--blog,
.page--legal-notice .link-section--contact,
.page--legal-notice .link-section--work,
.page--blog .link-section--blog,
.page--blog .link-section--contact,
.page--blog .link-section--work {
  left: 0; }

.page--work .link-section--contact {
  left: 0; }

.page--work .link-section--blog {
  right: 0; }

.page--error {
  color: white;
  background-image: url("../img/404.png");
  background-repeat: no-repeat;
  background-size: cover; }

.page--love {
  color: white; }
  .page--love .graf--h1 {
    position: absolute;
    top: 60%;
    left: 0;
    right: 0;
    z-index: 1;
    text-align: center; }

.page__header {
  padding-bottom: 0.33332rem;
  display: inline-block; }
  .page__header:hover, .page__header:active, .page__header:focus {
    text-decoration: none; }

@media (min-width: 60em) {
  .content-wrapper {
    padding-top: 1.3333rem; } }

@media (min-width: 60em) {
  .content {
    padding-left: 2.6666rem;
    width: 60%;
    float: left; } }

.content--project {
  display: none; }
  @media (min-width: 60em) {
    .content--project {
      display: block; } }

@media (min-width: 60em) {
  .content--blog {
    margin-top: -3.33325rem;
    width: 72%; } }

.content--legal-notice {
  font-size: 0.58333rem; }
  @media (min-width: 45em) {
    .content--legal-notice {
      font-size: 0.75rem; } }

.content__buzzwords .list--ul {
  margin-bottom: 0;
  margin-left: 2%;
  padding-left: 0;
  float: left;
  width: 48%;
  line-height: 2;
  border-top: 4px solid #323232;
  list-style: none; }
  .content__buzzwords .list--ul:nth-child(2n) {
    margin-left: 0;
    margin-right: 2%; }
  .content__buzzwords .list--ul:last-child {
    margin: 0;
    padding-top: 0.33332rem;
    padding-bottom: 0.33332rem;
    line-height: 1.3333;
    width: 100%;
    float: none;
    clear: both; }

.content__buzzwords .list__item {
  margin-bottom: 0;
  border-bottom: 2px solid #323232; }
  .content__buzzwords .list__item:last-child {
    border-bottom: 0; }

@media (min-width: 60em) {
  .sidebar {
    float: left;
    width: 40%; } }

.sidebar--blog {
  display: none; }
  @media (min-width: 60em) {
    .sidebar--blog {
      display: block;
      width: 28%; } }

.clearfix::after,
.gallery::after,
.webmentions-mentions::after,
.webmentions-reposts::after,
.webmentions-replies::after,
.webmentions-likes::after,
.webmention-author::after,
.content-wrapper::after,
.content__buzzwords::after {
  display: block;
  content: '';
  clear: both; }

.hidden {
  display: none !important;
  visibility: hidden; }

.visuallyhidden,
.close-state {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0); }
  .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus,
  .focusable.close-state:active,
  .focusable.close-state:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto; }

.invisible {
  visibility: hidden; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJtYWluLmNzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9mcmNrbC1yZXNldC9fcmVzZXQuc2NzcyIsImJhc2UvX3Jvb3Quc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9mcmNrbC10b29scy9fY29sb3JzLnNjc3MiLCJjb25maWcvX2NvbG9ycy5zY3NzIiwiY29uZmlnL19mb250cy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLXRvb2xzL19mb250cy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLXRvb2xzL191dGlsaXRpZXMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9mcmNrbC10b29scy9fbWVkaWFxdWVyeS5zY3NzIiwiYmFzZS9fcmh5dGhtLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvZnJja2wtdG9vbHMvX3NwYWNpbmcuc2NzcyIsImNvbmZpZy9fZGVmYXVsdHMuc2NzcyIsImJhc2UvX2ZvbnRzLnNjc3MiLCJiYXNlL19oZWFkaW5ncy5zY3NzIiwiYmFzZS9fbGlua3Muc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9mcmNrbC10b29scy9fYXR0ZW50aW9uLnNjc3MiLCJiYXNlL190ZXh0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvZnJja2wtdG9vbHMvX2Jsb2NrLnNjc3MiLCJ2ZW5kb3IvX2xpZ2h0Ym94LnNjc3MiLCJ2ZW5kb3IvX2hpZ2hsaWdodC5zY3NzIiwibW9kdWxlcy9fYW5pbWF0aW9ucy5zY3NzIiwibW9kdWxlcy9fdHlwb2dyYXBoeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLXRvb2xzL19wb3NpdGlvbi5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLXRvb2xzL196LWluZGV4LnNjc3MiLCJtb2R1bGVzL19hcnRpY2xlcy5zY3NzIiwibW9kdWxlcy9fbm90ZXMuc2NzcyIsIm1vZHVsZXMvX2JveGVzLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvZnJja2wtdG9vbHMvX3JhdGlvLWJveC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLXRvb2xzL19jZW50ZXIuc2NzcyIsIm1vZHVsZXMvX2J1dHRvbnMuc2NzcyIsIm1vZHVsZXMvX2RldmljZXMuc2NzcyIsIm1vZHVsZXMvX2dhbGxlcnkuc2NzcyIsIm1vZHVsZXMvX2dyaWRzLnNjc3MiLCJtb2R1bGVzL19pY29ucy5zY3NzIiwibW9kdWxlcy9fbWVudGlvbnMuc2NzcyIsIm1vZHVsZXMvX2xvZ29zLnNjc3MiLCJtb2R1bGVzL19sb3ZlLnNjc3MiLCJtb2R1bGVzL19wYWdpbmF0aW9uLnNjc3MiLCJtb2R1bGVzL19wcm9qZWN0cy5zY3NzIiwibW9kdWxlcy9fc291cmNlYm94LnNjc3MiLCJtb2R1bGVzL190YWdzLnNjc3MiLCJtb2R1bGVzL190aWxlcy5zY3NzIiwibW9kdWxlcy9fd2VsY29tZS5zY3NzIiwibW9kdWxlcy9fd3JhcHBlci5zY3NzIiwibW9kdWxlcy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL19uYXZzLnNjc3MiLCJtb2R1bGVzL19wYWdlcy5zY3NzIiwibW9kdWxlcy9fY29udGVudC5zY3NzIiwibW9kdWxlcy9fc2lkZWJhci5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2ZyY2tsLWhlbHBlcnMvX2NsZWFyZml4LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvZnJja2wtaGVscGVycy9faGlkZGVuLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBQTRFO0FBRTVFOzs7O0dBSUc7QUFFSDtFQUNFLHdCQUF3QjtFQUFFLE9BQU87RUFDakMsa0JBQWtCO0VBQUUsT0FBTztFQUMzQiwyQkFBMkI7RUFBRSxPQUFPO0VBQ3BDLCtCQUErQjtFQUFFLE9BQU8sRUFDekM7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLFVBQVUsRUFDWDs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7R0FJRztBQUVIOzs7Ozs7Ozs7Ozs7RUFX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O0VNWEc7SU5QSjtNQVdNLGNBQWMsRUFDZjtJQVpMO01BZU0sNERBQTRELEVBQzdELEVBQUE7O0FBS0w7RUNQRSwwQkNkYztFRFVkLGFDZmU7RUY2QmYsa0JBQWtCLEVBQ25COztBQUpEO0VDUEUsMEJDZGM7RURVZCxhQ2ZlO0VGNkJmLGtCQUFrQixFQUNuQjs7QU8vQkQ7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQ3VCTSx5QkNsQlUsRUZjZjs7QUdkSztFQUNFLHlCUEplO0VPS2YsaUJQSE87RU9JUCxtQlBIUztFT01ULGtIQUFpRyxFQUFBOztBQU5uRztFQUNFLHlCUE1lO0VPTGYsaUJQT087RU9OUCxtQlBPUztFT0pULG9IQUFpRyxFQUFBOztBQ1h6Rzs7RVBnQkUsa0JDTmlCO0VEK0RqQixpQkRyRWE7RVFBYixrQkFBa0I7RUFDbEIsd0JBQXdCLEVBS3pCO0VMd0NLO0lLbEROOztNUGdCRSxzQkNOaUIsRU1BbEIsRUFBQTs7O0FBR0Q7RVBHRSxrQkNOaUI7RUQrRGpCLGlCRHJFYTtFSzJDUCwwQkhaZ0I7RU1sQnRCLGtCQUFrQjtFQUNsQix3QkFBd0IsRUFPekI7RUx5Qks7O0lLckNOO01QR0UsZ0JDTmlCO01HcUNYLDBCSFpnQjtNTVpwQixpQkFBaUIsRUFFcEIsRUFBQTs7O0FBR0Q7RVBaRSxtQkNOaUI7RUdxQ1gsMEJIWmdCO0VNSnRCLGlCQUFpQjtFQUNqQixpQkFBaUIsRUFTbEI7RUxTSzs7SUt0Qk47TVBaRSxnQkNOaUIsRU0rQmxCLEVBQUE7RUFiRDs7SUhtQlEsc0JIWmdCLEVNS3JCOzs7QUFJSDs7O0VQNUJFLG1CQ05pQjtFRCtEakIsaUJEckVhLEVRK0NkOztBQ25ERDtFWGdCRSxlQ1hjO0VVSGQsc0JBQXNCLEVBS3ZCO0VBUEQ7SUFLSSxzQkFBc0IsRUNBdkI7O0FDTEg7O0Vib0JFLDBCQ2ZjO0VFZ0RaLDREQWZrQjtFQW1DcEIsaUJEbERhO0VDcUViLG1CRHBFZTtFQzRFYixpQkQzRWdCLEVXckJuQjs7QUFFRDtFQ09JLG1CQUFtQjtFQUNuQixlQUFlO0VQNkRYLG9CSHhDZ0I7RUpuQnRC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NkI7TW1CYTdCLFlBWFM7TUYrQlAsa0JWbENrQixFVWlFckIsRUFBQTtFYnJCSztJYW5CTjtNQWFJLGtCQUEwQixFQTJCN0IsRUFBQTtFQXhDRDtJQWlCSSxrQkFBMEIsRU4zQzNCO0lQNkNHO01hbkJOO1FBb0JNLGlCQUEwQixFTjlDN0IsRUFBQTtFTTBCSDtJQXlCSSxRQUFRO0lBQ1IsU0FBUyxFQUtWO0liWkc7TWFuQk47UUE2Qk0sU0FBUyxFQUVaLEVBQUE7RUEvQkg7SUFrQ0ksWUFBWSxFQUtiO0lBdkNIO01BcUNNLFlBQVksRU4vRGY7O0FNb0VIO0VsQnJERSwwQkNmYztFTTZFUiwwQkgvQ2dCO0VHZ0RoQix5QkhoRGdCO0VKbkJ0QixlQ1ZjO0VpQnVFZCxpQ2pCeEVjLEVpQm1GZjtFYnRDSztJYXVCTjtNWEtRLHdCSDNDZ0I7TUc0Q2hCLDJCSDVDZ0I7TUcrQ2hCLHlCSC9DZ0I7TUdnRGhCLHdCSGhEZ0IsRWNxRHZCLEVBQUE7RUFmRDtJbEJ6REUsZUNYYztJRGVkLDhCQ2I2QjtJaUIrRTNCLHNCQUFzQixFTmpGdkI7O0FNc0ZEO0VsQnZFQSwwQkNoQmUsRWlCeUZkOztBQUZEO0VsQnZFQSwwQkNqQmMsRWlCMEZiOztBQUZEO0VsQnZFQSwwQkNsQmEsRWlCMkZaOztBQUZEO0VsQnZFQSx3QkNuQmUsRWlCNEZkOztBQUZEO0VsQnZFQSwwQkNoQmUsRWlCeUZkOztBQUlIO0VYUlEsb0JXU3dCLEVBSy9CO0VBTkQ7SVhsRFEsMEJIWmdCLEVjbUVyQjs7QUFHSDtFQUNFLDRCQUE0QjtFQUM1QixpQkFBaUIsRUFhbEI7RUFmRDtJWGhCUSxvQldxQjBCO0lBQzlCLG1CQUFtQjtJQUNuQixnQ0FBZ0MsRUFPakM7SUFkSDtNQ25HRSxtQkErQzBCO01BM0N0QixPQUFPO01BQ1AsUUFBUTtNRHlHUixlQUFlO01BQ2YsbUNBQWtDLEVBQ25DOztBQUlMO0VmMUdFLHNCQ05pQixFY21IaEI7O0FBSEg7RUFNSSxlQUFlLEVBQ2hCOztBR2pJSDtFQUNFLG1CQUFtQixFQVVwQjtFQVhEO0lkdUJNLHlCQ2xCVSxFYUtiO0loQndDRztNZ0JsRE47UWQrQ1EsMEJIWmdCO1FHc0RoQiwyQkh0RGdCLEVpQnpCckIsRUFBQTs7QUFHSDtFZGtDUSwwQkhaZ0I7RWlCcEJ0QixlQUFlLEVBT2hCO0VoQjRCSztJZ0JyQ047TUFNTSxjQUFjLEVBRWpCLEVBQUE7O0FBR0g7RWR1QlEsMEJIWmdCLEVpQkx2Qjs7QUFFRDtFbEJoQkUsZ0JDTmlCO0VpQndCakIsaUJBQWlCLEVBS2xCO0VoQldLO0lnQmxCTjtNbEJoQkUsa0JDTmlCLEVpQjZCbEIsRUFBQTs7QUFFRDtFZE1RLHlCSFpnQjtFRG5CdEIsc0JDTmlCLEVpQnNDbEI7RWhCRUs7SWdCVE47TWxCekJFLG1CQ05pQixFaUJzQ2xCLEVBQUE7O0FBRUQ7RWRIUSwwQkhaZ0IsRWlCaUJ2Qjs7QUFFRDtFZFBRLHlCSFpnQjtFaUJxQnRCLFlBQVk7RUFDWixXQUFXO0VBQ1gsb0JBQW9CLEVBQ3JCOztBQzNERDtFZnVCTSx5QkNsQlUsRWNGZjs7QUFFRDtFbkJXRSxzQkNOaUI7RUdxQ1gsMEJIWmdCLEVrQnZCdkI7RWpCc0NLO0lpQjdDTjtNbkJXRSxtQkNOaUIsRWtCRWxCLEVBQUE7O0FBRUQ7RWZpQ1EsMEJIWmdCLEVrQm5CdkI7O0FDWEQ7RVRHSSxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGlCQUFpQixFU0VwQjtFQVBEO0lURkksbUJBQW1CO0lBQ25CLGVBQWU7SUFDZixZQUFZLEVTTWI7SUFOSDtNQ0hJLGtCQUF1QixFQUN4Qjs7QURXSDtFRWJFLGVBQWU7RUFtQmIsbUJBQW1CO0VBQ25CLE9BQU87RUFDUCxTQUFTO0VBQ1QsVUFBVTtFQUNWLFFBQVEsRUZSWDs7QUFHRDtFQ2pCSSxpQkFBdUIsRUFDeEI7O0FEb0JIO0VDckJJLGlCQUF1QixFQUN4Qjs7QUVDSDtFQUNFLHdCQUF3QjtFQUN4QixXQUFXO0VBQ1gsVUFBVTtFQUNWLFVBQVU7RUFDVixXQUFXO0VBQ1gsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsZUFBZSxFQUNoQjs7QUFNRDtFMUJKRSxhQ2ZlLEV5QjhCaEI7RUFYRDtJTkFFLFlBWFM7SURIVCxtQkErQzBCO0lBUHBCLGdCZlhnQjtJZVdoQixrQmZYZ0IsRXNCTHJCO0lBVkg7TUFRTSxjQUFjLEVBQ2Y7O0FBSUw7RTFCakJFLGVDVmM7RUVVZCxrQkNOaUI7RUdxQ1gseUJIWmdCO0VzQkV0Qix3QmxCbEJ3QjtFa0JtQnhCLGFBQWEsRUFLZDtFckJPSztJcUJqQk47TUFRSSxjQUFjLEVBRWpCLEVBQUE7O0FDM0NEO0VwQjhFUSx3QkgzQ2dCO0VHNENoQiwyQkg1Q2dCO0VHK0NoQiwwQkgvQ2dCO0VHZ0RoQix5QkhoRGdCO0VnQmZ0QixZQVhTO0VwQldULDBCQ2ZjO0UwQkRkLG1CQUFtQjtFQUNuQixlbkJVb0I7RW1CVHBCLDBCbkJBb0IsRW1CU3JCO0V0Qm1DSztJc0JsRE47TXBCK0NRLGlCb0J0Q21CO01wQnNDbkIsd0JIWmdCLEV1QnBCdkIsRUFBQTtFQWZEO0kzQm9CRSwwQkNmYyxFMEJTYjs7QXRCb0NHO0VzQmpDTjtJcEI4QlEsaUJvQjNCcUI7SXBCMkJyQixlSHBCSztJR29CTCx3QkhaZ0I7SXVCZGxCLGFBQWEsRUFFaEIsRUFBQTs7QUFHSDtFcEJPUSxVSE5LO0VHZ0RMLG9CSHhDZ0I7RXVCTnRCLGVuQmJvQixFbUJrQnJCO0V0QmdCSztJc0J4Qk47TXBCaURRLG9CSHhDZ0IsRXVCRHZCLEVBQUE7O0FBRUQ7RXBCcURRLGlCb0JwRHNCO0VwQm9EdEIsbUJvQnBENkI7RXBCb0Q3QixvQm9CcERvQztFcEJvRHBDLGtCb0JwRDJDO0VGcENqRCxlQUFlO0VBMEJiLGtCQUFrQjtFQUNsQixtQkFBbUI7RUVXckIseUNBQWdEO0VBQ2hELGVBQWUsRUEyQmhCO0V0QmpCSztJc0JkTjtNcEJIUSxVSE5LO011QmlCVCxlbkIzQm1CLEVtQmtEdEIsRUFBQTtFdEJqQks7SXNCZE47TXBCcURRLHdCSHREZ0I7TUdzRGhCLDBCSHREZ0I7TUdzRGhCLDJCSHREZ0I7TUdzRGhCLHlCSHREZ0IsRXVCZ0N2QixFQUFBO0VBL0JEO0liakNJLG1CQUFtQjtJQUNuQixlQUFlO0lBQ2YsWUFBWTtJZGVkLDBCQ2ZjO0lrQkNkLG1CQStDMEI7SUFQcEIsYVFRb0I7SVJScEIsVVFRMkI7SVJSM0IsWVFRbUM7SUFDdkMsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixjQUFjO0lBQ2QsMkJBQTJCLEVBUTVCO0l0QmhCRztNc0JkTjtRQXlCTSxvQkFBUztRQUNULG1CQUFrQjtRQUNsQix5Q0FBNEMsRUFHL0MsRUFBQTs7QUNsRUg7RXJCdUJNLHlCQ2xCVSxFb0JnQmY7RUFyQkQ7SUFLSSxZQUFZO0lBQ1osc0JBQXNCLEVBQ3ZCO0VBUEg7SXJCK0NRLHlCSFpnQjtJR1loQiwwQkhaZ0I7SXdCeEJwQixhcEJTZSxFb0JBaEI7SXZCOEJHO011QmxETjtRQWNNLGNBQXFCLEVBTXhCLEVBQUE7SXZCOEJHO011QmxETjtRQWtCTSxjQUFxQixFQUV4QixFQUFBOztBQ1ZIO0V0QnFDUSx3QkhaZ0I7RUd3Q2hCLFdIaERLO0V5QmRYLHFCQUFjO0VBQWQsY0FBYztFQUNkLDJCQUF1QjtNQUF2Qix1QkFBdUI7RUFDdkIsb0JBQWdCO01BQWhCLGdCQUFnQjtFQUNoQix1QkFBK0I7TUFBL0IsK0JBQStCO0VBQy9CLGlCQUFpQixFQU9sQjtFeEIwQks7SXdCeENOO01BWUksd0JBQW9CO1VBQXBCLG9CQUFvQixFQUV2QixFQUFBOztBQUVEO0V0QitEUSx3Qkh0RGdCO0V5QlB0QixZQUFRO01BQVIsUUFBUSxFQUNUOztBQzVCRDtFQUNFLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CLEVBQ3BCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLGFBQWEsRUFDZDs7QUFFRDtFOUJhRSxjQzFCYTtFNkJlYixZQUFZO0VBQ1osYUFBYSxFQUNkOztBQ25CRDs7OztFQUtFLFlBQVksRUFDYjs7QUFFRDtFeEJ1Q1EsMEJIWmdCLEUyQmZ2QjtFMUI4Qks7STBCMUNOO014QmlGUSwwQkh0RGdCO00yQnRCcEIsWUFBWTtNQUNaLFdBQVcsRUFNZCxFQUFBO0UxQjhCSztJMEIxQ047TUFVSSxnQkFBZ0IsRUFFbkIsRUFBQTs7QUFFRDtFeEJ5QlEsaUJIcEJLO0UyQkZYLG1CQUFtQixFQUNwQjs7QUFFRDtFNUJaRSxzQkNOaUI7RUcrRVgsd0JIdERnQixFMkJKdkI7O0FBRUQ7RXhCY1EseUJIWmdCO0UyQkF0QixZQUFZO0VBQ1osZUFBZTtFQUNmLFlBQVk7RUFDWixhQUFhO0VBQ2Isb0JBQW9CLEVBQ3JCOztBQUVEO0U1QjFCRSxzQkNOaUI7RUcwQlgsdUJIRGdCO0VHRWhCLDBCSEZnQjtFMkJVdEIsWUFBWSxFQUNiOztBQzlDRDtFaENnQkUsZUNWYztFTXlDUix3QkhaZ0I7RTRCaEN0QixZQUFZO0VBQ1osd0J4QmV3QixFd0JGekI7RUFqQkQ7SWhDZ0JFLGFDZmUsRVdJZDtFUDZDRztJMkJsRE47TXpCK0NRLHdCQ3pDYyxFd0JXckIsRUFBQTtFM0JpQ0s7STJCbEROO016QitDUSx3QnlCaENrQyxFQUV6QyxFQUFBOztBQ2pCRDtFUkNFLGVBQWU7RUFhYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULFVBQVU7RUFDVixpQ0FBb0I7RVFmdEIsc0RBQWtEO0VBQ2xELDBCQUEwQjtFQUMxQixXQUFXO0VBQ1gsWUFBWTtFQUVaLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsb0NBQW9DLEVBQ3JDOztBQ1ZEO0UzQitDUSxzQkhaZ0IsRThCeEJ2QjtFQVhEO0lBSUksYUFBYSxFQUNkO0VBTEg7SUFRSSxZQUFZLEVBQ2I7O0FDVEg7RTVCeUZRLDBCSHREZ0I7RUdZaEIseUJIWmdCLEUrQnJCdkI7RUFkRDtJQU1JLGlCQUFpQixFQUNsQjtFOUIyQ0c7SThCbEROO01BV00saUJBQWlCLEVBRXBCLEVBQUE7O0FBR0g7RTVCK0JRLDBCSFpnQixFK0JYdkI7RTlCMEJLO0k4QmxDTjtNaENBRSxzQkNOaUI7TStCV2Ysd0JBQXdCO01BQ3hCLGtCQUFrQixFQUVyQixFQUFBOztBQUVEO0U1Qm9EUSx3QkgzQ2dCO0VHNENoQiwyQkg1Q2dCO0VHK0NoQix5QkgvQ2dCO0VHZ0RoQix3QkhoRGdCO0VxQmxDdEIsZUFBZTtFQUdiLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsNEJBQXFCO0V6QlV2QixlQ2RhO0VrQzRCYixtQkFBbUI7RUFDbkIsc0JBQXNCLEVBTXZCO0U5QmFLO0k4QnhCTjtNQVFJLFFBQVE7TUFDUixnQkFBZ0IsRUFFbkIsRUFBQTs7QUFFRDtFNUJRUSx5QkhaZ0IsRStCZ0J2QjtFOUJESztJOEJYTjtNQUtNLGNBQWMsRUFFakIsRUFBQTtFQVBIO0k1QlFRLHFDNEJFbUIsRUFDeEI7O0FDbERIO0VqQk1FLGdCQW1EdUI7RUFYakIsZ0JYM0JrQjtFVzJCbEIsU2ZuQks7RWVtQkwsVWZuQks7RWVtQkwsUWZuQks7RUpQWCwwQkNmYztFRFdkLGFDZmU7RW1CbUJmLFlBWFM7RWpCT1Qsc0JDTmlCO0VnQ0pqQiw0QkFBcUIsRUFPdEI7RUFiRDtJQVNJLFlBQVk7SUFDWixhQUFhO0lBQ2IsaUJBQWlCLEVBQ2xCOztBQ1pIO0VBQ0UsaUJBQWlCLEVBQ2xCOztBQ0ZEO0VBQ0UsaUNBQVk7RUFDWixxQkFBYztFQUFkLGNBQWM7RUFDZCwyQkFBdUI7TUFBdkIsdUJBQXVCLEVBTXhCO0VqQ3lDSztJaUNsRE47TUFNSSx3QkFBb0I7VUFBcEIsb0JBQW9CO01BQ3BCLGNBQWMsRUFFakIsRUFBQTs7QUFFRDtFL0J1RVEsMEJIL0NnQjtFR2dEaEIseUJIaERnQjtFa0N0QnRCLHFCQUFjO0VBQWQsY0FBYztFQUNkLFlBQVE7TUFBUixRQUFRO0VBQ1Isd0JBQW9CO01BQXBCLG9CQUFvQjtFQUNwQix1QkFBb0I7TUFBcEIsb0JBQW9CLEVBa0JyQjtFakNnQks7SWlDdkNOO01BUUksbUJBQW1CO01BQ25CLHNCQUF3QjtVQUF4QiwrQkFBd0I7VUFBeEIsd0JBQXdCO01BQ3hCLGdCQUFnQixFQWFuQixFQUFBO0VqQ2dCSztJaUN2Q047TS9COEVRLGVIOURLO01HdURMLDBCSC9DZ0I7TUdnRGhCLHlCSGhEZ0I7TWtDVHBCLG1CQUFtQixFQVF0QixFQUFBO0VBdkJEO0lBb0JNLDJCQUEyQixFQUM1Qjs7QUFLSDtFdENqQkEsMEJDaEJlLEVxQ21DZDs7QUFGRDtFdENqQkEsMEJDakJjLEVxQ29DYjs7QUFGRDtFdENqQkEsMEJDbEJhLEVxQ3FDWjs7QUFGRDtFdENqQkEsd0JDbkJlLEVxQ3NDZDs7QUFGRDtFdENqQkEsMEJDaEJlLEVxQ21DZDs7QWpDV0c7RWlDUk47SWJ6Q0UsZUFBZTtJQWFiLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsVUFBVTtJQUNWLGlDQUFvQjtJYTRCcEIsYUFBYSxFQVVoQixFQUFBOztBakNMSztFaUNSTjtJQU9JLGFBQWEsRUFNaEIsRUFBQTs7QWpDTEs7RWlDUk47SUFXSSxhQUFhLEVBRWhCLEVBQUE7O0FBRUQ7RS9CVlEsaUJIcEJLLEVrQzJDWjtFakNwQks7SWlDT047TS9CVlEsaUJIcEJLO01EWFgsZ0JDTmlCLEVrQzREbEIsRUFBQTtFakNwQks7SWlDT047TS9CVlEseUJIWmdCO01EbkJ0QixnQkNOaUIsRWtDNERsQixFQUFBOztBQUVEO0UvQnpCUSxpQkhwQks7RWtDK0NYLGNBQWMsRUFZZjtFakNwQ0s7SWlDc0JOO01uQ3hERSxzQkNOaUI7TWtDb0VmLGVBQWU7TUFDZixZQUFZO01BQ1osa0JBQWtCLEVBTXJCLEVBQUE7RWpDbERLO0lpQ29DTjtNQVlJLGVBQWUsRUFFbEIsRUFBQTs7QUN0RkQ7RXBCTUUsbUJBK0MwQjtFQVBwQixPZm5CSztFZW1CTCxpQmZYZ0I7RWVXaEIsU2ZuQks7RWVtQkwsVWZuQks7RUdnREwsb0JIeENnQjtFSmZ0QiwwQkNmYztFRFdkLGFDZmU7RW1CbUJmLFlBVlM7RW1CSFQscUJBQWM7RUFBZCxjQUFjO0VBQ2QsdUJBQW9CO01BQXBCLG9CQUFvQixFQW1CckI7RWxDdUJLO0lrQ2xETjtNcEJNRSxtQkErQzBCO01BUHBCLE9mbkJLO01lbUJMLFFmbkJLO01lbUJMLFNmbkJLO01lbUJMLGtCZlhnQjtNR3dDaEIsbUJIeENnQixFbUNSdkIsRUFBQTtFQTNCRDtJQWdCSSw0QkFBcUIsRUFNdEI7SWxDNEJHO01rQ2xETjtRQW1CTSxnQi9CQW9CO1ErQkNwQiw2QkFBcUIsRUFFeEIsRUFBQTtFQXRCSDtJQXlCSSxrQkFBa0IsRUFDbkI7O0FBR0g7RWhDa0JRLGlCSHBCSztFbUNJWCxZQUFRO01BQVIsUUFBUTtFQUNSLG1CQUFtQixFQUtwQjtFbENESztJa0NQTjtNQU1JLGdCQUFnQixFQUVuQixFQUFBOztBbENhSztFbUNsRE47SWZDRSxlQUFlO0lBMEJiLGtCQUFrQjtJQUNsQixtQkFBbUI7SWV6Qm5CLGtCaENVYyxFZ0NSakIsRUFBQTs7QUNMRDtFekNvQkUsMEJDZmM7RURXZCxhQ2ZlO0VFZWYsZ0JDTmlCO0VxQ0xqQixtQmpDY3dCLEVpQ2dCekI7RXBDZUs7SW9DbEROO010Qk1FLGdCQW1EdUI7TUFYakIsT2ZuQks7TWVtQkwsU2ZuQks7TWVtQkwsUWZuQks7TWdCUFgsWUFkUSxFcUI2QlQsRUFBQTtFQW5DRDtJQWFJLGNBQWMsRUFLZjtJcENnQ0c7TW9DbEROO1FBZ0JNLG1CakNHb0IsRWlDRHZCLEVBQUE7RXBDZ0NHO0lvQ2xETjtNQXNCTSxjQUFjLEVBR2pCLEVBQUE7RUF6Qkg7SUE0QkksY0FBYyxFQU1mO0lwQ2dCRztNb0NsRE47UXRCTUUsbUJBK0MwQjtRQVBwQixVZm5CSztRZW1CTCxRZm5CSztRZW1CTCxTZm5CSztRZW1CTCxVc0JmcUM7UUFDdkMsZUFBZSxFQUVsQixFQUFBOztBQUdIO0V0Q3JCRSxzQkNOaUI7RUpNakIsZUNWYztFTXlDUix5QkhaZ0I7RXFDTXRCLHdCakN0QndCO0VpQ3VCeEIsY0FBYztFQUNkLGFBQWEsRUFjZDtFQXBCRDtJekNyQkUsYUNmZSxFV0lkO0VQNkNHO0lvQ2JOO01sQ1VRLHlCQ3pDYztNaUM2Q2xCLGVBQWUsRUFNbEIsRUFBQTtFQXBCRDtJQWtCSSxlQUFlLEVBQ2hCOztBQUdIO0V6QzNDRSxlQ1ZjO0VNeUNSLHlCa0NjZ0M7RXRDN0N0QyxrQkNOaUI7RXFDcURqQix3QmpDNUN3QjtFaUM2Q3hCLGNBQWM7RUFDZCxhQUFhLEVBVWQ7RUFoQkQ7SXpDM0NFLGFDZmUsRVdJZDtFUDZDRztJb0NTTjtNbENaUSx1QkhaZ0I7TXFDc0NwQixlQUFlLEVBRWxCLEVBQUE7O0FDM0VEO0U1QlFJLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsaUJBQWlCO0VkVW5CLDBCQ2ZjO0V5Q0RkLFVBQVUsRUF1Qlg7RXJDdUJLO0lxQ2xETjtNakJDRSxlQUFlO01BR2IsbUJBQW1CO01BQ25CLFVBQVU7TUFDViw0QkFBcUI7TUxjdkIsWUFiUTtNcEJhUiw4QkNiNkI7TU1rRnZCLHdCSHREZ0I7TXNDeEJwQixZQUFZO01BQ1osYUFBYTtNQUNiLGtCQUFrQixFQWNyQixFQUFBO0VyQ3VCSztJcUNsRE47TW5DeUZRLGdCSDlESyxFc0NBWixFQUFBO0VBM0JEO0lBcUJJLGlDQUFZLEVBS2I7SXJDd0JHO01xQ2xETjtRQXdCTSxhQUFhLEVBRWhCLEVBQUE7O0FBR0g7RW5Da0JRLGlCSHBCSyxFc0NlWjtFckNRSztJcUNyQk47TUFJSSxZQUFZO01BQ1osYUFBYTtNQUNiLHdCQUFvQjtVQUFwQixvQkFBb0I7TUFDcEIsdUJBQStCO1VBQS9CLCtCQUErQixFQU1sQyxFQUFBO0VyQ1FLO0lxQ3JCTjtNQVdJLFlBQVksRUFFZixFQUFBOztBQUVEO0V2QzVCRSxrQkNOaUI7RUQrRGpCLGlCRHJFYTtFd0MyQ2IsbUJBQW1CO0VBQ25CLFlBQVE7TUFBUixRQUFRLEVBWVQ7RXJDeEJLO0lxQ1FOO01BT0ksWUFBUTtVQUFSLFFBQVEsRUFTWCxFQUFBO0VyQ1ZLO0lxQ05OO00xQ3hCRSw4QkNiNkI7TU1vRXZCLFdIaERLO01zQzhCVCxZQUFZO01BQ1osZUFBVztVQUFYLFdBQVcsRUFFZCxFQUFBOztBQUVEO0VqQjdERSxlQUFlO0VBbUJiLG1CQUFtQjtFQUNuQixPQUFPO0VBQ1AsU0FBUztFQUNULFVBQVU7RUFDVixRQUFRO0VsQjBESiwwQkgvQ2dCO0VHZ0RoQix5QkhoRGdCO0VzQzhCdEIscUJBQWM7RUFBZCxjQUFjO0VBQ2QsdUJBQW9CO01BQXBCLG9CQUFvQixFQWdCckI7RXJDaENLO0lxQ1lOO012QzlDRSxnQkNOaUI7TUpNakIsZUNWYztNa0JBZCxpQkEyRHdCO01BbkRwQixVQUFVO01BQ1YsV0FBVztNWjREVCxXSGhESztNc0M4Q1QsZUFBZTtNQUNmLFlBQVk7TUFDWixtQkFBbUI7TUFDbkIsd0JsQ3pEc0IsRWtDK0R6QjtNQXBCRDtRQWlCTSxzQkFBc0IsRTlCMUV6QixFQUFBOztBOEIrRUg7RTFDaEVFLDBCQ2ZjO0VFV2QsZ0JDTmlCO0VzQzZFakIsaUN6Q2pGYztFeUNrRmQsWUFBUTtNQUFSLFFBQVEsRUFTVDtFckMvQ0s7SXFDa0NOO01BT0ksY0FBYyxFQU1qQixFQUFBO0VBYkQ7STFDcEVFLGVDVmMsRXlDMEZiOztBckM5Q0c7RXFDa0RKO0kxQ3BGQSxlQ1plLEVXQ2QsRUFBQTs7QVA2Q0c7RXFDNERKO0kxQzlGQSxlQ1plLEV5QytHWixFQUFBOztBckNqRUM7RXFDa0RKO0kxQ3BGQSxlQ2JjLEVXRWIsRUFBQTs7QVA2Q0c7RXFDNERKO0kxQzlGQSxlQ2JjLEV5Q2dIWCxFQUFBOztBckNqRUM7RXFDa0RKO0kxQ3BGQSxlQ2RhLEVXR1osRUFBQTs7QVA2Q0c7RXFDNERKO0kxQzlGQSxlQ2RhLEV5Q2lIVixFQUFBOztBckNqRUM7RXFDa0RKO0kxQ3BGQSxhQ2ZlLEVXSWQsRUFBQTs7QVA2Q0c7RXFDNERKO0kxQzlGQSxhQ2ZlLEV5Q2tIWixFQUFBOztBckNqRUM7RXFDa0RKO0kxQ3BGQSxlQ1plLEVXQ2QsRUFBQTs7QVA2Q0c7RXFDNERKO0kxQzlGQSxlQ1plLEV5QytHWixFQUFBOztBQ25ITDtFN0JRSSxtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGlCQUFpQjtFUGlFYixvQkh4Q2dCO0V1Q2hDdEIsa0JBQWtCLEVBYW5CO0V0Q2tDSztJc0NsRE47TXBDMkVRLG1CSHhDZ0IsRXVDbkJ2QixFQUFBO0V0Q2tDSztJc0NsRE47TXBDOEVRLHdCSDNDZ0I7TUc0Q2hCLDJCSDVDZ0I7TUcrQ2hCLHlCSC9DZ0I7TUdnRGhCLHdCSGhEZ0IsRXVDbkJ2QixFQUFBO0V0Q2tDSztJc0NsRE47TXBDK0NRLHVCQzVCa0IsRW1DSHpCLEVBQUE7O0FBR0M7RTNDQ0EsMEJDaEJlLEUwQ2lCZDs7QUFGRDtFM0NDQSwwQkNqQmMsRTBDa0JiOztBQUZEO0UzQ0NBLDBCQ2xCYSxFMENtQlo7O0FBRkQ7RTNDQ0Esd0JDbkJlLEUwQ29CZDs7QUFGRDtFM0NDQSwwQkNoQmUsRTBDaUJkOztBQUlIO0VwQ2tEUSxXSGhESztFdUNBWCxjQUFjLEVBYWY7RXRDdEJHO0lzQ09KO01BS0ksZUFBZSxFQVVsQixFQUFBO0V0Q2pCRztJc0NFSjtNQVNJLGlCQUFpQixFQU1wQixFQUFBO0V0Q1VLO0lzQ3pCTjtNcENzQlEsY0hwQkssRXVDYVosRUFBQTs7QUFFRDs7RUFHSSxTQUFTLEVBQ1Y7O0FBR0g7Ozs7OztFQUtJLFFBQVEsRUFDVDs7QUFHSDtFQUVJLFFBQVEsRUFDVDs7QUFISDtFQU1JLFNBQVMsRUFDVjs7QUFHSDtFM0NwREUsYUNmZTtFMENxRWYsd0NBQXFCO0VBQ3JCLDZCQUE2QjtFQUM3Qix1QkFBdUIsRUFDeEI7O0FBRUQ7RTNDM0RFLGFDZmUsRTBDa0ZoQjtFQVJEO0l4QnJFRSxtQkErQzBCO0lBUHBCLFN3QmlDbUI7SXhCakNuQixRZm5CSztJZW1CTCxTZm5CSztJZ0JQWCxXQVRPO0l1QnNFTCxtQkFBbUIsRUFDcEI7O0FBT0g7RXBDQVEsMkJIdERnQjtFdUMwRHRCLHNCQUFzQixFQUt2QjtFQVREO0lBT0ksc0JBQXNCLEUvQjNGdkI7O0FQNkNHO0V1Q2xETjtJckN5RlEsdUJIdERnQixFd0M1QnZCLEVBQUE7O0F2QzJDSztFdUN6Q047SXJDZ0ZRLHdCSHREZ0I7SXdDdkJwQixXQUFXO0lBQ1gsWUFBWSxFQUVmLEVBQUE7O0FBRUQ7RUFDRSxjQUFjLEVBS2Y7RXZDMkJLO0l1Q2pDTjtNQUlJLGVBQWUsRUFFbEIsRUFBQTs7QXZDMkJLO0V1Q3pCTjtJckNzQlEsd0JIWmdCO0l3Q1BwQixXQUFXLEVBRWQsRUFBQTs7QUFFRDtFekNoQkUsc0JDTmlCLEV3QzRCbEI7RXZDWUs7SXVDbEJOO016Q2hCRSxtQkNOaUIsRXdDNEJsQixFQUFBOztBQUtEO0VyQ0lRLGlCSHBCSztFR29CTCxnQnFDQXNCO0VyQzBDdEIsZ0JIOURLO0V3Q3NCVCxZQUFZO0VBQ1osV0FBVztFQUNYLGVBQWU7RUFDZiw4QjNDL0NZO0UyQ2dEWixpQkFBaUIsRUFjbEI7RUF4Qkg7SXJDSVEsZUhwQks7SUdvQkwsaUJxQ1N3QixFQUMzQjtFQWRMO0lyQ1ZRLFVITks7SUdtREwsd0JIM0NnQjtJRzRDaEIsMkJINUNnQjtJRGlFcEIsb0JEOUZtQjtJMEN5RGpCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWSxFQUNiOztBQXZCTDtFckNJUSxpQkhwQks7RXdDNENULGlDM0NsRVksRTJDdUViO0VBakNIO0lBK0JNLGlCQUFpQixFQUNsQjs7QXZDekJDO0V3Q2xETjtJQUVJLFlBQVk7SUFDWixXQUFXLEVBRWQsRUFBQTs7QUFFRDtFQUNFLGNBQWMsRUFNZjtFeENvQ0s7SXdDM0NOO01BSUksZUFBZTtNQUNmLFdBQVcsRUFFZCxFQUFBOztBQ2REOzs7Ozs7Ozs7RUFHSSxlQUFlO0VBQ2YsWUFBWTtFQUNaLFlBQVksRUFDYjs7QUNMSDtFQUVFLHlCQUF5QjtFQUN6QixtQkFBbUIsRUFDcEI7O0FBR0Q7O0VBRUUsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLFdBQVc7RUFDWCxVQUFVO0VBQ1YsaUJBQWlCO0VBQ2pCLG9CQUFVLEVBYVg7RUF0QkQ7OztJQWNNLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osYUFBYTtJQUNiLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsV0FBVyxFQUNaOztBQUtMO0VBRUUsbUJBQW1CLEVBQ3BCIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAzICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogY29tbW9uLWxpZ2F0dXJlcyBjb250ZXh0dWFsO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdrZXJuJywgJ2xpZ2EnLCAnY2xpZycsICdjYWx0JzsgfVxuXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG5ib2R5LFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5kbCxcbmRkLFxub2wsXG51bCxcbmhyLFxuZm9ybSxcbmZpZWxkc2V0LFxubGVnZW5kLFxuZmlndXJlLFxudGFibGUsXG50aCxcbnRkLFxuY2FwdGlvbixcbmhyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDsgfVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuW3Vuc2VsZWN0YWJsZV0ge1xuICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5hdWRpbyxcbmlmcmFtZSxcbmltZyxcbnZpZGVvIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87IH1cblxubmF2IHVsLFxubmF2IG9sLFxuZmllbGRzZXQgdWwsXG5maWVsZHNldCBvbCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTsgfVxuXG50ZCxcbnRoIHtcbiAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuaHIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjsgfVxuXG5odG1sIHtcbiAgY29sb3I6ICMzMjMyMzI7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDI0cHg7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiAxLjMzMzM7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMyMzIzMjsgfVxuICAuZm9udHMtbG9hZGVkIGJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiBcIkdlb21hbmlzdFwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgYm9keSB7XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuICBAbWVkaWEgcHJpbnQge1xuICAgIGJvZHkgKiB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgYm9keTo6YWZ0ZXIge1xuICAgICAgY29udGVudDogJ1BsZWFzZSwgZG8gbm90IHdhc3RlIHBhcGVyIGJ5IHByaW50aW5nIHdlYnBhZ2VzLic7IH0gfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4YThhOGE7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxudWwsXG5vbCxcbmRsLFxuYmxvY2txdW90ZSxcbnAsXG5ocixcbnRhYmxlLFxuZmllbGRzZXQsXG5maWd1cmUsXG5wcmUsXG4ucmh5dGhtLFxuLnBhZ2VfX2hlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDEuMzMzM3JlbTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiR2VvbWFuaXN0XCI7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9nZW9tYW5pc3QtbWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9nZW9tYW5pc3QtbWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiR2VvbWFuaXN0XCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9nZW9tYW5pc3QtcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vZm9udHMvZ2VvbWFuaXN0LXJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpOyB9XG5cbi5hcnRpY2xlX19oZWFkZXItLXNpbmdsZSwgLnRpbGVfX3RpdGxlLCAucGFnZV9faGVhZGVyLFxuaDEge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMDU7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMWVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmFydGljbGVfX2hlYWRlci0tc2luZ2xlLCAudGlsZV9fdGl0bGUsIC5wYWdlX19oZWFkZXIsXG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiAyLjY2NjY3cmVtOyB9IH1cblxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjMzMzMycmVtO1xuICBsaW5lLWhlaWdodDogMS4wNTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICBcbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjY2NjY1cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMTsgfSB9XG5cblxuaDMge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMzMzMzJyZW07XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICBcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuICBoMiArXG4gIGgzIHtcbiAgICBtYXJnaW4tdG9wOiAxLjMzMzNyZW07IH1cblxuXG5oNCxcbmg1LFxuaDYge1xuICBmb250LXNpemU6IDAuNzVyZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuYSB7XG4gIGNvbG9yOiAjMzIzMjMyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5wcmUsXG5jb2RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMyMzIzMjtcbiAgZm9udC1mYW1pbHk6IFwiSW5jb25zb2xhdGFcIiwgSGFjaywgTWVubG8sIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG5cbnByZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDAuNjY2NjVyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtO1xuICBvdmVyZmxvdzogc2Nyb2xsOyB9XG4gIHByZSA+IGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbnAgPiBjb2RlIHtcbiAgcGFkZGluZzogMC4xNjY2NnJlbTtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7IH1cblxuaHIge1xuICBjb2xvcjogIzMyMzIzMjtcbiAgaGVpZ2h0OiAwLjIyMjIycmVtOyB9XG5cbnN0cm9uZyxcbmIsXG5pLFxuZW0ge1xuICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG4gIC5mb250cy1sb2FkZWQgc3Ryb25nLCAuZm9udHMtbG9hZGVkXG4gIGIsIC5mb250cy1sb2FkZWRcbiAgaSwgLmZvbnRzLWxvYWRlZFxuICBlbSB7XG4gICAgZm9udC1mYW1pbHk6IFwiR2VvbWFuaXN0XCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7IH1cblxuaWZyYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cblxuI2JhZ3VldHRlQm94LW92ZXJsYXkge1xuICBkaXNwbGF5OiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTAwMDAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC41cyBlYXNlOyB9XG4gICNiYWd1ZXR0ZUJveC1vdmVybGF5LnZpc2libGUge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgI2JhZ3VldHRlQm94LW92ZXJsYXkgLmZ1bGwtaW1hZ2Uge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICNiYWd1ZXR0ZUJveC1vdmVybGF5IC5mdWxsLWltYWdlIGZpZ3VyZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAjYmFndWV0dGVCb3gtb3ZlcmxheSAuZnVsbC1pbWFnZSBpbWcge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCA4cHggcmdiYSgwLCAwLCAwLCAwLjYpOyB9XG4gICAgI2JhZ3VldHRlQm94LW92ZXJsYXkgLmZ1bGwtaW1hZ2UgZmlnY2FwdGlvbiB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuODtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgICBjb2xvcjogI2NjYztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgfVxuICAgICNiYWd1ZXR0ZUJveC1vdmVybGF5IC5mdWxsLWltYWdlOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAtMXB4OyB9XG5cbiNiYWd1ZXR0ZUJveC1zbGlkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdHJhbnNpdGlvbjogbGVmdCAuNHMgZWFzZSwgdHJhbnNmb3JtIC40cyBlYXNlOyB9XG4gICNiYWd1ZXR0ZUJveC1zbGlkZXIuYm91bmNlLWZyb20tcmlnaHQge1xuICAgIGFuaW1hdGlvbjogYm91bmNlRnJvbVJpZ2h0IC40cyBlYXNlLW91dDsgfVxuICAjYmFndWV0dGVCb3gtc2xpZGVyLmJvdW5jZS1mcm9tLWxlZnQge1xuICAgIGFuaW1hdGlvbjogYm91bmNlRnJvbUxlZnQgLjRzIGVhc2Utb3V0OyB9XG5cbkBrZXlmcmFtZXMgYm91bmNlRnJvbVJpZ2h0IHtcbiAgMCUge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIDUwJSB7XG4gICAgbWFyZ2luLWxlZnQ6IC0zMHB4OyB9XG4gIDEwMCUge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cblxuQGtleWZyYW1lcyBib3VuY2VGcm9tTGVmdCB7XG4gIDAlIHtcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxuICA1MCUge1xuICAgIG1hcmdpbi1sZWZ0OiAzMHB4OyB9XG4gIDEwMCUge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cblxuLmJhZ3VldHRlQm94LWJ1dHRvbiNuZXh0LWJ1dHRvbiwgLmJhZ3VldHRlQm94LWJ1dHRvbiNwcmV2aW91cy1idXR0b24ge1xuICB0b3A6IDUwJTtcbiAgdG9wOiBjYWxjKDUwJSAtIDMwcHgpO1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiA2MHB4OyB9XG5cbi5iYWd1ZXR0ZUJveC1idXR0b24ge1xuICBjb2xvcjogd2hpdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvdXRsaW5lOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogMTUlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgZm9udDogMS42ZW0gc2Fucy1zZXJpZjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuNHMgZWFzZTsgfVxuICAuYmFndWV0dGVCb3gtYnV0dG9uI25leHQtYnV0dG9uIHtcbiAgICByaWdodDogMiU7IH1cbiAgLmJhZ3VldHRlQm94LWJ1dHRvbiNwcmV2aW91cy1idXR0b24ge1xuICAgIGxlZnQ6IDIlOyB9XG4gIC5iYWd1ZXR0ZUJveC1idXR0b24jY2xvc2UtYnV0dG9uIHtcbiAgICB0b3A6IDIwcHg7XG4gICAgcmlnaHQ6IDIlO1xuICAgIHJpZ2h0OiBjYWxjKDIlICsgNnB4KTtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7IH1cbiAgLmJhZ3VldHRlQm94LWJ1dHRvbiBzdmcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDsgfVxuICAgIC5iYWd1ZXR0ZUJveC1idXR0b24gc3ZnIGcsXG4gICAgLmJhZ3VldHRlQm94LWJ1dHRvbiBzdmcgcG9seWxpbmUge1xuICAgICAgc3Ryb2tlOiB3aGl0ZTsgfVxuXG4vKlxuUHJlbG9hZGVyXG5Cb3Jyb3dlZCBmcm9tIGh0dHA6Ly90b2JpYXNhaGxpbi5jb20vc3BpbmtpdC9cbiAqL1xuLmJhZ3VldHRlQm94LXNwaW5uZXIge1xuICB3aWR0aDogNDBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIG1hcmdpbi1sZWZ0OiAtMjBweDsgfVxuXG4uYmFndWV0dGVCb3gtZG91YmxlLWJvdW5jZTEsXG4uYmFndWV0dGVCb3gtZG91YmxlLWJvdW5jZTIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG9wYWNpdHk6IC42O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYW5pbWF0aW9uOiBib3VuY2UgMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7IH1cblxuLmJhZ3VldHRlQm94LWRvdWJsZS1ib3VuY2UyIHtcbiAgYW5pbWF0aW9uLWRlbGF5OiAtMXM7IH1cblxuQGtleWZyYW1lcyBib3VuY2Uge1xuICAwJSwgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTsgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7IH0gfVxuXG4vKlxuXG5PcmdpbmFsIFN0eWxlIGZyb20gZXRoYW5zY2hvb25vdmVyLmNvbS9zb2xhcml6ZWQgKGMpIEplcmVteSBIdWxsIDxzb3VyZHJ1bXNAZ21haWwuY29tPlxuXG4qL1xuLmhsanMge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgY29sb3I6ICM4Mzk0OTY7IH1cblxuLmhsanMtY29tbWVudCxcbi5obGpzLXF1b3RlIHtcbiAgY29sb3I6ICM1ODZlNzU7IH1cblxuLyogU29sYXJpemVkIEdyZWVuICovXG4uaGxqcy1rZXl3b3JkLFxuLmhsanMtc2VsZWN0b3ItdGFnLFxuLmhsanMtYWRkaXRpb24ge1xuICBjb2xvcjogIzg1OTkwMDsgfVxuXG4vKiBTb2xhcml6ZWQgQ3lhbiAqL1xuLmhsanMtbnVtYmVyLFxuLmhsanMtc3RyaW5nLFxuLmhsanMtbWV0YSAuaGxqcy1tZXRhLXN0cmluZyxcbi5obGpzLWxpdGVyYWwsXG4uaGxqcy1kb2N0YWcsXG4uaGxqcy1yZWdleHAge1xuICBjb2xvcjogIzJhYTE5ODsgfVxuXG4vKiBTb2xhcml6ZWQgQmx1ZSAqL1xuLmhsanMtdGl0bGUsXG4uaGxqcy1zZWN0aW9uLFxuLmhsanMtbmFtZSxcbi5obGpzLXNlbGVjdG9yLWlkLFxuLmhsanMtc2VsZWN0b3ItY2xhc3Mge1xuICBjb2xvcjogIzI2OGJkMjsgfVxuXG4vKiBTb2xhcml6ZWQgWWVsbG93ICovXG4uaGxqcy1hdHRyaWJ1dGUsXG4uaGxqcy1hdHRyLFxuLmhsanMtdmFyaWFibGUsXG4uaGxqcy10ZW1wbGF0ZS12YXJpYWJsZSxcbi5obGpzLWNsYXNzIC5obGpzLXRpdGxlLFxuLmhsanMtdHlwZSB7XG4gIGNvbG9yOiAjYjU4OTAwOyB9XG5cbi8qIFNvbGFyaXplZCBPcmFuZ2UgKi9cbi5obGpzLXN5bWJvbCxcbi5obGpzLWJ1bGxldCxcbi5obGpzLXN1YnN0LFxuLmhsanMtbWV0YSxcbi5obGpzLW1ldGEgLmhsanMta2V5d29yZCxcbi5obGpzLXNlbGVjdG9yLWF0dHIsXG4uaGxqcy1zZWxlY3Rvci1wc2V1ZG8sXG4uaGxqcy1saW5rIHtcbiAgY29sb3I6ICNjYjRiMTY7IH1cblxuLyogU29sYXJpemVkIFJlZCAqL1xuLmhsanMtYnVpbHRfaW4sXG4uaGxqcy1kZWxldGlvbiB7XG4gIGNvbG9yOiAjZGMzMjJmOyB9XG5cbi5obGpzLWZvcm11bGEge1xuICBiYWNrZ3JvdW5kOiAjMDczNjQyOyB9XG5cbi5obGpzLWVtcGhhc2lzIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi5obGpzLXN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi53ZWxjb21lIHtcbiAgdHJhbnNpdGlvbjogdG9wIDAuN3MgZWFzZSwgb3BhY2l0eSAwLjdzIGVhc2UsIHRyYW5zZm9ybSAwLjdzIGVhc2U7IH1cblxuLmhlYWRlciwgLm5hdiB7XG4gIHRyYW5zaXRpb246IGhlaWdodCAwLjRzIGVhc2U7IH1cblxuLmxpbmstc2VjdGlvbiB7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLCB3aWR0aCAwLjRzIGVhc2U7IH1cblxuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxKTsgfVxuICA1MCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlKDEuMik7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMSk7IH0gfVxuXG4ubWFya3VwLS1saW5rLFxuLmxpbmstZGVmYXVsdCB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAubWFya3VwLS1saW5rOmhvdmVyLCAubWFya3VwLS1saW5rOmFjdGl2ZSwgLm1hcmt1cC0tbGluazpmb2N1cyxcbiAgLmxpbmstZGVmYXVsdDpob3ZlcixcbiAgLmxpbmstZGVmYXVsdDphY3RpdmUsXG4gIC5saW5rLWRlZmF1bHQ6Zm9jdXMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4ubGluay1sYXJnZSxcbi5saW5rLWludmVydGVkIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAubGluay1sYXJnZTpob3ZlciwgLmxpbmstbGFyZ2U6YWN0aXZlLCAubGluay1sYXJnZTpmb2N1cyxcbiAgLmxpbmstaW52ZXJ0ZWQ6aG92ZXIsXG4gIC5saW5rLWludmVydGVkOmFjdGl2ZSxcbiAgLmxpbmstaW52ZXJ0ZWQ6Zm9jdXMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG5cblxuLmRlY29yYXRlZCB7XG4gIGJvcmRlci1jb2xvcjogIzMyMzIzMjtcbiAgYm9yZGVyLWJvdHRvbTogMC4zMzMzMnJlbSBzb2xpZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIFxuICAuZGVjb3JhdGVkLS10aGluIHtcbiAgICBib3JkZXItYm90dG9tOiAwLjE2NjY2cmVtIHNvbGlkOyB9XG5cbi5saW5rLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBub25lOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLmxpbmstc2VjdGlvbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICB6LWluZGV4OiAyMDtcbiAgICAgIHdpZHRoOiAwLjY2NjY1cmVtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDY4Ljc1ZW0pIHtcbiAgICAubGluay1zZWN0aW9uIHtcbiAgICAgIHdpZHRoOiAwLjk5OTk3cmVtOyB9IH1cbiAgLmxpbmstc2VjdGlvbjpob3ZlciwgLmxpbmstc2VjdGlvbjphY3RpdmUsIC5saW5rLXNlY3Rpb246Zm9jdXMge1xuICAgIHdpZHRoOiAwLjk5OTk3cmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDY4Ljc1ZW0pIHtcbiAgICAgIC5saW5rLXNlY3Rpb246aG92ZXIsIC5saW5rLXNlY3Rpb246YWN0aXZlLCAubGluay1zZWN0aW9uOmZvY3VzIHtcbiAgICAgICAgd2lkdGg6IDEuMzMzM3JlbTsgfSB9XG4gIC5saW5rLXNlY3Rpb24tLWZha2Uge1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjguNzVlbSkge1xuICAgICAgLmxpbmstc2VjdGlvbi0tZmFrZSB7XG4gICAgICAgIHdpZHRoOiAwOyB9IH1cbiAgLmxpbmstc2VjdGlvbi0tY2hhbmdlIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5saW5rLXNlY3Rpb24tLWNoYW5nZTpob3ZlciwgLmxpbmstc2VjdGlvbi0tY2hhbmdlOmFjdGl2ZSwgLmxpbmstc2VjdGlvbi0tY2hhbmdlOmZvY3VzIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5saW5rLWFzLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMjMyMzI7XG4gIHBhZGRpbmctcmlnaHQ6IDAuMzMzMzJyZW07XG4gIHBhZGRpbmctbGVmdDogMC4zMzMzMnJlbTtcbiAgY29sb3I6ICM4YThhOGE7XG4gIGJvcmRlcjogMC4yMjIyMnJlbSBzb2xpZCAjMzIzMjMyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmxpbmstYXMtYnV0dG9uIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwLjY2NjY1cmVtO1xuICAgICAgcGFkZGluZy1ib3R0b206IDAuNjY2NjVyZW07XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxLjMzMzNyZW07XG4gICAgICBwYWRkaW5nLWxlZnQ6IDEuMzMzM3JlbTsgfSB9XG4gIC5saW5rLWFzLWJ1dHRvbjpob3ZlciwgLmxpbmstYXMtYnV0dG9uOmFjdGl2ZSwgLmxpbmstYXMtYnV0dG9uOmZvY3VzIHtcbiAgICBjb2xvcjogIzMyMzIzMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLmxpbmstc2VjdGlvbi0tY29udGFjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MGMzODI7IH1cblxuLmxpbmstc2VjdGlvbi0tYmxvZyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1ZGM1ZGM7IH1cblxuLmxpbmstc2VjdGlvbi0td29yayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNzg0NzQ7IH1cblxuLmxpbmstc2VjdGlvbi0tbGVnYWwtbm90aWNlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLmxpbmstc2VjdGlvbi0tZXJyb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzBjMzgyOyB9XG5cbi5saXN0LS11bCB7XG4gIHBhZGRpbmctbGVmdDogMS4xZW07IH1cbiAgLmxpc3QtLXVsIC5saXN0X19pdGVtIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjMzMzMycmVtOyB9XG5cbi5saXN0LS1vbCB7XG4gIGNvdW50ZXItcmVzZXQ6IHN0ZXAtY291bnRlcjtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAubGlzdC0tb2wgLmxpc3RfX2l0ZW0ge1xuICAgIHBhZGRpbmctbGVmdDogMS44ZW07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGNvdW50ZXItaW5jcmVtZW50OiBzdGVwLWNvdW50ZXI7IH1cbiAgICAubGlzdC0tb2wgLmxpc3RfX2l0ZW06OmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiBjb3VudGVyKHN0ZXAtY291bnRlcikgXCIuXCI7IH1cblxuLmdyYWYtLWNvZGVibG9jayB7XG4gIGZvbnQtc2l6ZTogMC41ODMzM3JlbTsgfVxuXG4uZ3JhZi0taDMge1xuICBtYXgtd2lkdGg6IDkwJTsgfVxuXG4uYXJ0aWNsZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuYXJ0aWNsZS0tcHJldmlldyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4zMzMzcmVtOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5hcnRpY2xlLS1wcmV2aWV3IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS45OTk5NXJlbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDAuNjY2NjVyZW07IH0gfVxuXG4uYXJ0aWNsZV9fZGF0ZSB7XG4gIG1hcmdpbi1ib3R0b206IDAuMzMzMzJyZW07XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLmFydGljbGUtLXNpbmdsZSAuYXJ0aWNsZV9fZGF0ZSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmFydGljbGVfX2hlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDAuNjY2NjVyZW07IH1cblxuLmFydGljbGVfX2ludHJvIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS4yOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmFydGljbGVfX2ludHJvIHtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtOyB9IH1cblxuLmFydGljbGVfX2Zvb3RlciB7XG4gIG1hcmdpbi1ib3R0b206IDEuMzMzM3JlbTtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmFydGljbGVfX2Zvb3RlciB7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07IH0gfVxuXG4uYXJ0aWNsZV9fYXV0aG9yIHtcbiAgbWFyZ2luLWJvdHRvbTogMC42NjY2NXJlbTsgfVxuXG4uYXJ0aWNsZV9fYXV0aG9yLWltYWdlIHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjY2NjY1cmVtO1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDEyJTtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTsgfVxuXG4ubm90ZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuMzMzM3JlbTsgfVxuXG4ubm90ZV9fZm9vdGVyIHtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjY2NjY1cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLm5vdGVfX2Zvb3RlciB7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07IH0gfVxuXG4ubm90ZV9faW1hZ2Uge1xuICBtYXJnaW4tYm90dG9tOiAwLjY2NjY1cmVtOyB9XG5cbi5ib3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC5ib3g6OmJlZm9yZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnOyB9XG4gICAgLmJveDo6YmVmb3JlOjpiZWZvcmUge1xuICAgICAgcGFkZGluZy10b3A6IDEwMCU7IH1cblxuLmJveF9fY29udGVudCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDsgfVxuXG4uYm94LS0yLTE6OmJlZm9yZSB7XG4gIHBhZGRpbmctdG9wOiA1MCU7IH1cblxuLmJveC0tNC0zOjpiZWZvcmUge1xuICBwYWRkaW5nLXRvcDogNzUlOyB9XG5cbi5idXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxuLmJ1dHRvbi0tY2xvc2Uge1xuICBjb2xvcjogd2hpdGU7IH1cbiAgLmJ1dHRvbi0tY2xvc2UtLXdlbGNvbWUge1xuICAgIHotaW5kZXg6IDIwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDAuNjY2NjVyZW07XG4gICAgcmlnaHQ6IDAuNjY2NjVyZW07IH1cbiAgICAuY2xvc2Utc3RhdGUtLXdlbGNvbWU6Y2hlY2tlZCB+IC5idXR0b24tLWNsb3NlLS13ZWxjb21lIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmJ1dHRvbi0tbmF2IHtcbiAgY29sb3I6ICM4YThhOGE7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDAuNjY2NjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjk5OTk1cmVtO1xuICBmbG9hdDogcmlnaHQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICAuYnV0dG9uLS1uYXYge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5kZXZpY2Uge1xuICBwYWRkaW5nLXRvcDogMS45OTk5NXJlbTtcbiAgcGFkZGluZy1ib3R0b206IDEuOTk5OTVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDAuMzMzMzJyZW07XG4gIHBhZGRpbmctbGVmdDogMC4zMzMzMnJlbTtcbiAgei1pbmRleDogMjA7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMjMyMzI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWF4LXdpZHRoOiAzMCU7XG4gIGJvcmRlci1yYWRpdXM6IDAuNjY2NjVyZW07IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAuZGV2aWNlIHtcbiAgICAgIG1hcmdpbi10b3A6IC02MyU7XG4gICAgICBtYXJnaW4tbGVmdDogLTEuMzMzM3JlbTsgfSB9XG4gIC5kZXZpY2VfX2lubmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzMjMyOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gIC5kZXZpY2UtLXRhYmxldCArIC5kZXZpY2UtLW1vYmlsZSB7XG4gICAgbWFyZ2luLXRvcDogLTU1JTtcbiAgICBtYXJnaW4tbGVmdDogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEuMzMzM3JlbTtcbiAgICBmbG9hdDogcmlnaHQ7IH0gfVxuXG4uZGV2aWNlLS10YWJsZXQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuOTk5OTdyZW07XG4gIG1heC13aWR0aDogODAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2OC43NWVtKSB7XG4gICAgLmRldmljZS0tdGFibGV0IHtcbiAgICAgIHBhZGRpbmc6IDEuNjY2NjJyZW07IH0gfVxuXG4uZGV2aWNlLS1kZXNrdG9wIHtcbiAgcGFkZGluZy10b3A6IDN2dztcbiAgcGFkZGluZy1yaWdodDogMnZ3O1xuICBwYWRkaW5nLWJvdHRvbTogMnZ3O1xuICBwYWRkaW5nLWxlZnQ6IDJ2dztcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDAuMzMzMzJyZW0gMC4zMzMzMnJlbSAwIDA7XG4gIG1heC13aWR0aDogNzAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLmRldmljZS0tZGVza3RvcCB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBtYXgtd2lkdGg6IDkwJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLmRldmljZS0tZGVza3RvcCB7XG4gICAgICBwYWRkaW5nLXRvcDogMC45OTk5N3JlbTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDAuNjY2NjVyZW07XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMC42NjY2NXJlbTtcbiAgICAgIHBhZGRpbmctbGVmdDogMC42NjY2NXJlbTsgfSB9XG4gIC5kZXZpY2UtLWRlc2t0b3A6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMyMzIzMjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm90dG9tOiAtM3Z3O1xuICAgIGxlZnQ6IDUwJTtcbiAgICByaWdodDogYXV0bztcbiAgICBtYXJnaW4tbGVmdDogLTYyJTtcbiAgICB3aWR0aDogMTI0JTtcbiAgICBoZWlnaHQ6IDMuNXZ3O1xuICAgIGJvcmRlci1yYWRpdXM6IDAgMCAxdncgMXZ3OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAgIC5kZXZpY2UtLWRlc2t0b3A6OmFmdGVyIHtcbiAgICAgICAgYm90dG9tOiAtMC45OTk5N3JlbTtcbiAgICAgICAgaGVpZ2h0OiAwLjk5OTk3cmVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAwIDAgMC4xNjY2NnJlbSAwLjE2NjY2cmVtOyB9IH1cblxuLmdhbGxlcnkge1xuICBtYXJnaW4tYm90dG9tOiAxLjMzMzNyZW07IH1cbiAgLmdhbGxlcnlfX2xpbmsge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuZ2FsbGVyeV9fdGh1bWIge1xuICAgIG1hcmdpbi1yaWdodDogMC4zMzMzMnJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjMzMzMycmVtO1xuICAgIGhlaWdodDogOTBweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgICAuZ2FsbGVyeV9fdGh1bWIge1xuICAgICAgICBoZWlnaHQ6IDEwNXB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjguNzVlbSkge1xuICAgICAgLmdhbGxlcnlfX3RodW1iIHtcbiAgICAgICAgaGVpZ2h0OiAxMjBweDsgfSB9XG5cbi5ncmlkIHtcbiAgbWFyZ2luLWxlZnQ6IC0xLjMzMzNyZW07XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmdyaWQge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG5cbi5ncmlkX19jb2x1bW4ge1xuICBwYWRkaW5nLWxlZnQ6IDEuMzMzM3JlbTtcbiAgZmxleDogMTsgfVxuXG4uaWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMC4wNjI1ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDFlbTtcbiAgaGVpZ2h0OiAxZW07XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjsgfVxuXG4uaWNvbi0tbG9nbyB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAyNHB4OyB9XG5cbi5pY29uLS1oZWFydCB7XG4gIGZpbGw6ICNmNzg0NzQ7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLndlYm1lbnRpb25zLW1lbnRpb25zLFxuLndlYm1lbnRpb25zLXJlcG9zdHMsXG4ud2VibWVudGlvbnMtcmVwbGllcyxcbi53ZWJtZW50aW9ucy1saWtlcyB7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi53ZWJtZW50aW9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMC42NjY2NXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMzBlbSkge1xuICAgIC53ZWJtZW50aW9uIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDAuNjY2NjVyZW07XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiA1MCU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC53ZWJtZW50aW9uIHtcbiAgICAgIHdpZHRoOiAzMy4zMzMzJTsgfSB9XG5cbi53ZWJtZW50aW9uLWF1dGhvciB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ud2VibWVudGlvbi1hdXRob3JfX21ldGEge1xuICBmb250LXNpemU6IDAuNTgzMzNyZW07XG4gIHBhZGRpbmctdG9wOiAwLjMzMzMycmVtOyB9XG5cbi53ZWJtZW50aW9uLWF1dGhvcl9fcGhvdG8ge1xuICBtYXJnaW4tcmlnaHQ6IDAuMzMzMzJyZW07XG4gIGZsb2F0OiBsZWZ0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTsgfVxuXG4ud2VibWVudGlvbi10ZXh0IHtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtO1xuICBtYXJnaW4tdG9wOiAwLjY2NjY1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjY2NjY1cmVtO1xuICBjbGVhcjogbGVmdDsgfVxuXG4ubG9nbyB7XG4gIGNvbG9yOiAjOGE4YThhO1xuICBtYXJnaW4tbGVmdDogMC42NjY2NXJlbTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjk5OTk1cmVtOyB9XG4gIC5sb2dvOmhvdmVyLCAubG9nbzphY3RpdmUsIC5sb2dvOmZvY3VzIHtcbiAgICBjb2xvcjogd2hpdGU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICAubG9nbyB7XG4gICAgICBtYXJnaW4tbGVmdDogMC42NjY2NXJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2OC43NWVtKSB7XG4gICAgLmxvZ28ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAuOTk5OTdyZW07IH0gfVxuXG4ubG92ZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxKTtcbiAgdHJhbnNmb3JtLW9yaWdpbjogNTAlIDUwJTtcbiAgd2lkdGg6IDcwJTtcbiAgaGVpZ2h0OiA3MCU7XG4gIGFuaW1hdGlvbi1uYW1lOiBwdWxzZTtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7IH1cblxuLnBhZ2luYXRpb24ge1xuICBtYXJnaW4tdG9wOiAxLjMzMzNyZW07IH1cbiAgLnBhZ2luYXRpb25fX25ld2VyIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgLnBhZ2luYXRpb25fX29sZGVyIHtcbiAgICBmbG9hdDogbGVmdDsgfVxuXG4ucHJvamVjdCB7XG4gIHBhZGRpbmctYm90dG9tOiAyLjY2NjZyZW07XG4gIG1hcmdpbi1ib3R0b206IDEuMzMzM3JlbTsgfVxuICAucHJvamVjdDpsYXN0LW9mLXR5cGUge1xuICAgIGJvcmRlci1ib3R0b206IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAucHJvamVjdC5kZWNvcmF0ZWQge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMDsgfSB9XG5cbi5wcm9qZWN0X19oZWFkZXIge1xuICBtYXJnaW4tYm90dG9tOiAwLjY2NjY1cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLnByb2plY3RfX2hlYWRlciB7XG4gICAgICBmb250LXNpemU6IDIuNjY2NjdyZW07XG4gICAgICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjA1OyB9IH1cblxuLnByb2plY3RfX2xpbmsge1xuICBwYWRkaW5nLXRvcDogMC4zMzMzMnJlbTtcbiAgcGFkZGluZy1ib3R0b206IDAuMzMzMzJyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDEuMzMzM3JlbTtcbiAgcGFkZGluZy1sZWZ0OiAxLjMzMzNyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICBjb2xvcjogI2Y3ODQ3NDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAucHJvamVjdF9fbGluayB7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdHJhbnNmb3JtOiBub25lOyB9IH1cblxuLnByb2plY3RfX2ZpZ3VyZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuMzMzM3JlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5wcm9qZWN0X19maWd1cmUtLWZpcnN0IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAucHJvamVjdF9fZmlndXJlLS1kZXNrdG9wIHtcbiAgICBtYXJnaW4tYm90dG9tOiBjYWxjKDEuMzMzM3JlbSArIDV2dyk7IH1cblxuLnNvdXJjZWJveCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxLjk5OTk1cmVtO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzMjMyO1xuICBjb2xvcjogd2hpdGU7XG4gIHotaW5kZXg6IDIwO1xuICBmb250LXNpemU6IDAuNTgzMzNyZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigxMHB4KTsgfVxuICAuc291cmNlYm94X19pbm5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBzY3JvbGw7IH1cblxuLnRhZ2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi50aWxlcyB7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDEuOTk5OTVyZW0pO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLnRpbGVzIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBoZWlnaHQ6IDEwMHZoOyB9IH1cblxuLnRpbGUge1xuICBwYWRkaW5nLXJpZ2h0OiAwLjY2NjY1cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDAuNjY2NjVyZW07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAudGlsZSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgIHdpZHRoOiAzMy4zMzMzJTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3OC4xMjVlbSkge1xuICAgIC50aWxlIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgcGFkZGluZy1yaWdodDogMi4zMzMyN3JlbTtcbiAgICAgIHBhZGRpbmctbGVmdDogMi4zMzMyN3JlbTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfSB9XG4gIC50aWxlOmhvdmVyIC50aWxlX190ZWFzZXIsIC50aWxlOmFjdGl2ZSAudGlsZV9fdGVhc2VyLCAudGlsZTpmb2N1cyAudGlsZV9fdGVhc2VyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4udGlsZS0tY29udGFjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MGMzODI7IH1cblxuLnRpbGUtLWJsb2cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWRjNWRjOyB9XG5cbi50aWxlLS13b3JrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ODQ3NDsgfVxuXG4udGlsZS0tbGVnYWwtbm90aWNlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLnRpbGUtLWVycm9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzcwYzM4MjsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAudGlsZV9faW5uZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgd2lkdGg6IDI0NXB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY4Ljc1ZW0pIHtcbiAgLnRpbGVfX2lubmVyIHtcbiAgICB3aWR0aDogMjg1cHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAwZW0pIHtcbiAgLnRpbGVfX2lubmVyIHtcbiAgICB3aWR0aDogNDEwcHg7IH0gfVxuXG4udGlsZV9fdGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLnRpbGVfX3RpdGxlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICBmb250LXNpemU6IDJyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC50aWxlX190aXRsZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjMzMzNyZW07XG4gICAgICBmb250LXNpemU6IDFyZW07IH0gfVxuXG4udGlsZV9fdGVhc2VyIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC50aWxlX190ZWFzZXIge1xuICAgICAgZm9udC1zaXplOiAyLjY2NjY3cmVtO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjA1OyB9IH1cbiAgQG1lZGlhIChtYXgtaGVpZ2h0OiA2NDBweCkge1xuICAgIC50aWxlX190ZWFzZXIge1xuICAgICAgZm9udC1zaXplOiA4dmg7IH0gfVxuXG4ud2VsY29tZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwLjY2NjY1cmVtO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBwYWRkaW5nOiAwLjY2NjY1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzMjMyO1xuICBjb2xvcjogd2hpdGU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLndlbGNvbWUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgYm90dG9tOiAxLjMzMzNyZW07XG4gICAgICBwYWRkaW5nOiAxLjMzMzNyZW07IH0gfVxuICAuY2xvc2Utc3RhdGUtLXdlbGNvbWU6Y2hlY2tlZCB+IC53ZWxjb21lIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgICAgLmNsb3NlLXN0YXRlLS13ZWxjb21lOmNoZWNrZWQgfiAud2VsY29tZSB7XG4gICAgICAgIHRvcDogMS45OTk5NXJlbTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDAlKTsgfSB9XG4gIC53ZWxjb21lLS1kb25lIHtcbiAgICB0cmFuc2l0aW9uOiB1bnNldDsgfVxuXG4ud2VsY29tZV9faW5uZXIge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBmbGV4OiAxO1xuICBmb250LXNpemU6IGluaGVyaXQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDcyMHB4KSBhbmQgKG1heC1oZWlnaHQ6IDY0MHB4KSB7XG4gICAgLndlbGNvbWVfX2lubmVyIHtcbiAgICAgIGZvbnQtc2l6ZTogMTB2aDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gIC53cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMTgwcHg7IH0gfVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMyMzIzMjtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXNpemU6IDFyZW07XG4gIGhlaWdodDogMS45OTk5NXJlbTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjguNzVlbSkge1xuICAgIC5oZWFkZXIge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgei1pbmRleDogNTA7IH0gfVxuICAuaGVhZGVyLS1uYXYtLWFjdGl2ZSB7XG4gICAgaGVpZ2h0OiAxMDB2aDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgICAuaGVhZGVyLS1uYXYtLWFjdGl2ZSB7XG4gICAgICAgIGhlaWdodDogMS45OTk5NXJlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgLnNpdGUtLWhvbWVwYWdlIC5oZWFkZXItLXRvcCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cbiAgLmhlYWRlci0td2VsY29tZSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgICAuaGVhZGVyLS13ZWxjb21lIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB0b3A6IGF1dG87XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLmhlYWRlcl9fbGVnYWwge1xuICBmb250LXNpemU6IDAuNTgzMzNyZW07XG4gIGNvbG9yOiAjOGE4YThhO1xuICBtYXJnaW4tcmlnaHQ6IDAuNjY2NjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjk5OTk1cmVtO1xuICBkaXNwbGF5OiBub25lO1xuICBmbG9hdDogcmlnaHQ7IH1cbiAgLmhlYWRlcl9fbGVnYWw6aG92ZXIsIC5oZWFkZXJfX2xlZ2FsOmFjdGl2ZSwgLmhlYWRlcl9fbGVnYWw6Zm9jdXMge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC5oZWFkZXJfX2xlZ2FsIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMC42NjY2NXJlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLnNpdGUtLWhvbWVwYWdlIC5oZWFkZXJfX2xlZ2FsIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uaGVhZGVyX19jb2RlIHtcbiAgY29sb3I6ICM4YThhOGE7XG4gIG1hcmdpbi1yaWdodDogMC45OTk5N3JlbTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjk5OTk1cmVtO1xuICBkaXNwbGF5OiBub25lO1xuICBmbG9hdDogcmlnaHQ7IH1cbiAgLmhlYWRlcl9fY29kZTpob3ZlciwgLmhlYWRlcl9fY29kZTphY3RpdmUsIC5oZWFkZXJfX2NvZGU6Zm9jdXMge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5oZWFkZXJfX2NvZGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEuMzMzM3JlbTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLm5hdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMjMyMzI7XG4gIGhlaWdodDogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC5uYXYge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICB6LWluZGV4OiA0MDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgcGFkZGluZy1sZWZ0OiA1LjMzMzJyZW07XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHRyYW5zaXRpb246IHVuc2V0OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAubmF2IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDsgfSB9XG4gIC5uYXYtLWFjdGl2ZSB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMS45OTk5NXJlbSk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNDVlbSkge1xuICAgICAgLm5hdi0tYWN0aXZlIHtcbiAgICAgICAgaGVpZ2h0OiBhdXRvOyB9IH1cblxuLm5hdl9fbGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgICAubmF2X19saXN0IHtcbiAgICAgIHdpZHRoOiA0MHZ3O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA2OC43NWVtKSB7XG4gICAgLm5hdl9fbGlzdCB7XG4gICAgICB3aWR0aDogMzB2dzsgfSB9XG5cbi5uYXZfX2l0ZW0ge1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbGV4OiAyOyB9XG4gIEBtZWRpYSAobWluLWhlaWdodDogNDgwcHgpIHtcbiAgICAubmF2X19pdGVtIHtcbiAgICAgIGZsZXg6IDQ7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDVlbSkge1xuICAgIC5uYXZfX2l0ZW0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBmbGV4OiBub25lOyB9IH1cblxuLm5hdl9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgcGFkZGluZy1yaWdodDogMC42NjY2NXJlbTtcbiAgcGFkZGluZy1sZWZ0OiAwLjY2NjY1cmVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLm5hdl9fbGluayB7XG4gICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICBjb2xvcjogIzhhOGE4YTtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBsaW5lLWhlaWdodDogMS45OTk5NXJlbTsgfVxuICAgICAgLm5hdl9fbGluazpob3ZlciwgLm5hdl9fbGluazphY3RpdmUsIC5uYXZfX2xpbms6Zm9jdXMge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH0gfVxuXG4ubmF2X19pdGVtLS1sZWdhbC1ub3RpY2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzIzMjMyO1xuICBmb250LXNpemU6IDFyZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjOGE4YThhO1xuICBmbGV4OiAxOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLm5hdl9faXRlbS0tbGVnYWwtbm90aWNlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAubmF2X19pdGVtLS1sZWdhbC1ub3RpY2UgLm5hdl9fbGluayB7XG4gICAgY29sb3I6ICM4YThhOGE7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0tY29udGFjdCAubmF2X19saW5rOmhvdmVyLCAubmF2X19pdGVtLS1jb250YWN0IC5uYXZfX2xpbms6YWN0aXZlLCAubmF2X19pdGVtLS1jb250YWN0IC5uYXZfX2xpbms6Zm9jdXMge1xuICAgIGNvbG9yOiAjNzBjMzgyOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0tY29udGFjdCAubmF2X19saW5rLS1hY3RpdmUge1xuICAgIGNvbG9yOiAjNzBjMzgyOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0tYmxvZyAubmF2X19saW5rOmhvdmVyLCAubmF2X19pdGVtLS1ibG9nIC5uYXZfX2xpbms6YWN0aXZlLCAubmF2X19pdGVtLS1ibG9nIC5uYXZfX2xpbms6Zm9jdXMge1xuICAgIGNvbG9yOiAjNWRjNWRjOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0tYmxvZyAubmF2X19saW5rLS1hY3RpdmUge1xuICAgIGNvbG9yOiAjNWRjNWRjOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0td29yayAubmF2X19saW5rOmhvdmVyLCAubmF2X19pdGVtLS13b3JrIC5uYXZfX2xpbms6YWN0aXZlLCAubmF2X19pdGVtLS13b3JrIC5uYXZfX2xpbms6Zm9jdXMge1xuICAgIGNvbG9yOiAjZjc4NDc0OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0td29yayAubmF2X19saW5rLS1hY3RpdmUge1xuICAgIGNvbG9yOiAjZjc4NDc0OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ1ZW0pIHtcbiAgLm5hdl9faXRlbS0tbGVnYWwtbm90aWNlIC5uYXZfX2xpbms6aG92ZXIsIC5uYXZfX2l0ZW0tLWxlZ2FsLW5vdGljZSAubmF2X19saW5rOmFjdGl2ZSwgLm5hdl9faXRlbS0tbGVnYWwtbm90aWNlIC5uYXZfX2xpbms6Zm9jdXMge1xuICAgIGNvbG9yOiB3aGl0ZTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gIC5uYXZfX2l0ZW0tLWxlZ2FsLW5vdGljZSAubmF2X19saW5rLS1hY3RpdmUge1xuICAgIGNvbG9yOiB3aGl0ZTsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gIC5uYXZfX2l0ZW0tLWVycm9yIC5uYXZfX2xpbms6aG92ZXIsIC5uYXZfX2l0ZW0tLWVycm9yIC5uYXZfX2xpbms6YWN0aXZlLCAubmF2X19pdGVtLS1lcnJvciAubmF2X19saW5rOmZvY3VzIHtcbiAgICBjb2xvcjogIzcwYzM4MjsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gIC5uYXZfX2l0ZW0tLWVycm9yIC5uYXZfX2xpbmstLWFjdGl2ZSB7XG4gICAgY29sb3I6ICM3MGMzODI7IH0gfVxuXG4ucGFnZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDAuNjY2NjVyZW07XG4gIG1pbi1oZWlnaHQ6IDEwMHZoOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLnBhZ2Uge1xuICAgICAgcGFkZGluZzogMS4zMzMzcmVtOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAucGFnZSB7XG4gICAgICBwYWRkaW5nLXRvcDogMS45OTk5NXJlbTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxLjk5OTk1cmVtO1xuICAgICAgcGFkZGluZy1yaWdodDogMi42NjY2cmVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiAyLjY2NjZyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjguNzVlbSkge1xuICAgIC5wYWdlIHtcbiAgICAgIG1hcmdpbi10b3A6IDEuOTk5OTVyZW07IH0gfVxuXG4ucGFnZS0tY29udGFjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3MGMzODI7IH1cblxuLnBhZ2UtLWJsb2cge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWRjNWRjOyB9XG5cbi5wYWdlLS13b3JrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ODQ3NDsgfVxuXG4ucGFnZS0tbGVnYWwtbm90aWNlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cblxuLnBhZ2UtLWVycm9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzcwYzM4MjsgfVxuXG4ucGFnZS0taG9tZSB7XG4gIHBhZGRpbmc6IDA7XG4gIG1pbi1oZWlnaHQ6IDA7IH1cbiAgQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XG4gICAgLnBhZ2UtLWhvbWUge1xuICAgICAgZm9udC1zaXplOiA2dnc7IH0gfVxuICBAbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIC5wYWdlLS1ob21lIHtcbiAgICAgIGZvbnQtc2l6ZTogNi41dmg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjguNzVlbSkge1xuICAgIC5wYWdlLS1ob21lIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH0gfVxuXG4ucGFnZS0tY29udGFjdCAubGluay1zZWN0aW9uLS1ibG9nLFxuLnBhZ2UtLWNvbnRhY3QgLmxpbmstc2VjdGlvbi0td29yayB7XG4gIHJpZ2h0OiAwOyB9XG5cbi5wYWdlLS1sZWdhbC1ub3RpY2UgLmxpbmstc2VjdGlvbi0tYmxvZyxcbi5wYWdlLS1sZWdhbC1ub3RpY2UgLmxpbmstc2VjdGlvbi0tY29udGFjdCxcbi5wYWdlLS1sZWdhbC1ub3RpY2UgLmxpbmstc2VjdGlvbi0td29yayxcbi5wYWdlLS1ibG9nIC5saW5rLXNlY3Rpb24tLWJsb2csXG4ucGFnZS0tYmxvZyAubGluay1zZWN0aW9uLS1jb250YWN0LFxuLnBhZ2UtLWJsb2cgLmxpbmstc2VjdGlvbi0td29yayB7XG4gIGxlZnQ6IDA7IH1cblxuLnBhZ2UtLXdvcmsgLmxpbmstc2VjdGlvbi0tY29udGFjdCB7XG4gIGxlZnQ6IDA7IH1cblxuLnBhZ2UtLXdvcmsgLmxpbmstc2VjdGlvbi0tYmxvZyB7XG4gIHJpZ2h0OiAwOyB9XG5cbi5wYWdlLS1lcnJvciB7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1nLzQwNC5wbmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cblxuLnBhZ2UtLWxvdmUge1xuICBjb2xvcjogd2hpdGU7IH1cbiAgLnBhZ2UtLWxvdmUgLmdyYWYtLWgxIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA2MCU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAxO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ucGFnZV9faGVhZGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDAuMzMzMzJyZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAucGFnZV9faGVhZGVyOmhvdmVyLCAucGFnZV9faGVhZGVyOmFjdGl2ZSwgLnBhZ2VfX2hlYWRlcjpmb2N1cyB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gIC5jb250ZW50LXdyYXBwZXIge1xuICAgIHBhZGRpbmctdG9wOiAxLjMzMzNyZW07IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAuY29udGVudCB7XG4gICAgcGFkZGluZy1sZWZ0OiAyLjY2NjZyZW07XG4gICAgd2lkdGg6IDYwJTtcbiAgICBmbG9hdDogbGVmdDsgfSB9XG5cbi5jb250ZW50LS1wcm9qZWN0IHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5jb250ZW50LS1wcm9qZWN0IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgLmNvbnRlbnQtLWJsb2cge1xuICAgIG1hcmdpbi10b3A6IC0zLjMzMzI1cmVtO1xuICAgIHdpZHRoOiA3MiU7IH0gfVxuXG4uY29udGVudC0tbGVnYWwtbm90aWNlIHtcbiAgZm9udC1zaXplOiAwLjU4MzMzcmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA0NWVtKSB7XG4gICAgLmNvbnRlbnQtLWxlZ2FsLW5vdGljZSB7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07IH0gfVxuXG4uY29udGVudF9fYnV6endvcmRzIC5saXN0LS11bCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi1sZWZ0OiAyJTtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDQ4JTtcbiAgbGluZS1oZWlnaHQ6IDI7XG4gIGJvcmRlci10b3A6IDRweCBzb2xpZCAjMzIzMjMyO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIC5jb250ZW50X19idXp6d29yZHMgLmxpc3QtLXVsOm50aC1jaGlsZCgybikge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMiU7IH1cbiAgLmNvbnRlbnRfX2J1enp3b3JkcyAubGlzdC0tdWw6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmctdG9wOiAwLjMzMzMycmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAwLjMzMzMycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjMzMzM7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmNvbnRlbnRfX2J1enp3b3JkcyAubGlzdF9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMzIzMjMyOyB9XG4gIC5jb250ZW50X19idXp6d29yZHMgLmxpc3RfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAuc2lkZWJhciB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDQwJTsgfSB9XG5cbi5zaWRlYmFyLS1ibG9nIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgIC5zaWRlYmFyLS1ibG9nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDI4JTsgfSB9XG5cbi5jbGVhcmZpeDo6YWZ0ZXIsXG4uZ2FsbGVyeTo6YWZ0ZXIsXG4ud2VibWVudGlvbnMtbWVudGlvbnM6OmFmdGVyLFxuLndlYm1lbnRpb25zLXJlcG9zdHM6OmFmdGVyLFxuLndlYm1lbnRpb25zLXJlcGxpZXM6OmFmdGVyLFxuLndlYm1lbnRpb25zLWxpa2VzOjphZnRlcixcbi53ZWJtZW50aW9uLWF1dGhvcjo6YWZ0ZXIsXG4uY29udGVudC13cmFwcGVyOjphZnRlcixcbi5jb250ZW50X19idXp6d29yZHM6OmFmdGVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbnRlbnQ6ICcnO1xuICBjbGVhcjogYm90aDsgfVxuXG4uaGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLnZpc3VhbGx5aGlkZGVuLFxuLmNsb3NlLXN0YXRlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDFweDtcbiAgbWFyZ2luOiAtMXB4O1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7IH1cbiAgLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsIC52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6Zm9jdXMsXG4gIC5mb2N1c2FibGUuY2xvc2Utc3RhdGU6YWN0aXZlLFxuICAuZm9jdXNhYmxlLmNsb3NlLXN0YXRlOmZvY3VzIHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW46IDA7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgY2xpcDogYXV0bzsgfVxuXG4uaW52aXNpYmxlIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4iLCIvLyBVc2Ugc2FuZSBib3ggc2l6aW5nIHRocm91Z2hvdXQgdGhlIHdob2xlIHByb2plY3QsIGRvbid0IGFkanVzdCB0ZXh0XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50LWxpZ2F0dXJlczogY29tbW9uLWxpZ2F0dXJlcyBjb250ZXh0dWFsO1xuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6ICdrZXJuJywgJ2xpZ2EnLCAnY2xpZycsICdjYWx0Jztcbn1cblxuKiB7XG4gICYsXG4gICY6OmJlZm9yZSxcbiAgJjo6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIH1cbn1cblxuXG4vLyBCYXNpYyBlbGVtZW50cyByZXNldCBzdHlsZXMsIGFkZGl0aW9uYWwgdG8gZnJjay1ub3JtYWxpemVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gUmVtb3ZlIG1hcmdpbiArIHBhZGRpbmcgZnJvbSBtb3N0IGJsb2NrIGVsZW1lbnRzXG5ib2R5LFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCxcbmJsb2NrcXVvdGUsXG5wcmUsXG5kbCxcbmRkLFxub2wsXG51bCxcbmhyLFxuZm9ybSxcbmZpZWxkc2V0LFxubGVnZW5kLFxuZmlndXJlLFxudGFibGUsXG50aCxcbnRkLFxuY2FwdGlvbixcbmhyIHtcbiAgbWFyZ2luOiAgMDtcbiAgcGFkZGluZzogMDtcbn1cblxuXG4vLyBGb3JtcywgaW5wdXRzLCBidXR0b25zOiBkZWZhdWx0IHNhbmUgc3R5bGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIGFsbG93IHJlc2l6aW5nIG9mIHRleHRhcmVhcyB2ZXJ0aWNhbGx5XG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7XG59XG5cbi8vIG5vIGJvcmRlciBmb3IgdGhlIGZpZWxkc2V0XG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbn1cblxuLy8gcG9zaXRpb24gbGFiZWxzIG9uIHRvcCBvZiB0aGVpciByZWxhdGVkIGlucHV0cyBieSBkZWZhdWx0LFxuLy8gYW5kIGdpdmUgdGhlbSBhIGhpbnQgdG8gbWFrZSB0aGVtIGNsaWNrYWJsZSBieSBzZXR0aW5nIGN1cnNvclxubGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4vLyBkb250IGFsbG93IHVuc2VsZWN0YWJsZSBlbGVtZW50cyB0byBiZSBzZWxlY3RlZFxuW3Vuc2VsZWN0YWJsZV0ge1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbn1cblxuXG4vLyBNZWRpYSBlbGVtZW50cywgc3VjaCBhcyBpbWFnZXMsIHZpZGVvcyBzdmcgZXRjLlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBSZW1vdmUgdGhlIGdhcCBiZXR3ZWVuIG1lZGlhIGVsZW1lbnRzIHN1Y2ggYXMgYXVkaW8sIGltYWdlcywgdmlkZW9zIGV0Yy5cbi8vIGFuZCB0aGUgYm90dG9tIG9mIHRoZWlyIGNvbnRhaW5lcnNcbmF1ZGlvLFxuY2FudmFzLFxuaWZyYW1lLFxuaW1nLFxuc3ZnLFxudmlkZW8ge1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4vLyBtYWtlIHVzZXIgY29udGVudCBtZWRpYSBlbGVtZW50cyByZXNwb25zaXZlIChtYXgtd2lkdGgpXG5hdWRpbyxcbmlmcmFtZSxcbmltZyxcbnZpZGVvIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cblxuLy8gTGlzdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gbmV2ZXIgZXZlciBzaG93IGxpc3RzIGluIG5hdmlnYXRpb24gb3IgZmllbGRzZXRzIGJsb2NrcyBhcyBsaXN0c1xubmF2LFxuZmllbGRzZXQge1xuICB1bCxcbiAgb2wge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbn1cblxuXG4vLyBUYWJsZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gdXNlIHRoZSBmdWxsIGF2YWlhYmxlIHdpZHRoIGJ5IGRlZmF1bHRqXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vLyBhbGlnbiBjb250ZW50IGluIHRhYmxlIGNlbGxzIHRvIHRoZSB0b3AgYnkgZGVmYXVsdFxudGQsXG50aCB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG59XG5cbi8vIGFsaWduIGNvbnRlbnQgdG8gdGhlIGxlZnQgZm9yIHRhYmxlIGhlYWRpbmdzXG50aCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cblxuLy8gVGV4dCBhbmQgb3RoZXIgaW5saW5lIGVsZW1lbnRzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIGRlZmF1bHQgaHIgaXMganVzdCBhIHNpbmdsZSBsaW5lIDFweCBoaWdoLCBmZWVsIGZyZWUgdG8gb3ZlcnJpZGVcbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG59XG5cbiIsIi8vIGJhc2Ugc3R5bGVzIGZvciBodG1sLCBib2R5IGFuZCBvdGhlciBnbG9iYWwgZWxlbWVudHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaHRtbCB7XG4gIEBpbmNsdWRlIGNvbG9yKGRlZmF1bHQpO1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKGJhY2tncm91bmQpO1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTsgLy8gYXMgcmVmZXJlbmNlIGZvciByZW1cbn1cblxuYm9keSB7XG4gIEBpbmNsdWRlIGZvbnQoZGVmYXVsdCk7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoNCk7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IoZGVmYXVsdCk7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKGRlZmF1bHQpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShwcmludCkge1xuICAgICoge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAmOjphZnRlciB7XG4gICAgICBjb250ZW50OiAnUGxlYXNlLCBkbyBub3Qgd2FzdGUgcGFwZXIgYnkgcHJpbnRpbmcgd2VicGFnZXMuJztcbiAgICB9XG4gIH1cbn1cblxuLy8gdGV4dCBzZWxlY3Rpb24gc3R5bGVzXG46OnNlbGVjdGlvbiB7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IobWFpbik7XG4gIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG4iLCIvLyBjb2xvciBtaXhpbnMgYW5kIGZ1bmN0aW9uLCBmb3IgdXNhZ2Ugd2l0aCB0aGUgY29sb3JzLW1hcFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBhIGZ1bmN0aW9uIHRvIGVhc2lseSBnZXQgdGhlIGNvbG9yIHZhbHVlIG9mIHRoZSBjb2xvcnMtbWFwXG5AZnVuY3Rpb24gY29sb3IoJGNvbG9yLXZhbHVlOiBkZWZhdWx0KSB7XG4gIEBpZiB2YXJpYWJsZS1leGlzdHMoY29sb3JzKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJyRjb2xvcnMgU2Fzcy1tYXAgZG9lcyBub3QgZXhpc3QsIHBsZWFzZSBwcm92aWRlIG9uZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byByZWQnO1xuICAgIEByZXR1cm4gI2YwMDtcblxuICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRjb2xvcnMsICRjb2xvci12YWx1ZSkgPT0gZmFsc2Uge1xuICAgIEB3YXJuICdJbmRleCBcIiN7JGNvbG9yLXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkY29sb3JzIFNhc3MtbWFwIHVzaW5nIGZ1bmN0aW9uIGNvbG9yLiBEZWZhdWx0aW5nIHRvIHJlZCc7XG4gICAgQHJldHVybiAjZjAwO1xuICB9XG5cbiAgQHJldHVybiBtYXAtZ2V0KCRjb2xvcnMsICRjb2xvci12YWx1ZSk7XG59XG5cbi8vIG1peGlucyB1c2luZyB0aGUgZnVuY3Rpb24gYWJvdmVcbkBtaXhpbiBjb2xvcigkY29sb3ItdmFsdWU6IGRlZmF1bHQpIHtcbiAgY29sb3I6IGNvbG9yKCRjb2xvci12YWx1ZSk7XG59XG5cbkBtaXhpbiBiYWNrZ3JvdW5kLWNvbG9yKCRjb2xvci12YWx1ZTogZGVmYXVsdCkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcigkY29sb3ItdmFsdWUpO1xufVxuXG5AbWl4aW4gYm9yZGVyLWNvbG9yKCRjb2xvci12YWx1ZTogZGVmYXVsdCkge1xuICBib3JkZXItY29sb3I6IGNvbG9yKCRjb2xvci12YWx1ZSk7XG59XG5cbkBtaXhpbiBmaWxsKCRjb2xvci12YWx1ZTogZGVmYXVsdCkge1xuICBmaWxsOiBjb2xvcigkY29sb3ItdmFsdWUpO1xufVxuIiwiLy8gdGhlIGNvbG9ycyBtYXAgdmFyaWFibGVzIHVzZWQgdGhyb3VnaG91dCB0aGUgcHJvamVjdFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4kY29sb3ItYmxhY2s6IHJnYigwLCAwLCAwKTtcbiRjb2xvci13aGl0ZTogcmdiKDI1NSwgMjU1LCAyNTUpO1xuJGNvbG9yLXJlZDogcmdiKDI0NywgMTMyLCAxMTYpO1xuJGNvbG9yLWJsdWU6IHJnYig5MywgMTk3LCAyMjApO1xuJGNvbG9yLWdyZWVuOiByZ2IoMTEyLCAxOTUsIDEzMCk7XG4kY29sb3ItZGFyazogcmdiKDUwLCA1MCwgNTApO1xuJGNvbG9yLWdyZXk6IHJnYigxMzgsIDEzOCwgMTM4KTtcbiRjb2xvci10cmFuc3BhcmVudDogdHJhbnNwYXJlbnQ7XG5cbiRjb2xvcnM6IChcbiAgYmxhY2s6ICRjb2xvci1ibGFjayxcbiAgd2hpdGU6ICRjb2xvci13aGl0ZSxcblxuICBkZWZhdWx0OiAkY29sb3ItZGFyayxcbiAgbWFpbjogJGNvbG9yLWdyZXksXG4gIHdvcms6ICRjb2xvci1yZWQsXG4gIGJsb2c6ICRjb2xvci1ibHVlLFxuICBjb250YWN0OiAkY29sb3ItZ3JlZW4sXG4gIGxlZ2FsLW5vdGljZTogJGNvbG9yLXdoaXRlLFxuICBlcnJvcjogJGNvbG9yLWdyZWVuLFxuICBjb2RlOiAkY29sb3ItZGFyayxcbiAgY29kZXRleHQ6IHJnYmEoJGNvbG9yLWJsYWNrLCAwLjEpLFxuICBpbnZlcnRlZDogJGNvbG9yLXdoaXRlLFxuICB0cmFuc3BhcmVudDogJGNvbG9yLXRyYW5zcGFyZW50LFxuICBiYWNrZ3JvdW5kOiAkY29sb3Itd2hpdGVcbik7XG4iLCIvLyBmb250IGZhbWlsaWVzIGFuZCB0aGVpciBmYWxsYmFja3MgZm9yIHRoZSB3aG9sZSBwYWdlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiRmb250LWNvbmZpZzogKFxuICBkZWZhdWx0OiAoXG4gICAgZmFtaWx5OiAnR2VvbWFuaXN0JyxcbiAgICBmYWxsYmFjazogJ0hlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAgIHdlaWdodDogNjAwLFxuICAgIHN0eWxlOiBub3JtYWwsXG4gICAgbGluZS1oZWlnaHQ6IDEuMzMzMyxcbiAgICBmb250ZmFjZTogdHJ1ZSxcbiAgICBmaWxlOiAnZ2VvbWFuaXN0LW1lZGl1bSdcbiAgKSxcblxuICByZWd1bGFyOiAoXG4gICAgZmFtaWx5OiAnR2VvbWFuaXN0JyxcbiAgICBmYWxsYmFjazogJ0hlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAgIHdlaWdodDogNDAwLFxuICAgIHN0eWxlOiBub3JtYWwsXG4gICAgZm9udGZhY2U6IHRydWUsXG4gICAgZmlsZTogJ2dlb21hbmlzdC1yZWd1bGFyJ1xuICApLFxuXG4gIGNvZGU6IChcbiAgICBmYW1pbHk6ICdJbmNvbnNvbGF0YScsXG4gICAgZmFsbGJhY2s6ICdIYWNrLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlJyxcbiAgICB3ZWlnaHQ6IDQwMCxcbiAgICBzdHlsZTogbm9ybWFsLFxuICAgIGxpbmUtaGVpZ2h0OiAxLjIsXG4gICAgZm9udGZhY2U6IGZhbHNlXG4gIClcbik7XG5cbi8vIGdsb2JhbCBmb250IHNpemVzIHNjc3MtbWFwIHZhcmlhYmxlIC0gdXNlIHdpdGggbWl4aW5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJGZvbnQtc2l6ZXM6IChcbiAgaDE6IDY0cHgsXG4gIGgxLW1vYmlsZTogMzZweCxcbiAgaDI6IDQ4cHgsXG4gIGgzOiAyNHB4LFxuICBoNDogMThweCxcbiAgc21hbGw6IDE0cHgsXG4gIGRlZmF1bHQ6IDI0cHhcbik7XG4iLCIvLyBtaXhpbiBmb3IgZ2V0dGluZyB0aGUgY29ycmVjdCBmb250LXNpemVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gZnVuY3Rpb24gdG8gZWFzaWx5IGdldCB0aGUgZm9udC1zaXplIGFuZCBjb252ZXJ0IGl0IHRvIHJlbVxuQGZ1bmN0aW9uIGZvbnQtc2l6ZSgkZm9udHNpemUtdmFsdWU6IGRlZmF1bHQpIHtcbiAgQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250LXNpemVzKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJyRmb250LXNpemVzIFNhc3MtbWFwIGRvZXMgbm90IGV4aXN0LCBwbGVhc2UgcHJvdmlkZSBvbmUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMTZweCc7XG4gICAgQHJldHVybiBweC10by1yZW0oMTZweCk7XG5cbiAgfSBAZWxzZSBpZiBtYXAtaGFzLWtleSgkZm9udC1zaXplcywgJGZvbnRzaXplLXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiI3skZm9udHNpemUtdmFsdWV9XCIgbm90IGZvdW5kIGluICRmb250LXNpemVzIFNhc3MtbWFwIHVzaW5nIGZ1bmN0aW9uIGZvbnQtc2l6ZS4gRGVmYXVsdGluZyB0byAxNnB4JztcbiAgICBAcmV0dXJuIHB4LXRvLXJlbSgxNnB4KTtcbiAgfVxuXG4gIEByZXR1cm4gcHgtdG8tcmVtKG1hcC1nZXQoJGZvbnQtc2l6ZXMsICRmb250c2l6ZS12YWx1ZSkpO1xufVxuXG4vLyBmb250LXNpemUgbWl4aW4gdXNpbmcgdGhlIGZ1bmN0aW9uIGFib3ZlXG5AbWl4aW4gZm9udC1zaXplKCRmb250c2l6ZS12YWx1ZTogZGVmYXVsdCkge1xuICBmb250LXNpemU6IGZvbnQtc2l6ZSgkZm9udHNpemUtdmFsdWUpO1xufVxuXG5cbi8vIG1peGlucyBmb3IgZm9udC1mYWNlLCBmb3IgdXNhZ2Ugd2l0aCBmb250ZmFjZW9ic2VydmVyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiBmb250LWZhbWlseSgkZmFtaWx5LXZhbHVlOiBkZWZhdWx0KSB7XG4gICRmYWxsYmFjazogbnVsbDtcbiAgJGZvbnQ6IG51bGw7XG5cbiAgQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250LWNvbmZpZykgPT0gZmFsc2Uge1xuICAgIEB3YXJuICckZm9udC1jb25maWcgU2Fzcy1tYXAgZG9lcyBub3QgZXhpc3QsIHBsZWFzZSBwcm92aWRlIG9uZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byBzYW5zLXNlcmYnO1xuICAgICRmYWxsYmFjazogc2Fucy1zZXJpZjtcbiAgICAkZm9udDogc2Fucy1zZXJpZjtcblxuICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRmb250LWNvbmZpZywgJGZhbWlseS12YWx1ZSkgPT0gZmFsc2Uge1xuICAgIEB3YXJuICdJbmRleCBcIiN7JGZhbWlseS12YWx1ZX1cIiBub3QgZm91bmQgaW4gJGZvbnQtY29uZmlnIFNhc3MgbWFwIHVzaW5nIG1peGluIGZvbnQtZmFtaWx5LiBEZWZhdWx0aW5nIHRvIHNhbnMtc2VyaWYnO1xuICAgICRmYWxsYmFjazogc2Fucy1zZXJpZjtcbiAgICAkZm9udDogc2Fucy1zZXJpZjtcblxuICB9IEBlbHNlIHtcbiAgICAkZmFsbGJhY2s6IHVucXVvdGUobWFwLWdldChtYXAtZ2V0KCRmb250LWNvbmZpZywgJGZhbWlseS12YWx1ZSksIGZhbGxiYWNrKSk7XG4gICAgJGZvbnQ6IG1hcC1nZXQobWFwLWdldCgkZm9udC1jb25maWcsICRmYW1pbHktdmFsdWUpLCBmYW1pbHkpLCAkZmFsbGJhY2s7XG4gIH1cblxuICAvLyBub3cgdGhhdCB3ZSBoYXZlIHRoZSBmb250IGFuZCBmYWxsYmFjaywgaWYgd2UgdXNlXG4gIC8vIGZvbnQtZmFjZSwgYWRkIHRoZSBmb250cy1sb2FkZWQgY2xhc3MsIGlmIG5vdCwganVzdCB1c2UgYWxsXG5cbiAgQGlmIG1hcC1nZXQobWFwLWdldCgkZm9udC1jb25maWcsICRmYW1pbHktdmFsdWUpLCBmb250ZmFjZSkgPT0gdHJ1ZSB7XG4gICAgZm9udC1mYW1pbHk6ICRmYWxsYmFjaztcblxuICAgIC5mb250cy1sb2FkZWQgJiB7XG4gICAgICBmb250LWZhbWlseTogJGZvbnQ7XG4gICAgfVxuXG4gIH0gQGVsc2Uge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udDtcbiAgfVxufVxuXG4vLyBtaXhpbiBmb3IgZm9udC13ZWlnaHRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQG1peGluIGZvbnQtd2VpZ2h0KCRmYW1pbHktdmFsdWU6IGRlZmF1bHQpIHtcbiAgJHRoaXMtZm9udC13ZWlnaHQ6IDQwMDtcblxuICBAaWYgdmFyaWFibGUtZXhpc3RzKGZvbnQtY29uZmlnKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJyRmb250LWNvbmZpZyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnLiBEZWZhdWx0aW5nIHRvIDQwMCc7XG5cbiAgfSBAZWxzZSBpZiBtYXAtaGFzLWtleSgkZm9udC1jb25maWcsICRmYW1pbHktdmFsdWUpID09IGZhbHNlIHtcbiAgICBAd2FybiAnSW5kZXggXCIjeyRmYW1pbHktdmFsdWV9XCIgbm90IGZvdW5kIGluICRmb250LWNvbmZpZyBTYXNzIG1hcCB1c2luZyBtaXhpbiBmb250LXdlaWdodC4gRGVmYXVsdGluZyB0byA0MDAnO1xuXG4gIH0gQGVsc2Uge1xuICAgICR0aGlzLWZvbnQtd2VpZ2h0OiBtYXAtZ2V0KG1hcC1nZXQoJGZvbnQtY29uZmlnLCAkZmFtaWx5LXZhbHVlKSwgd2VpZ2h0KTtcbiAgfVxuXG4gIGZvbnQtd2VpZ2h0OiAkdGhpcy1mb250LXdlaWdodDtcbn1cblxuLy8gbWl4aW4gZm9yIGZvbnQtc3R5bGVcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQG1peGluIGZvbnQtc3R5bGUoJGZhbWlseS12YWx1ZTogZGVmYXVsdCkge1xuICAkdGhpcy1mb250LXN0eWxlOiBub3JtYWw7XG5cbiAgQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250LWNvbmZpZykgPT0gZmFsc2Uge1xuICAgIEB3YXJuICckZm9udC1jb25maWcgU2Fzcy1tYXAgZG9lcyBub3QgZXhpc3QsIHBsZWFzZSBwcm92aWRlIG9uZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byBub3JtYWwnO1xuXG4gIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGZvbnQtY29uZmlnLCAkZmFtaWx5LXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiI3skZmFtaWx5LXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkZm9udC1jb25maWcgU2FzcyBtYXAgdXNpbmcgbWl4aW4gZm9udC1zdHlsZS4gRGVmYXVsdGluZyB0byBub3JtYWwnO1xuXG4gIH0gQGVsc2Uge1xuICAgICR0aGlzLWZvbnQtc3R5bGU6IG1hcC1nZXQobWFwLWdldCgkZm9udC1jb25maWcsICRmYW1pbHktdmFsdWUpLCBzdHlsZSk7XG4gIH1cblxuICBmb250LXN0eWxlOiAkdGhpcy1mb250LXN0eWxlO1xufVxuXG4vLyBtaXhpbiBmb3IgbGluZS1oZWlnaHQgLS0gdGhpcyBpcyBvcHRpb25hbFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AbWl4aW4gbGluZS1oZWlnaHQoJGZhbWlseS12YWx1ZTogZGVmYXVsdCkge1xuICBAaWYgdmFyaWFibGUtZXhpc3RzKGZvbnQtY29uZmlnKSA9PSB0cnVlIGFuZCBtYXAtaGFzLWtleSgkZm9udC1jb25maWcsICRmYW1pbHktdmFsdWUpIHtcbiAgICBsaW5lLWhlaWdodDogbWFwLWdldChtYXAtZ2V0KCRmb250LWNvbmZpZywgJGZhbWlseS12YWx1ZSksIGxpbmUtaGVpZ2h0KTtcbiAgfVxufVxuXG4vLyBub3cgYWxsIHRvZ2V0aGVyLCBmb250LXNob3J0aGFuZCBtaXhpblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AbWl4aW4gZm9udCgkZmFtaWx5LXZhbHVlOiBkZWZhdWx0KSB7XG4gIEBpbmNsdWRlIGZvbnQtZmFtaWx5KCRmYW1pbHktdmFsdWUpO1xuICBAaW5jbHVkZSBmb250LXdlaWdodCgkZmFtaWx5LXZhbHVlKTtcbiAgQGluY2x1ZGUgZm9udC1zdHlsZSgkZmFtaWx5LXZhbHVlKTtcbiAgQGluY2x1ZGUgbGluZS1oZWlnaHQoJGZhbWlseS12YWx1ZSk7XG59XG4iLCIvLyBnZW5lcmFsIGhlbHBlciBmdW5jdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQGZ1bmN0aW9uIHB4LXRvLXJlbSgkcHh2YWx1ZSkge1xuICBAaWYgdmFyaWFibGUtZXhpc3RzKGZvbnQtc2l6ZXMpID09IGZhbHNlIHtcbiAgICBAd2FybiAnJGZvbnQtc2l6ZXMgU2Fzcy1tYXAgZG9lcyBub3QgZXhpc3QsIHBsZWFzZSBwcm92aWRlIG9uZSBpbiB5b3VyIGNvbmZpZy4gRGVmYXVsdGluZyB0byAxNnB4LXJlbS1lcXVpdmFsZW50JztcbiAgICBAcmV0dXJuICgkcHh2YWx1ZSAvIDE2cHgpICogMXJlbTtcblxuICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCRmb250LXNpemVzLCBkZWZhdWx0KSA9PSBmYWxzZSB7XG4gICAgQHdhcm4gJ0luZGV4IFwiZGVmYXVsdFwiIG5vdCBmb3VuZCBpbiAkZm9udC1zaXplcyBTYXNzLW1hcCB1c2luZyBmdW5jdGlvbiBweC10by1yZW0uIERlZmF1bHRpbmcgdG8gMTZweC1yZW0tZXF1aXZhbGVudCc7XG4gICAgQHJldHVybiAoJHB4dmFsdWUgLyAxNnB4KSAqIDFyZW07XG4gIH1cblxuICBAcmV0dXJuICgkcHh2YWx1ZSAvIG1hcC1nZXQoJGZvbnQtc2l6ZXMsIGRlZmF1bHQpKSAqIDFyZW07XG59XG5cbkBmdW5jdGlvbiBweC10by1lbSgkcHh2YWx1ZSkge1xuICBAcmV0dXJuICgkcHh2YWx1ZSAvIDE2cHgpICogMWVtO1xufVxuXG4vLyByZXR1cm5zIHRydWUgaWYgaXQgaXMganVzdCBhIG51bWJlciB3aXRob3V0IHVuaXRcbkBmdW5jdGlvbiBpcy1udW1iZXIoJHZhbHVlKSB7XG4gIEByZXR1cm4gdHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIGFuZCB1bml0bGVzcygkdmFsdWUpO1xufVxuXG4vLyBpZiBhIHVuaXRsZXNzIG51bWJlciBpcyBnaXZlbiwgdGhpcyBmdW5jdGlvbiByZXR1cm5zICRiYXNlLXVuaXQgKiB2YWx1ZVxuLy8gKGV4Y2VwdCBmb3IgMCwgMCB3aWxsIGJlIHJldHVybmVkIGluc3RhbnRseSlcbi8vIGlmIGFueXRoaW5nIGVsc2UgaXMgZ2l2ZW4sIGl0IHdpbGwgcmV0dXJuIGl0cyB1bnFvdGVkIHZhbHVlO1xuQGZ1bmN0aW9uIHBhcnNlLXVuaXQoJHZhbHVlKSB7XG4gIEBpZiAkdmFsdWUgPT0gMCB7XG4gICAgQHJldHVybiAwO1xuICB9XG5cbiAgQGlmIGlzLW51bWJlcigkdmFsdWUpIHtcbiAgICBAaWYgdmFyaWFibGUtZXhpc3RzKGJhc2UtdW5pdCkgPT0gZmFsc2Uge1xuICAgICAgQHdhcm4gJyRiYXNlLXVuaXQgaXMgbm90IHNldCwgcGxlYXNlIHNldCB0aGlzIHZhcmlhYmxlIGluIHlvdXIgY29uZmlnLiBEZWZhdWx0aW5nIHRvIDEuNXJlbSc7XG4gICAgICAkYmFzZS11bml0OiAxLjVyZW07XG4gICAgfSBAZWxzZSB7XG4gICAgICBAcmV0dXJuICRiYXNlLXVuaXQgKiAkdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cblxuLy8gcmV0dXJucyB0aGUgZnVsbCB2YWx1ZSBmb3IgYW55IG9mIHRoZSBwb3NpdGlvbi9zaWRlIHNob3J0LWZvcm1zXG5AZnVuY3Rpb24gcG9zaXRpb24tbWFwKCRzaG9ydCkge1xuICAkc2hvcnQtbWFwOiAoXG4gICAgdDogdG9wLFxuICAgIHI6IHJpZ2h0LFxuICAgIGI6IGJvdHRvbSxcbiAgICBsOiBsZWZ0XG4gICk7XG5cbiAgQGlmIG1hcC1oYXMta2V5KCRzaG9ydC1tYXAsICRzaG9ydCkge1xuICAgIEByZXR1cm4gbWFwLWdldCgkc2hvcnQtbWFwLCAkc2hvcnQpO1xuICB9IEBlbHNlIHtcbiAgICBAd2FybiAnU2hvcnQga2V5IFwiI3skc2hvcnR9XCIgbm90IGF2YWlhYmxlLiBBdmFpYWJsZSBrZXlzIGFyZTogdCwgciwgYiBhbmQgbCc7XG5cbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iLCIvLyBtaXhpbnMgYW5kIG90aGVyIGhlbHBlcnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gYSBzbWFsbCBoZWxwZXIgZm9yIGVhc2llciBtZWRpYXF1ZXJpZXMgLSBqdXN0IGRlZmluZSB0aGVcbi8vIGJyZWFrcG9pbnRzIGluIHlvdXIgY29uZmlnIGFzIGEgbWFwIGFuZCB5b3UgYXJlIHJlYWR5IHRvIGdvXG4vLyBieSBkZWZhdWx0IHdlIHVzZSB0aGUgbW9iaWxlLWZpcnN0IGlkZWEsIG5vIG1xID09IG1vYmlsZVxuLy8geW91IGNhbiBzZXQgdGhlIHNlY29uZCBwYXJhbWV0ZXIgdG8gdHJ1ZSBhbiBwcm92aWRlIGEgY3VzdG9tIG1lZGlhcXVlcnlcblxuQG1peGluIG1lZGlhcXVlcnkoJGJyZWFrcG9pbnQtdmFsdWUsICRjdXN0b20tcXVlcnk6IGZhbHNlKSB7XG5cbiAgQGlmICRicmVha3BvaW50LXZhbHVlID09IHJldGluYSB7XG4gICAgQG1lZGlhIHByaW50LCAobWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yNSksIChtaW4tcmVzb2x1dGlvbjogMTIwZHBpKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG5cbiAgfSBAZWxzZSBpZiAkYnJlYWtwb2ludC12YWx1ZSA9PSBwcmludCB7IC8vIHByaW50IHN0eWxlc1xuICAgIEBtZWRpYSBwcmludCB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG5cbiAgfSBAZWxzZSBpZiAkYnJlYWtwb2ludC12YWx1ZSA9PSBsYW5kc2NhcGUgeyAvLyBsYW5kc2NhcGUgYW5kIHBvcnRyYWl0IG1lZGlhcXVlcmllc1xuICAgIEBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuXG4gIH0gQGVsc2UgaWYgJGJyZWFrcG9pbnQtdmFsdWUgPT0gcG9ydHJhaXQge1xuICAgIEBtZWRpYSAob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG5cbiAgfSBAZWxzZSBpZiAkY3VzdG9tLXF1ZXJ5IHsgLy8gY3VzdG9tIG1lZGlhcXVlcmllc1xuXG4gICAgQGlmIHZhcmlhYmxlLWV4aXN0cyhicmVha3BvaW50cykgPT0gZmFsc2Uge1xuICAgICAgQHdhcm4gJyRicmVha3BvaW50cyBTYXNzLW1hcCBkb2VzIG5vdCBleGlzdCwgcGxlYXNlIHByb3ZpZGUgb25lIGluIHlvdXIgY29uZmlnJztcblxuICAgIH0gQGVsc2UgaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC12YWx1ZSkgPT0gZmFsc2Uge1xuICAgICAgQHdhcm4gJ0luZGV4IFwiI3skYnJlYWtwb2ludC12YWx1ZX1cIiBub3QgZm91bmQgaW4gJGJyZWFrcG9pbnRzIFNhc3MtbWFwIHVzaW5nIG1peGluIG1lZGlhcXVlcnknO1xuXG4gICAgfSBAZWxzZSB7XG4gICAgICBAbWVkaWEgI3ttYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQtdmFsdWUpfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH1cblxuICB9IEBlbHNlIHsgLy8gZGVmYXVsdDogbW9iaWxlLWZpcnN0IG1lZGlhcXVlcmllcyBhcyBkZWZpbmVkIGluIGJyZWFrcG9pbnRzLCB0aGV5IHdpbGwgYmUgY29udmVydGVkIHRvIGVtXG5cbiAgICBAaWYgdmFyaWFibGUtZXhpc3RzKGJyZWFrcG9pbnRzKSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnJGJyZWFrcG9pbnRzIFNhc3MtbWFwIGRvZXMgbm90IGV4aXN0LCBwbGVhc2UgcHJvdmlkZSBvbmUgaW4geW91ciBjb25maWcnO1xuXG4gICAgfSBAZWxzZSBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicmVha3BvaW50LXZhbHVlKSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnSW5kZXggXCIjeyRicmVha3BvaW50LXZhbHVlfVwiIG5vdCBmb3VuZCBpbiAkYnJlYWtwb2ludHMgU2Fzcy1tYXAgdXNpbmcgbWl4aW4gbWVkaWFxdWVyeSc7XG5cbiAgICB9IEBlbHNlIHtcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiBweC10by1lbShtYXAtZ2V0KCRicmVha3BvaW50cywgJGJyZWFrcG9pbnQtdmFsdWUpKSkge1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuIiwiLy8gZGVmYXVsdCB2ZXJ0aWNhbCByaHl0aG0gLyBtYXJnaW4tYm90dG9tIHNwYWNpbmdcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxudWwsXG5vbCxcbmRsLFxuYmxvY2txdW90ZSxcbnAsXG5ocixcbnRhYmxlLFxuZmllbGRzZXQsXG5maWd1cmUsXG5wcmUsXG4ucmh5dGhtLFxuJXJoeXRobSB7XG4gIEBpbmNsdWRlIHNwYWNpbmc7XG59XG5cbiIsIi8vIGVhc3kgbWFyZ2lucyBhbmQgcGFkZGluZ3Mgd2l0aCBjdXN0b20gbWl4aW5zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIGNyZWF0ZXMgbWFyZ2lucywgYnkgZGVmYXVsdCAod2l0aG91dCBhbnkgcGFyYW1ldGVycykgb25seSBtYXJnaW4tYm90dG9tXG4vLyB3aXRoICRiYXNlLXVuaXQgLS0gZGVmYXVsdCByaHl0aG0sIG9yIGZvciBldmVyeSBzaWRlL3ZhbHVlLXBhaXIgd2l0aFxuLy8gdGhlaXIgc2hvcnQgdmFyaWFudHM6XG4vL1xuLy8gdXNhZ2UgZXhhbXBsZXM6XG4vL1xuLy8gQGluY2x1ZGUgc3BhY2luZzsgPT0+IG1hcmdpbi1ib3R0b206ICRiYXNlLXVuaXQ7XG4vLyBAaW5jbHVkZSBzcGFjaW5nKDIpID09PiB3YXJuaW5nISwgdGhpcyBpcyBub3QgZ29ubmEgd29ya1xuLy8gQGluY2x1ZGUgc3BhY2luZyhiIDIpID09PiBtYXJnaW4tYm90dG9tOiAkYmFzZS11bml0ICogMjtcbi8vIEBpbmNsdWRlIHNwYWNpbmcoYSAyKSA9PT4gbWFyZ2luOiAkYmFzZS11bml0ICogMjtcbi8vIEBpbmNsdWRlIHNwYWNpbmcoYSAwLjUsIGIgMSkgPT0+IG1hcmdpbjogJGJhc2UtdW5pdCAqIDAuNTsgbWFyZ2luLWJvdHRvbTogJGJhc2UtdW5pdDtcbi8vIEBpbmNsdWRlIHNwYWNpbmcociAxLCBsIDEyJSkgPT0+IG1hcmdpbi1yaWdodDogYmFzZS11bml0OyBtYXJnaW4tbGVmdDogMTIlO1xuLy8gQGluY2x1ZGUgc3BhY2luZyhyIDAsIHQgYXV0bykgPT0+IG1hcmdpbi1yaWdodDogMDsgbWFyZ2luLXRvcDogYXV0bztcbi8vIEBpbmNsdWRlIHNwYWNpbmcodiAxKSA9PT4gbWFyZ2luLXJpZ2h0OiAkYmFzZS11bml0OyBtYXJnaW4tbGVmdDogJGJhc2UtdW5pdDtcbi8vIEBpbmNsdWRlIHNwYWNpbmcoaCAxKSA9PT4gbWFyZ2luLXRvcDogJGJhc2UtdW5pdDsgbWFyZ2luLWJvdHRvbTogJGJhc2UtdW5pdDtcbkBtaXhpbiBzcGFjaW5nKCRzcGFjaW5nLWFyZ3MuLi4pIHtcblxuICAvLyBkZWZhdWx0IGNhc2UgZm9yIHNwYWNpbmcgLS0gbWFyZ2luIGJvdHRvbVxuICBAaWYgbGVuZ3RoKCRzcGFjaW5nLWFyZ3MpID09IDAge1xuICAgIEBpZiB2YXJpYWJsZS1leGlzdHMoYmFzZS11bml0KSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnJGJhc2UtdW5pdCBpcyBub3Qgc2V0LCBwbGVhc2Ugc2V0IHRoaXMgdmFyaWFibGUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMS41cmVtJztcbiAgICAgICRiYXNlLXVuaXQ6IDEuNXJlbTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206ICRiYXNlLXVuaXQ7XG4gICAgfVxuXG4gIH0gQGVsc2Uge1xuICAgIEBlYWNoICRwb3NpdGlvbi1rZXksICRwb3NpdGlvbi12YWx1ZSBpbiAkc3BhY2luZy1hcmdzIHtcblxuICAgICAgQGlmIG5vdCAkcG9zaXRpb24tdmFsdWUge1xuICAgICAgICBAd2FybiAnWW91IHNob3VsZCBwcm92aWRlIGEgbGlzdCBvZiBzaWRlL3ZhbHVlIHBhaXJzIGUuZy4gXCJiIDJcIiBmb3IgdGhpcyBtaXhpbiB0byB3b3JrJztcblxuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdhJyB7XG4gICAgICAgIG1hcmdpbjogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICB9IEBlbHNlIGlmICRwb3NpdGlvbi1rZXkgPT0gJ3YnIHtcbiAgICAgICAgbWFyZ2luLXRvcDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG5cbiAgICAgIH0gQGVsc2UgaWYgJHBvc2l0aW9uLWtleSA9PSAnaCcge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcblxuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICRzaWRlOiBwb3NpdGlvbi1tYXAoJHBvc2l0aW9uLWtleSk7XG4gICAgICAgICR2YWx1ZTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICAgIG1hcmdpbi0jeyRzaWRlfTogJHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cbi8vIHRoaXMgaW5uZXItc3BhY2luZyBtaXhpbiBmb3IgcGFkZGluZyBiZWhhdmVzIHNsaWdodGx5IGRpZmZlcmVudFxuLy8gd2hlbiBwcm92aWRlZCB3aXRoIG5vIHBhcmFtZXRlciwgcGFkZGluZyBpcyBhcHBsaWVkIHRvIGFsbCBmb3VyXG4vLyBzaWRlcyBvZiB0aGUgZWxlbWVudCwgdXNpbmcgcGFkZGluZy1zaG9ydGhhbmRcbkBtaXhpbiBzcGFjaW5nLWlubmVyKCRzcGFjaW5nLWFyZ3MuLi4pIHtcblxuICAvLyBkZWZhdWx0IGNhc2UgZm9yIHNwYWNpbmcgLS0gbWFyZ2luIGJvdHRvbVxuICBAaWYgbGVuZ3RoKCRzcGFjaW5nLWFyZ3MpID09IDAge1xuICAgIEBpZiB2YXJpYWJsZS1leGlzdHMoYmFzZS11bml0KSA9PSBmYWxzZSB7XG4gICAgICBAd2FybiAnJGJhc2UtdW5pdCBpcyBub3Qgc2V0LCBwbGVhc2Ugc2V0IHRoaXMgdmFyaWFibGUgaW4geW91ciBjb25maWcuIERlZmF1bHRpbmcgdG8gMS41cmVtJztcbiAgICAgICRiYXNlLXVuaXQ6IDEuNXJlbTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHBhZGRpbmc6ICRiYXNlLXVuaXQ7XG4gICAgfVxuXG4gIH0gQGVsc2Uge1xuICAgIEBlYWNoICRwb3NpdGlvbi1rZXksICRwb3NpdGlvbi12YWx1ZSBpbiAkc3BhY2luZy1hcmdzIHtcblxuICAgICAgQGlmIG5vdCAkcG9zaXRpb24tdmFsdWUge1xuICAgICAgICBAd2FybiAnWW91IHNob3VsZCBwcm92aWRlIGEgbGlzdCBvZiBzaWRlL3ZhbHVlIHBhaXJzIGUuZy4gXCJiIDJcIiBmb3IgdGhpcyBtaXhpbiB0byB3b3JrJztcblxuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdhJyB7XG4gICAgICAgIHBhZGRpbmc6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcblxuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICd2JyB7XG4gICAgICAgIHBhZGRpbmctdG9wOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG5cbiAgICAgIH0gQGVsc2UgaWYgJHBvc2l0aW9uLWtleSA9PSAnaCcge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHNpZGU6IHBvc2l0aW9uLW1hcCgkcG9zaXRpb24ta2V5KTtcbiAgICAgICAgJHZhbHVlOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG5cbiAgICAgICAgcGFkZGluZy0jeyRzaWRlfTogJHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBhbGlhc2VzIGZvciB0aGUgc3BhY2luZyBtaXhpbnNcbkBtaXhpbiBtYXJnaW4oJHNwYWNpbmctYXJncy4uLikge1xuICBAaW5jbHVkZSBzcGFjaW5nKCRzcGFjaW5nLWFyZ3MuLi4pO1xufVxuXG5AbWl4aW4gcGFkZGluZygkc3BhY2luZy1hcmdzLi4uKSB7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoJHNwYWNpbmctYXJncy4uLik7XG59XG4iLCIvLyBiYXNlIHVuaXQgZGVmaW5pdGlvbiBhbmQgd2lkdGgvaGVpZ2h0cyBmb3Igb3RoZXIgc3R1ZmZcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gYmFzZSB1bml0IC0gZGVmYXVsdCBmb250LXNpemUgKiBsaW5lLWhlaWdodCBpbiByZW0gYW5kIGhhbGYvZG91YmxlXG4kYmFzZS1saW5lLWhlaWdodDogbWFwLWdldChtYXAtZ2V0KCRmb250LWNvbmZpZywgZGVmYXVsdCksIGxpbmUtaGVpZ2h0KTtcbiRiYXNlLWZvbnQtc2l6ZTogbWFwLWdldCgkZm9udC1zaXplcywgZGVmYXVsdCk7XG5cbiRiYXNlLXVuaXQtaW4tcHg6ICRiYXNlLWZvbnQtc2l6ZSAqICRiYXNlLWxpbmUtaGVpZ2h0O1xuJGJhc2UtdW5pdDogMXJlbSAqICRiYXNlLWxpbmUtaGVpZ2h0O1xuJGJhc2UtaGFsZjogJGJhc2UtdW5pdCAvIDI7XG4kYmFzZS1kb3VibGU6ICRiYXNlLXVuaXQgKiAyO1xuXG5cbi8vIGdsb2JhbGx5IHVzZWQgd2lkdGggYW5kIGhlaWdodCBkZWNsYXJhdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJHdpZHRoLW1heDogMTE4MHB4O1xuJHdpZHRoLWxpbmstc2VjdGlvbjogJGJhc2UtaGFsZjtcbiR3aWR0aC1tYXgtbW9iaWxlOiAzMCU7XG4kd2lkdGgtbWF4LXRhYmxldDogODAlO1xuJHdpZHRoLW1heC1kZXNrdG9wOiA5MCU7XG5cbiRoZWlnaHQtaGVhZGVyOiAkYmFzZS11bml0ICogMS41O1xuJGhlaWdodC10aHVtYjogOTBweDtcblxuLy8gb3RoZXIgZ2xvYmFsbHkgdXNlZCB2YXJpYWJsZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuJGFyZWFzOiBjb250YWN0LCBibG9nLCB3b3JrLCBsZWdhbC1ub3RpY2UsIGVycm9yO1xuIiwiLy8gY3VzdG9tIEBmb250LWZhY2UgcnVsZXMgYXJlIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGZyb20gZm9udC1jb25maWdcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQGlmIHZhcmlhYmxlLWV4aXN0cyhmb250LWNvbmZpZykge1xuICBAZWFjaCAkZm9udC1pZCwgJGZvbnQtZGVmaW5pdGlvbiBpbiAkZm9udC1jb25maWcge1xuICAgIEBpZiBtYXAtZ2V0KCRmb250LWRlZmluaXRpb24sIGZvbnRmYWNlKSA9PSB0cnVlIHtcbiAgICAgICRmb250ZmlsZTogbWFwLWdldCgkZm9udC1kZWZpbml0aW9uLCBmaWxlKTtcblxuICAgICAgQGZvbnQtZmFjZSB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBtYXAtZ2V0KCRmb250LWRlZmluaXRpb24sIGZhbWlseSk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBtYXAtZ2V0KCRmb250LWRlZmluaXRpb24sIHdlaWdodCk7XG4gICAgICAgIGZvbnQtc3R5bGU6IG1hcC1nZXQoJGZvbnQtZGVmaW5pdGlvbiwgc3R5bGUpO1xuICAgICAgICAvLyBmZWVsIGZyZWUgdG8gYWRkIG90aGVyIGZvbnQtZm9ybWF0cyBoZXJlXG4gICAgICAgIC8vIGlmIHlvdSBuZWVkIHRvIHN1cHBvcnQgb2xkZXIgYnJvd3NlcnNcbiAgICAgICAgc3JjOiB1cmwoJy4uL2ZvbnRzLyN7JGZvbnRmaWxlfS53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgdXJsKCcuLi9mb250cy8jeyRmb250ZmlsZX0ud29mZicpIGZvcm1hdCgnd29mZicpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLy8gZGVmYXVsdCBoZWFkaW5ncyBoMSAtIGg2XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiVoMSxcbmgxIHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGgxLW1vYmlsZSk7XG4gIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KGRlZmF1bHQpO1xuICBsaW5lLWhlaWdodDogMS4wNTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKGgxKTtcbiAgfVxufVxuXG4laDIsXG5oMiB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoMS1tb2JpbGUpO1xuICBAaW5jbHVkZSBmb250LXdlaWdodChkZWZhdWx0KTtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDEvNCk7XG4gIGxpbmUtaGVpZ2h0OiAxLjA1O1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoaDIpO1xuICAgIEBpbmNsdWRlIHNwYWNpbmcoYiAxLzIpO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIH1cbn1cblxuJWgzLFxuaDMge1xuICBAaW5jbHVkZSBmb250LXNpemUoaDQpO1xuICBAaW5jbHVkZSBzcGFjaW5nKGIgMS80KTtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMztcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoaDMpO1xuICB9XG5cbiAgaDIgKyAmIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKHQgMSk7XG4gIH1cbn1cblxuJWg0LFxuaDQsXG4laDUsXG5oNSxcbiVoNixcbmg2IHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGg0KTtcbiAgQGluY2x1ZGUgZm9udC13ZWlnaHQoZGVmYXVsdCk7XG59XG4iLCIvLyBkZWZhdWx0IGxpbmsgc3R5bGluZ1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5hIHtcbiAgQGluY2x1ZGUgY29sb3IoZGVmYXVsdCk7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuIiwiLy8gYXR0ZW50aW9uIG1peGluIGZvciBob3Zlci0sIGZvY3VzLSBhbmQgYWN0aXZlLXN0YXRlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5AbWl4aW4gYXR0ZW50aW9uIHtcbiAgJjpob3ZlcixcbiAgJjphY3RpdmUsXG4gICY6Zm9jdXMge1xuICAgIEBjb250ZW50O1xuICB9XG59XG4iLCIvLyB0ZXh0IHN0eWxlcywgZGVmYXVsdHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxucHJlLFxuY29kZSB7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IoY29kZSk7XG4gIEBpbmNsdWRlIGZvbnQoY29kZSk7XG59XG5cbnByZSB7XG4gIEBpbmNsdWRlIGJsb2NrO1xuICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKGEgMS8yKTtcbiAgQGluY2x1ZGUgY29sb3IoaW52ZXJ0ZWQpO1xuICBAaW5jbHVkZSBmb250LXNpemUoc21hbGwpO1xuICBvdmVyZmxvdzogc2Nyb2xsO1xuXG4gID4gY29kZSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcih0cmFuc3BhcmVudCk7XG4gIH1cbn1cblxucCA+IGNvZGUge1xuICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKGEgMS84KTtcbiAgQGluY2x1ZGUgZm9udC1zaXplKHNtYWxsKTtcbiAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihjb2RldGV4dCk7XG59XG5cbmhyIHtcbiAgQGluY2x1ZGUgY29sb3IoZGVmYXVsdCk7XG4gIGhlaWdodDogJGJhc2UtaGFsZiAvIDM7XG59XG5cbnN0cm9uZyxcbmIsXG5pLFxuZW0ge1xuICBAaW5jbHVkZSBmb250KHJlZ3VsYXIpO1xufVxuXG5pZnJhbWUge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAwO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbiIsIi8vIG1peGluIGZvciBzZXR0aW5nIGRpc3BsYXkgYmxvY2sgYW5kIG90aGVyIG9mdGVuIHVzZWQgY29tYmluYXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiBibG9jaygkYmxvY2stdmFsdWU6IGRlZmF1bHQpIHtcblxuICBAaWYgJGJsb2NrLXZhbHVlID09IHBzZXVkbyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuXG4gIH0gQGVsc2UgaWYgJGJsb2NrLXZhbHVlID09IGJsb2NrIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcblxuICB9IEBlbHNlIHsgLy8gZGVmYXVsdFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuIiwiI2JhZ3VldHRlQm94LW92ZXJsYXkge1xuICBkaXNwbGF5OiBub25lO1xuICBvcGFjaXR5OiAwO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTAwMDAwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuOCk7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgLjVzIGVhc2U7XG5cbiAgJi52aXNpYmxlIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5cbiAgLmZ1bGwtaW1hZ2Uge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAgIGZpZ3VyZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICBtYXJnaW46IDA7ICAgICAgLy8gbmVlZGVkIGZvciBtb2JpbGVcbiAgICAgIGhlaWdodDogMTAwJTsgICAvLyBPcGVyYSAxMiBpbWFnZSBzdHJldGNoaW5nIGZpeFxuICAgIH1cblxuICAgIGltZyB7XG4gICAgICAvLyBJRTggZml4XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogYXV0bztcblxuICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBib3gtc2hhZG93OiAwIDAgOHB4IHJnYmEoMCwwLDAsLjYpO1xuICAgIH1cblxuICAgIGZpZ2NhcHRpb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjg7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgICAgY29sb3I6ICNjY2M7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwuNik7XG4gICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgICB9XG5cbiAgICAmOmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiA1MCU7XG4gICAgICB3aWR0aDogMXB4O1xuICAgICAgbWFyZ2luLXJpZ2h0Oi0xcHg7XG4gICAgfVxuICB9XG59XG5cbiNiYWd1ZXR0ZUJveC1zbGlkZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdHJhbnNpdGlvbjogbGVmdCAuNHMgZWFzZSwgdHJhbnNmb3JtIC40cyBlYXNlO1xuXG4gICYuYm91bmNlLWZyb20tcmlnaHQge1xuICAgIGFuaW1hdGlvbjogYm91bmNlRnJvbVJpZ2h0IC40cyBlYXNlLW91dDtcbiAgfVxuXG4gICYuYm91bmNlLWZyb20tbGVmdCB7XG4gICAgYW5pbWF0aW9uOiBib3VuY2VGcm9tTGVmdCAuNHMgZWFzZS1vdXQ7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBib3VuY2VGcm9tUmlnaHR7XG4gIDAlIHsgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgNTAlIHsgbWFyZ2luLWxlZnQ6IC0zMHB4OyB9XG4gIDEwMCUgeyBtYXJnaW4tbGVmdDogMDsgfVxufVxuXG5Aa2V5ZnJhbWVzIGJvdW5jZUZyb21MZWZ0e1xuICAwJSB7IG1hcmdpbi1sZWZ0OiAwOyB9XG4gIDUwJSB7IG1hcmdpbi1sZWZ0OiAzMHB4OyB9XG4gIDEwMCUgeyBtYXJnaW4tbGVmdDogMDsgfVxufVxuXG4lYXJyb3ctYnV0dG9uIHtcbiAgdG9wOiA1MCU7XG4gIHRvcDogY2FsYyg1MCUgLSAzMHB4KTtcbiAgd2lkdGg6IDQ0cHg7XG4gIGhlaWdodDogNjBweDtcbn1cblxuLmJhZ3VldHRlQm94LWJ1dHRvbiB7XG4gIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiAxNSU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBmb250OiAxLjZlbSBzYW5zLXNlcmlmO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC40cyBlYXNlO1xuXG4gICYjbmV4dC1idXR0b24ge1xuICAgIEBleHRlbmQgJWFycm93LWJ1dHRvbjtcbiAgICByaWdodDogMiU7XG4gIH1cblxuICAmI3ByZXZpb3VzLWJ1dHRvbiB7XG4gICAgQGV4dGVuZCAlYXJyb3ctYnV0dG9uO1xuICAgIGxlZnQ6IDIlO1xuICB9XG5cbiAgJiNjbG9zZS1idXR0b24ge1xuICAgIHRvcDogMjBweDtcbiAgICByaWdodDogMiU7XG4gICAgcmlnaHQ6IGNhbGMoMiUgKyA2cHgpO1xuICAgIHdpZHRoOiAzMHB4O1xuICAgIGhlaWdodDogMzBweDtcbiAgfVxuXG4gIC8vIEZpcmVmb3ggZml4XG4gIHN2ZyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuXG4gICAgZyxcbiAgICBwb2x5bGluZSB7XG4gICAgICBzdHJva2U6IGNvbG9yKGludmVydGVkKTtcbiAgICB9XG4gIH1cblxufVxuXG4vKlxuUHJlbG9hZGVyXG5Cb3Jyb3dlZCBmcm9tIGh0dHA6Ly90b2JpYXNhaGxpbi5jb20vc3BpbmtpdC9cbiAqL1xuXG4gIC5iYWd1ZXR0ZUJveC1zcGlubmVyIHtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLXRvcDogLTIwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IC0yMHB4O1xuICB9XG5cbiAgLmJhZ3VldHRlQm94LWRvdWJsZS1ib3VuY2UxLFxuICAuYmFndWV0dGVCb3gtZG91YmxlLWJvdW5jZTIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBvcGFjaXR5OiAuNjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgYW5pbWF0aW9uOiBib3VuY2UgMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQ7XG4gIH1cblxuICAuYmFndWV0dGVCb3gtZG91YmxlLWJvdW5jZTIge1xuICAgIGFuaW1hdGlvbi1kZWxheTogLTFzO1xuICB9XG5cbiAgQGtleWZyYW1lcyBib3VuY2Uge1xuICAgIDAlLCAxMDAlIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgfSA1MCUge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB9XG4gIH1cbiIsIi8qXG5cbk9yZ2luYWwgU3R5bGUgZnJvbSBldGhhbnNjaG9vbm92ZXIuY29tL3NvbGFyaXplZCAoYykgSmVyZW15IEh1bGwgPHNvdXJkcnVtc0BnbWFpbC5jb20+XG5cbiovXG5cbi5obGpzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIGNvbG9yOiAjODM5NDk2O1xufVxuXG4uaGxqcy1jb21tZW50LFxuLmhsanMtcXVvdGUge1xuICBjb2xvcjogIzU4NmU3NTtcbn1cblxuLyogU29sYXJpemVkIEdyZWVuICovXG4uaGxqcy1rZXl3b3JkLFxuLmhsanMtc2VsZWN0b3ItdGFnLFxuLmhsanMtYWRkaXRpb24ge1xuICBjb2xvcjogIzg1OTkwMDtcbn1cblxuLyogU29sYXJpemVkIEN5YW4gKi9cbi5obGpzLW51bWJlcixcbi5obGpzLXN0cmluZyxcbi5obGpzLW1ldGEgLmhsanMtbWV0YS1zdHJpbmcsXG4uaGxqcy1saXRlcmFsLFxuLmhsanMtZG9jdGFnLFxuLmhsanMtcmVnZXhwIHtcbiAgY29sb3I6ICMyYWExOTg7XG59XG5cbi8qIFNvbGFyaXplZCBCbHVlICovXG4uaGxqcy10aXRsZSxcbi5obGpzLXNlY3Rpb24sXG4uaGxqcy1uYW1lLFxuLmhsanMtc2VsZWN0b3ItaWQsXG4uaGxqcy1zZWxlY3Rvci1jbGFzcyB7XG4gIGNvbG9yOiAjMjY4YmQyO1xufVxuXG4vKiBTb2xhcml6ZWQgWWVsbG93ICovXG4uaGxqcy1hdHRyaWJ1dGUsXG4uaGxqcy1hdHRyLFxuLmhsanMtdmFyaWFibGUsXG4uaGxqcy10ZW1wbGF0ZS12YXJpYWJsZSxcbi5obGpzLWNsYXNzIC5obGpzLXRpdGxlLFxuLmhsanMtdHlwZSB7XG4gIGNvbG9yOiAjYjU4OTAwO1xufVxuXG4vKiBTb2xhcml6ZWQgT3JhbmdlICovXG4uaGxqcy1zeW1ib2wsXG4uaGxqcy1idWxsZXQsXG4uaGxqcy1zdWJzdCxcbi5obGpzLW1ldGEsXG4uaGxqcy1tZXRhIC5obGpzLWtleXdvcmQsXG4uaGxqcy1zZWxlY3Rvci1hdHRyLFxuLmhsanMtc2VsZWN0b3ItcHNldWRvLFxuLmhsanMtbGluayB7XG4gIGNvbG9yOiAjY2I0YjE2O1xufVxuXG4vKiBTb2xhcml6ZWQgUmVkICovXG4uaGxqcy1idWlsdF9pbixcbi5obGpzLWRlbGV0aW9uIHtcbiAgY29sb3I6ICNkYzMyMmY7XG59XG5cbi5obGpzLWZvcm11bGEge1xuICBiYWNrZ3JvdW5kOiAjMDczNjQyO1xufVxuXG4uaGxqcy1lbXBoYXNpcyB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLmhsanMtc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4iLCIvLyBzb21lIGJhc2ljIGtleWZyYW1lIGFuaW1hdGlvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gZGVmYXVsdCBhbmltYXRpb24sIG9ubHkgYW5pbWF0ZSBvcGFjaXR5ICsgdHJhbnNmb3JtLCBiZWNhdXNlXG4vLyB0aG9zZSBhcmUgY2hlYXAgdG8gYW5pbWF0ZSBhbmQgZG9udCB0cmlnZ2VyIGFueSBoZWF2eSBsYXlvdXQgcmVjYWxjXG4lYW5pbWF0ZSB7XG4gIHRyYW5zaXRpb246IHRvcCAwLjdzIGVhc2UsIG9wYWNpdHkgMC43cyBlYXNlLCB0cmFuc2Zvcm0gMC43cyBlYXNlO1xufVxuXG4lYW5pbWF0ZS0taGVpZ2h0IHtcbiAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuNHMgZWFzZTtcbn1cblxuJWFuaW1hdGUtLXdpZHRoIHtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UsIHdpZHRoIDAuNHMgZWFzZTtcbn1cblxuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKSBzY2FsZSgxKTtcbiAgfVxuXG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMS4yKTtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpIHNjYWxlKDEpO1xuICB9XG59XG4iLCIvLyB0eXBvZ3JhcGhpYyBzdHVmZiBhbmQgZ2VuZXJhbCB0eXBvZ3JhcGhpYyByZWxhdGVkIGhlbHBlciBjbGFzc2VzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi5tYXJrdXAtLWxpbmssXG4ubGluay1kZWZhdWx0IHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG5cbi5saW5rLWxhcmdlLFxuLmxpbmstaW52ZXJ0ZWQge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbn1cblxuJWRlY29yYXRlZCxcbi5kZWNvcmF0ZWQge1xuICBAaW5jbHVkZSBib3JkZXItY29sb3IoZGVmYXVsdCk7XG4gIGJvcmRlci1ib3R0b206ICRiYXNlLWhhbGYgLyAyIHNvbGlkO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cbiAgJi0tdGhpbiB7XG4gICAgYm9yZGVyLWJvdHRvbTogJGJhc2UtaGFsZiAvIDQgc29saWQ7XG4gIH1cbn1cblxuLmxpbmstc2VjdGlvbiB7XG4gIEBleHRlbmQgJWFuaW1hdGUtLXdpZHRoO1xuICBkaXNwbGF5OiBub25lO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBibG9jayhibG9jayk7XG4gICAgQGluY2x1ZGUgYWJzb2x1dGUodCAwLCBiIDApO1xuICAgIEBpbmNsdWRlIGNvbG9yKHRyYW5zcGFyZW50KTtcbiAgICBAaW5jbHVkZSB6LWluZGV4KGJlbGx5KTtcbiAgICB3aWR0aDogJHdpZHRoLWxpbmstc2VjdGlvbjtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeHhsKSB7XG4gICAgd2lkdGg6ICR3aWR0aC1saW5rLXNlY3Rpb24gKiAxLjU7XG4gIH1cblxuICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgIHdpZHRoOiAkd2lkdGgtbGluay1zZWN0aW9uICogMS41O1xuXG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICAgIHdpZHRoOiAkd2lkdGgtbGluay1zZWN0aW9uICogMjtcbiAgICB9XG4gIH1cblxuICAmLS1mYWtlIHtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAwO1xuXG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICAgIHdpZHRoOiAwO1xuICAgIH1cbiAgfVxuXG4gICYtLWNoYW5nZSB7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG59XG5cbi5saW5rLWFzLWJ1dHRvbiB7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IoZGVmYXVsdCk7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoaCAxLzQpO1xuICBAaW5jbHVkZSBjb2xvcihtYWluKTtcbiAgYm9yZGVyOiAkYmFzZS1oYWxmLzMgc29saWQgY29sb3IoZGVmYXVsdCk7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcih2IDEvMiwgaCAxKTtcbiAgfVxuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgQGluY2x1ZGUgY29sb3IoZGVmYXVsdCk7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcih0cmFuc3BhcmVudCk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG5cbkBlYWNoICR0aWxlLWNvbG9yIGluICRhcmVhcyB7XG4gIC5saW5rLXNlY3Rpb24tLSN7JHRpbGUtY29sb3J9IHtcbiAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKCR0aWxlLWNvbG9yKTtcbiAgfVxufVxuXG4vLyBvdGhlciBzdHVmZlxuLmxpc3QtLXVsIHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihsIDEuMWVtKTtcblxuICAubGlzdF9faXRlbSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyhiIDEvNCk7XG4gIH1cbn1cblxuLmxpc3QtLW9sIHtcbiAgY291bnRlci1yZXNldDogc3RlcC1jb3VudGVyO1xuICBsaXN0LXN0eWxlOiBub25lO1xuXG4gIC5saXN0X19pdGVtIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKGwgMS44ZW0pO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBjb3VudGVyLWluY3JlbWVudDogc3RlcC1jb3VudGVyO1xuXG4gICAgJjo6YmVmb3JlIHtcbiAgICAgIEBpbmNsdWRlIGFic29sdXRlO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiBjb3VudGVyKHN0ZXAtY291bnRlcikgJy4nO1xuICAgIH1cbiAgfVxufVxuXG4uZ3JhZiB7XG4gICYtLWNvZGVibG9jayB7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKHNtYWxsKTtcbiAgfVxuXG4gICYtLWgzIHtcbiAgICBtYXgtd2lkdGg6IDkwJTtcbiAgfVxufVxuIiwiLy8gZWFzeSBwb3NpdGlvbmluZyB3aXRoIGN1c3RvbSBtaXhpbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gdGhhbmtzIHRvIGh1Z28gZ2lyYXVkZWw6IGh0dHA6Ly9odWdvZ2lyYXVkZWwuY29tLzIwMTQvMDUvMTkvbmV3LW9mZnNldHMtc2Fzcy1taXhpbi9cblxuQG1peGluIHBvc2l0aW9uKCRwb3NpdGlvbiwgJHBvc2l0aW9uLWFyZ3MuLi4pIHtcbiAgLy8gZGVmYXVsdCBjYXNlIGZvciBwb3NpdGlvbnM6XG4gIC8vIGZpeGVkLCBhYnNvbHV0ZSA9PT4gdG9wOiAwOyBsZWZ0OiAwO1xuICAvLyBzdGF0aWMsIHJlbGF0aXZlOiB0b3A6IGF1dG87IGxlZnQ6IGF1dG87XG4gIHBvc2l0aW9uOiAkcG9zaXRpb247XG5cbiAgQGlmIGxlbmd0aCgkcG9zaXRpb24tYXJncykgPT0gMCB7XG4gICAgQGlmICRwb3NpdGlvbiA9PSBhYnNvbHV0ZSBvciBwb3NpdGlvbiA9PSBmaXhlZCB7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuXG4gICAgfSBAZWxzZSB7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgIH1cblxuXG4gIH0gQGVsc2Uge1xuXG4gICAgQGVhY2ggJHBvc2l0aW9uLWtleSwgJHBvc2l0aW9uLXZhbHVlIGluICRwb3NpdGlvbi1hcmdzIHtcblxuICAgICAgQGlmIG5vdCAkcG9zaXRpb24tdmFsdWUge1xuICAgICAgICBAd2FybiAnWW91IHNob3VsZCBwcm92aWRlIGEgbGlzdCBvZiBzaWRlL3ZhbHVlIHBhaXJzIGUuZy4gXCJiIDJcIiBmb3IgdGhpcyBtaXhpbiB0byB3b3JrJztcblxuICAgICAgfSBAZWxzZSBpZiAkcG9zaXRpb24ta2V5ID09ICdhJyB7XG4gICAgICAgICR2YWx1ZTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICAgIHRvcDogJHZhbHVlO1xuICAgICAgICByaWdodDogJHZhbHVlO1xuICAgICAgICBib3R0b206ICR2YWx1ZTtcbiAgICAgICAgbGVmdDogJHZhbHVlO1xuXG4gICAgICB9IEBlbHNlIGlmICRwb3NpdGlvbi1rZXkgPT0gJ3YnIHtcbiAgICAgICAgdG9wOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG4gICAgICAgIGJvdHRvbTogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICB9IEBlbHNlIGlmICRwb3NpdGlvbi1rZXkgPT0gJ2gnIHtcbiAgICAgICAgcmlnaHQ6IHBhcnNlLXVuaXQoJHBvc2l0aW9uLXZhbHVlKTtcbiAgICAgICAgbGVmdDogcGFyc2UtdW5pdCgkcG9zaXRpb24tdmFsdWUpO1xuXG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHNpZGU6IHBvc2l0aW9uLW1hcCgkcG9zaXRpb24ta2V5KTtcbiAgICAgICAgJHZhbHVlOiBwYXJzZS11bml0KCRwb3NpdGlvbi12YWx1ZSk7XG5cbiAgICAgICAgI3skc2lkZX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGFic29sdXRlKCRhcmdzLi4uKSB7XG4gIEBpbmNsdWRlIHBvc2l0aW9uKGFic29sdXRlLCAkYXJncy4uLik7XG59XG5cbkBtaXhpbiBmaXhlZCgkYXJncy4uLikge1xuICBAaW5jbHVkZSBwb3NpdGlvbihmaXhlZCwgJGFyZ3MuLi4pO1xufVxuXG5AbWl4aW4gcmVsYXRpdmUoJGFyZ3MuLi4pIHtcbiAgQGluY2x1ZGUgcG9zaXRpb24ocmVsYXRpdmUsICRhcmdzLi4uKTtcbn1cblxuQG1peGluIHN0YXRpYygkYXJncy4uLikge1xuICBAaW5jbHVkZSBwb3NpdGlvbihzdGF0aWMsICRhcmdzLi4uKTtcbn1cbiIsIi8vIHotaW5kZXggbWl4aW4gZm9yIHVzZSB3aXRoIHRoZSBtYXAgaW4gdmFyaWFibGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIHByb3ZpZGUgYSBkZWZhdWx0IG1hcCBmb3Igei1pbmRleGVzIHVzZWQgdGhyb3VnaG91dCB0aGUgcHJvamVjdFxuLy8gd2l0aCBhbiBlYXN5IHRvIHJlbWVtYmVyIHN0YWNraW5nIGhpZXJhcmNoeSDigJTCoGp1c3QgbG9vayBkb3duIHlvdXIgYm9keSFcbi8vIElmIHlvdSB3YW50IHRvIHVzZSB5b3VyIG93biBtYXAsIGp1c3QgcHJvdmlkZSBvbmUgd2l0aCB0aGUgdmFyaWFibGUgJHotaW5kZXhlc1xuLy8gYmVmb3JlIGluY2x1ZGluZyB0aGlzIGZpbGUgaW4geW91ciBtYWluIFNhc3MgZmlsZVxuJHotaW5kZXhlczogKFxuICBza3k6IDEwMDAsXG4gIGhhaXI6IDUwLFxuICBoZWFkOiA0MCxcbiAgYnJlYXN0OiAzMCxcbiAgYmVsbHk6IDIwLFxuICBrbmVlczogMTAsXG4gIGZlZXQ6IDEsXG4gIGRlZmF1bHQ6IDAsXG4gIGdyb3VuZDogLTFcbikgIWRlZmF1bHQ7XG5cbi8vIGFuZCBhbiBlYXN5IHRvIHVzZSBtaXhpbiB0byB1c2UgYSB2YWx1ZSBmcm9tIHRoZSBtYXAgYWJvdmUgdXNlIGxpa2UgdGhpczpcbi8vIEBpbmNsdWRlIHotaW5kZXgoa25lZXMpOyA9PT4gei1pbmRleDogMTA7XG5cbkBtaXhpbiB6LWluZGV4KCR6LXZhbHVlOiBkZWZhdWx0KSB7XG4gIHotaW5kZXg6IHotaW5kZXgoJHotdmFsdWUpO1xufVxuXG4vLyBhbmQgaWYgbmVlZGVkIGEgZnVuY3Rpb24gdG8gZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBtYXAgd2l0aCxcbi8vIHRoaXMgaXMgYmFzaWNhbGx5IGp1c3QgYW4gYWxpYXMgZm9yIG1hcC1nZXQoJHotaW5kZXhlcy4uLilcbkBmdW5jdGlvbiB6LWluZGV4KCR6LXZhbHVlOiBkZWZhdWx0KSB7XG4gIEBpZiBtYXAtaGFzLWtleSgkei1pbmRleGVzLCAkei12YWx1ZSkgPT0gZmFsc2Uge1xuICAgIEB3YXJuICdJbmRleCBcIiN7JHotdmFsdWV9XCIgbm90IGZvdW5kIGluICR6LWluZGV4ZXMgU2Fzcy1tYXAgdXNpbmcgbWl4aW4gei1pbmRleC4gRGVmYXVsdGluZyB0byAwJztcbiAgICBAcmV0dXJuIDA7XG4gIH1cblxuICBAcmV0dXJuIG1hcC1nZXQoJHotaW5kZXhlcywgJHotdmFsdWUpO1xufVxuIiwiLy8gYXJ0aWNsZXMgaW4gdGhlIGJsb2dcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLmFydGljbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJi0tcHJldmlldyB7XG4gICAgQGluY2x1ZGUgc3BhY2luZztcblxuICAgIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICAgIEBpbmNsdWRlIHNwYWNpbmcoYiAxLjUpO1xuICAgICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihiIDEvMik7XG4gICAgfVxuICB9XG59XG5cbi5hcnRpY2xlX19kYXRlIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDEvNCk7XG4gIGRpc3BsYXk6IGJsb2NrO1xuXG4gIC5hcnRpY2xlLS1zaW5nbGUgJiB7XG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuLmFydGljbGVfX2hlYWRlciB7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAxLzIpO1xuXG4gICYtLXNpbmdsZSB7XG4gICAgQGV4dGVuZCAlaDE7XG4gIH1cbn1cblxuLmFydGljbGVfX2ludHJvIHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGgzKTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoaDEtbW9iaWxlKTtcbiAgfVxufVxuXG4uYXJ0aWNsZV9fZm9vdGVyIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDEpO1xuICBAaW5jbHVkZSBmb250LXNpemUoc21hbGwpO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZShoNCk7XG4gIH1cbn1cblxuLmFydGljbGVfX2F1dGhvciB7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAxLzIpO1xufVxuXG4uYXJ0aWNsZV9fYXV0aG9yLWltYWdlIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhyIDEvMik7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogMTIlO1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xufVxuIiwiLy8gbm90ZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLm5vdGUge1xuICBAaW5jbHVkZSBzcGFjaW5nO1xuXG59XG5cbi5ub3RlX19mb290ZXIge1xuICBAaW5jbHVkZSBmb250LXNpemUoc21hbGwpO1xuICBAaW5jbHVkZSBzcGFjaW5nKGIgMS8yKTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoaDQpO1xuICB9XG59XG5cbi5ub3RlX19pbWFnZSB7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAxLzIpO1xufVxuIiwiLy8gYm94IHJhdGlvIC8gYWRkIGN1c3RvbSBib3hlcyB3aXRoIGEgZml4ZWQgKHJlc3BvbnNpdmUpIHJhdGlvXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIGJveGVzIHdpdGggYSBmaXhlZCByYXRpbyB1c2UgbGlrZTpcbi8vIDxkaXYgY2xhc3M9XCJib3ggIGJveC0tMTYtOVwiPlxuLy8gICA8ZGl2IGNsYXNzPVwiYm94X19jb250ZW50XCI+PC9kaXY+XG4vLyA8L2Rpdj5cblxuLmJveCB7XG4gIEBpbmNsdWRlIGJsb2NrKGJsb2NrKTtcblxuICAmOjpiZWZvcmUge1xuICAgIEBpbmNsdWRlIGJsb2NrKHBzZXVkbyk7XG4gICAgQGluY2x1ZGUgcmF0aW8tYm94O1xuICB9XG59XG5cbi5ib3hfX2NvbnRlbnQge1xuICBAaW5jbHVkZSBjZW50ZXIoY292ZXIpO1xufVxuXG4vLyBhbmQgbm93IC0gdGhlIHZhcmlvdXMgYm94IHNpemVzXG4uYm94LS0yLTEge1xuICBAaW5jbHVkZSByYXRpby1ib3goMiwgMSk7XG59XG5cbi5ib3gtLTQtMyB7XG4gIEBpbmNsdWRlIHJhdGlvLWJveCg0LCAzKTtcbn1cbiIsIi8vIGEgc21hbGwgbWl4aW4gZm9yIHRoZSBib3gtcmF0aW8gY2FsY3VsYXRpb25zXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiByYXRpby1ib3goJHJhdGlvLW9uZTogMSwgJHJhdGlvLXR3bzogMSkge1xuICAmOjpiZWZvcmUge1xuICAgIHBhZGRpbmctdG9wOiAkcmF0aW8tdHdvIC8gJHJhdGlvLW9uZSAqIDEwMCU7XG4gIH1cbn1cbiIsIi8vIGEgbWl4aW4gZm9yIGNlbnRlcmluZyB3aXRoIGRpZmZlcmVudCBtZXRob2RzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBtaXhpbiBjZW50ZXIoJGNvbnRleHQ6IGRlZmF1bHQpIHtcbiAgZGlzcGxheTogYmxvY2s7XG5cbiAgQGlmICRjb250ZXh0ID09IGhvcml6b250YWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuXG4gIH0gQGVsc2UgaWYgJGNvbnRleHQgPT0gdmVydGljYWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG5cbiAgfSBAZWxzZSBpZiAkY29udGV4dCA9PSBib3RoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuXG4gIH0gQGVsc2UgaWYgJGNvbnRleHQgPT0gY292ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG5cbiAgfSBAZWxzZSB7IC8vIGFzc3VtaW5nIGRlZmF1bHQgY2FzZSAtIG9sZHNjaG9vbCBob3Jpem9udGFsIGNlbnRlcmluZ1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgfVxufVxuIiwiLy8gYnV0dG9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBvbiB0aGUgaG93IGFuZCB3aHkgb2YgQGV4dGVuZCwgcmVhZDpcbi8vIGh0dHA6Ly9jc3N3aXphcmRyeS5jb20vMjAxNC8xMS93aGVuLXRvLXVzZS1leHRlbmQtd2hlbi10by11c2UtYS1taXhpbi9cblxuLy8gZGVmYXVsdCBidXR0b24gc3R5bGVzIGZvciBldmVyeSBidXR0b25cbiVidXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbi5idXR0b24ge1xuICBAZXh0ZW5kICVidXR0b247XG59XG5cbi5idXR0b24tLWNsb3NlIHtcbiAgQGluY2x1ZGUgY29sb3IoaW52ZXJ0ZWQpO1xuXG4gICYtLXdlbGNvbWUge1xuICAgIEBpbmNsdWRlIHotaW5kZXgoYmVsbHkpO1xuICAgIEBpbmNsdWRlIGFic29sdXRlKHQgMS8yLCByIDEvMik7XG5cbiAgICAuY2xvc2Utc3RhdGUtLXdlbGNvbWU6Y2hlY2tlZCB+ICYge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cbn1cblxuLmJ1dHRvbi0tbmF2IHtcbiAgQGluY2x1ZGUgY29sb3IobWFpbik7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoMS1tb2JpbGUpO1xuICBAaW5jbHVkZSBzcGFjaW5nKHIgMS8yKTtcbiAgbGluZS1oZWlnaHQ6ICRoZWlnaHQtaGVhZGVyO1xuICBmbG9hdDogcmlnaHQ7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuXG4vLyBjbG9zaW5nIHN0YXRlcyAvIGNoZWNrYm94ZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLmNsb3NlLXN0YXRlIHtcbiAgQGV4dGVuZCAldmlzdWFsbHloaWRkZW47XG59XG5cblxuIiwiLy8gZGV2aWNlIHdyYXBwZXJzIC8gb3B0aWNhbCBzdHlsZXMgZm9yIG1vYmlsZS90YWJsZXQvZGVza3RvcFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uZGV2aWNlIHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcih2IDEuNSwgaCAxLzQpO1xuICBAaW5jbHVkZSB6LWluZGV4KGJlbGx5KTtcbiAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihkZWZhdWx0KTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXgtd2lkdGg6ICR3aWR0aC1tYXgtbW9iaWxlO1xuICBib3JkZXItcmFkaXVzOiAkYmFzZS1oYWxmO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKHQgLTYzJSwgbCAtMSk7XG4gIH1cblxuICAmX19pbm5lciB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihkZWZhdWx0KTtcbiAgfVxufVxuXG4uZGV2aWNlLS1tb2JpbGUge1xuICAuZGV2aWNlLS10YWJsZXQgKyAmIHtcbiAgICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgICBAaW5jbHVkZSBzcGFjaW5nKHQgLTU1JSwgbCAwLCByIDEpO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuXG4uZGV2aWNlLS10YWJsZXQge1xuICBAaW5jbHVkZSBzcGFjaW5nKGEgMCk7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAwLjc1KTtcbiAgbWF4LXdpZHRoOiAkd2lkdGgtbWF4LXRhYmxldDtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAxLjI1KTtcbiAgfVxufVxuXG4uZGV2aWNlLS1kZXNrdG9wIHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcih0IDN2dywgciAydncsIGIgMnZ3LCBsIDJ2dyk7XG4gIEBpbmNsdWRlIGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogJGJhc2UtaGFsZiAvIDIgJGJhc2UtaGFsZiAvIDIgMCAwO1xuICBtYXgtd2lkdGg6IDcwJTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyhhIDApO1xuICAgIG1heC13aWR0aDogJHdpZHRoLW1heC1kZXNrdG9wO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIodCAzLzQsIHIgMS8yLCBiIDEvMiwgbCAxLzIpO1xuICB9XG5cbiAgJjo6YWZ0ZXIge1xuICAgIEBpbmNsdWRlIGJsb2NrKHBzZXVkbyk7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcihkZWZhdWx0KTtcbiAgICBAaW5jbHVkZSBhYnNvbHV0ZShiIC0zdncsIGwgNTAlLCByIGF1dG8pO1xuICAgIG1hcmdpbi1sZWZ0OiAtNjIlO1xuICAgIHdpZHRoOiAxMjQlO1xuICAgIGhlaWdodDogMy41dnc7XG4gICAgYm9yZGVyLXJhZGl1czogMCAwIDF2dyAxdnc7XG5cbiAgICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgICBib3R0b206IC0kYmFzZS11bml0ICogMy80O1xuICAgICAgaGVpZ2h0OiAkYmFzZS11bml0ICogMy80O1xuICAgICAgYm9yZGVyLXJhZGl1czogMCAwICRiYXNlLWhhbGYgLyA0ICRiYXNlLWhhbGYgLyA0O1xuICAgIH1cblxuICB9XG59XG4iLCIvLyBnYWxsZXJ5IHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uZ2FsbGVyeSB7XG4gIEBleHRlbmQgJWNsZWFyZml4O1xuICBAaW5jbHVkZSBzcGFjaW5nO1xuXG4gICZfX2xpbmsge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuXG4gICZfX3RodW1iIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKHIgMS80LCBiIDEvNCk7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0LXRodW1iO1xuXG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgaGVpZ2h0OiAkaGVpZ2h0LXRodW1iICogNy82O1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhcXVlcnkoeHhsKSB7XG4gICAgICBoZWlnaHQ6ICRoZWlnaHQtdGh1bWIgKiA0LzM7XG4gICAgfVxuICB9XG59XG4iLCIvLyBhIHZlcnkgYmFzaWMgZ3JpZCBzeXN0ZW1cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gdXNlIGxpa2UgdGhpczpcbi8vIDxkaXYgY2xhc3M9XCJncmlkXCI+XG4vLyAgPGRpdiBjbGFzcz1cImdyaWRfX2NvbHVtblwiPiBZb3VyIGNvbnRlbnQgPC9kaXY+XG4vLyAgPGRpdiBjbGFzcz1cImdyaWRfX2NvbHVtblwiPiBZb3VyIGNvbnRlbnQgPC9kaXY+XG4vLyA8L2Rpdj5cblxuLy8gVGhlIGdyaWRzIGJ5IGRlZmF1bHQgdHJ5IHRvIHB1dCBldmVyeXRoaW5nIHN0YWNrZWQgb24gZWFjaCBvdGhlclxuLy8gb24gc2l6ZXMgYmVsb3cgdGhlIGwtYnJlYWtwb2ludCwgYW5kIGNvbHVtbnMgYWZ0ZXIgdGhhdFxuLy8geW91IGNhbiB0aHJvdyBncmlkcyBpbnRvIGVhY2ggb3RoZXIgdG8gY3JlYXRlIGN1c3RvbSBsYXlvdXRzXG5cbi5ncmlkIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhsIC0xKTtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihhIDApO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbGlzdC1zdHlsZTogbm9uZTsgLy8gaWYgYXBwbGllZCBvbiBhIGxpc3QsIHJlbW92ZSBsaXN0LXN0eWxlc1xuXG4gIC8vIHRyeSB0byBmaXQgZXZlcnl0aGluZyBpbnRvIGEgcm93IG9uIGxhcmdlciBkaXNwbGF5cywgaW5cbiAgLy8gZWZmZWN0IG1ha2luZyBjb2x1bW5zIG91dCBvZiBldmVyeSBncmlkX19jb2x1bW5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxufVxuXG4uZ3JpZF9fY29sdW1uIHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihsIDEpO1xuICBmbGV4OiAxO1xufVxuIiwiLy8gc3ZnIGljb25zIGFuZCBjdXN0b20gaWNvbiBzdHlsZXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gZGVmYXVsdCBpY29uIHN0eWxlcyAtIGlubGluZSwgc2FtZSBjb2xvciwgMWVtLzFlbVxuLmljb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTAuMDYyNWVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBmaWxsOiBjdXJyZW50Q29sb3I7XG59XG5cbi5pY29uLS1sb2dvIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDI0cHg7XG59XG5cbi5pY29uLS1oZWFydCB7XG4gIEBpbmNsdWRlIGZpbGwod29yayk7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4iLCIvLyB3ZWJtZW50aW9ucyBzdHlsaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi53ZWJtZW50aW9ucy1tZW50aW9ucyxcbi53ZWJtZW50aW9ucy1yZXBvc3RzLFxuLndlYm1lbnRpb25zLXJlcGxpZXMsXG4ud2VibWVudGlvbnMtbGlrZXMge1xuICBAZXh0ZW5kICVjbGVhcmZpeDtcbiAgY2xlYXI6IGJvdGg7XG59XG5cbi53ZWJtZW50aW9uIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDEvMik7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShzKSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihyIDEvMik7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIHdpZHRoOiAzMy4zMzMzJTtcbiAgfVxufVxuXG4ud2VibWVudGlvbi1hdXRob3Ige1xuICBAZXh0ZW5kICVjbGVhcmZpeDtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDApO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi53ZWJtZW50aW9uLWF1dGhvcl9fbWV0YSB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShzbWFsbCk7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIodCAxLzQpO1xufVxuXG4ud2VibWVudGlvbi1hdXRob3JfX3Bob3RvIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhyIDEvNCk7XG4gIGZsb2F0OiBsZWZ0O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn1cblxuLndlYm1lbnRpb24tdGV4dCB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShzbWFsbCk7XG4gIEBpbmNsdWRlIHNwYWNpbmcodiAxLzIpO1xuICBjbGVhcjogbGVmdDtcbn1cbiIsIi8vIGxvZ28gc3R5bGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi5sb2dvIHtcbiAgQGluY2x1ZGUgY29sb3IobWFpbik7XG4gIEBpbmNsdWRlIHNwYWNpbmcobCAxLzIpO1xuICBmbG9hdDogbGVmdDtcbiAgbGluZS1oZWlnaHQ6ICRoZWlnaHQtaGVhZGVyO1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgQGluY2x1ZGUgY29sb3IoaW52ZXJ0ZWQpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyhsICR3aWR0aC1saW5rLXNlY3Rpb24pO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKGwgJHdpZHRoLWxpbmstc2VjdGlvbiAqIDEuNSk7XG4gIH1cbn1cbiIsIi8vIHdpdGggbG92ZVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4ubG92ZSB7XG4gIEBpbmNsdWRlIGNlbnRlcihib3RoKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoMSk7XG4gIHRyYW5zZm9ybS1vcmlnaW46IDUwJSA1MCU7XG4gIHdpZHRoOiA3MCU7XG4gIGhlaWdodDogNzAlO1xuXG4gIGFuaW1hdGlvbi1uYW1lOiBwdWxzZTtcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAycztcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG59XG4iLCIvLyBwYWdpbmF0aW9uIHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4ucGFnaW5hdGlvbiB7XG4gIEBpbmNsdWRlIHNwYWNpbmcodCAxKTtcblxuICAmX19uZXdlciB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICB9XG5cbiAgJl9fb2xkZXIge1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG5cbn1cbiIsIi8vIHByb2plY3QgZGV0YWlscyB2aWV3XG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi5wcm9qZWN0IHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihiIDIpO1xuICBAaW5jbHVkZSBzcGFjaW5nKGIgMSk7XG5cbiAgLy8gcmVtb3ZlIGRlY29yYXRpb24gb24gdGhlIGxhc3QgZWxlbWVudHMgb2YgdGhlIHR5cGUgLnByb2plY3RcbiAgJjpsYXN0LW9mLXR5cGUge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gIH1cblxuICAmLmRlY29yYXRlZCB7XG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICB9XG4gIH1cbn1cblxuLnByb2plY3RfX2hlYWRlciB7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAxLzIpO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZShoMSk7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMDU7XG4gIH1cbn1cblxuLnByb2plY3RfX2xpbmsge1xuICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKHYgMS80LCBoIDEpO1xuICBAaW5jbHVkZSBjZW50ZXIoaG9yaXpvbnRhbCk7XG4gIEBpbmNsdWRlIGNvbG9yKHdvcmspO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gIH1cbn1cblxuLnByb2plY3RfX2ZpZ3VyZSB7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAxKTtcblxuICAmLS1maXJzdCB7XG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAmLS1kZXNrdG9wIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKGIgY2FsYygjeyRiYXNlLXVuaXR9ICsgNXZ3KSk7XG4gIH1cbn1cbiIsIi8vIHN0eWxlcyBmb3IgdGhlIG5lcmR5IHNvdXJjZWJveFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uc291cmNlYm94IHtcbiAgQGluY2x1ZGUgZml4ZWQodCAkaGVpZ2h0LWhlYWRlciwgciAwLCBiIDAsIGwgMCk7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IoZGVmYXVsdCk7XG4gIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcbiAgQGluY2x1ZGUgei1pbmRleChiZWxseSk7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShzbWFsbCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWigxMHB4KTtcblxuICAmX19pbm5lciB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gIH1cbn1cbiIsIi8vIHRhZ2xpc3QsIHRhZ3Ncbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLnRhZ2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuIiwiLy8gdGlsZXMgb24gdGhlIGhvbWVwYWdlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi50aWxlcyB7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtICN7JGhlaWdodC1oZWFkZXJ9KTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICB9XG59XG5cbi50aWxlIHtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihoIDEvMik7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICB3aWR0aDogMzMuMzMzMyU7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHh4eGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKHQgMCwgaCAxLjc1KTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgIC50aWxlX190ZWFzZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICB9XG59XG5cbkBlYWNoICR0aWxlLWNvbG9yIGluICRhcmVhcyB7XG4gIC50aWxlLS0jeyR0aWxlLWNvbG9yfSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcigkdGlsZS1jb2xvcik7XG4gIH1cbn1cblxuLnRpbGVfX2lubmVyIHtcbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIGNlbnRlcihib3RoKTtcbiAgICB3aWR0aDogMjQ1cHg7XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHh4bCkge1xuICAgIHdpZHRoOiAyODVweDtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeHh4eGwpIHtcbiAgICB3aWR0aDogNDEwcHg7XG4gIH1cbn1cblxuLnRpbGVfX3RpdGxlIHtcbiAgQGV4dGVuZCAlaDE7XG4gIEBpbmNsdWRlIHNwYWNpbmcoYiAwKTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKGIgMCk7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKGgyKTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKGIgMSk7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKGgzKTtcbiAgfVxufVxuXG4udGlsZV9fdGVhc2VyIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDApO1xuICBkaXNwbGF5OiBub25lO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBmb250LXNpemUoaDEpO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjA1O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShtYXhtaW5oZWlnaHQsIHRydWUpIHtcbiAgICBmb250LXNpemU6IDh2aDtcbiAgfVxufVxuXG4iLCIvLyB3ZWxjb21lIHNwbGFzaCBzY3JlZW5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLndlbGNvbWUge1xuICBAZXh0ZW5kICVhbmltYXRlO1xuICBAaW5jbHVkZSBhYnNvbHV0ZSh0IDAsIGwgMS8yLCByIDAsIGIgMCk7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAxLzIpO1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKGRlZmF1bHQpO1xuICBAaW5jbHVkZSBjb2xvcihpbnZlcnRlZCk7XG4gIEBpbmNsdWRlIHotaW5kZXgoa25lZXMpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBhYnNvbHV0ZSh0IDAsIGwgMCwgciAwLCBiIDEpO1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAxKTtcbiAgfVxuXG4gIC5jbG9zZS1zdGF0ZS0td2VsY29tZTpjaGVja2VkIH4gJiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgdG9wOiAkaGVpZ2h0LWhlYWRlcjtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gICAgfVxuICB9XG5cbiAgJi0tZG9uZSB7XG4gICAgdHJhbnNpdGlvbjogdW5zZXQ7XG4gIH1cbn1cblxuLndlbGNvbWVfX2lubmVyIHtcbiAgQGluY2x1ZGUgc3BhY2luZyhiIDApO1xuICBmbGV4OiAxO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShtYXhoZWlnaHQsIHRydWUpIHtcbiAgICBmb250LXNpemU6IDEwdmg7XG4gIH1cbn1cbiIsIi8vIHdyYXBwZXIgc3R5bGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi53cmFwcGVyIHtcbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6ICR3aWR0aC1tYXg7XG4gIH1cbn1cblxuIiwiLy8gaGVhZGVyIHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uaGVhZGVyIHtcbiAgQGV4dGVuZCAlYW5pbWF0ZS0taGVpZ2h0O1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKGRlZmF1bHQpO1xuICBAaW5jbHVkZSBjb2xvcihpbnZlcnRlZCk7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShoMyk7XG4gIGhlaWdodDogJGhlaWdodC1oZWFkZXI7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICBAaW5jbHVkZSBmaXhlZCh0IDAsIHIgMCwgbCAwKTtcbiAgICBAaW5jbHVkZSB6LWluZGV4KGhhaXIpO1xuICB9XG5cbiAgJi0tbmF2LS1hY3RpdmUge1xuICAgIGhlaWdodDogMTAwdmg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICAgIGhlaWdodDogJGhlaWdodC1oZWFkZXI7XG4gICAgfVxuICB9XG5cbiAgLnNpdGUtLWhvbWVwYWdlICYtLXRvcCB7XG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgfVxuXG4gICYtLXdlbGNvbWUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgICBAaW5jbHVkZSBhYnNvbHV0ZShiIDAsIGwgMCwgciAwLCB0IGF1dG8pO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG59XG5cbi5oZWFkZXJfX2xlZ2FsIHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKHNtYWxsKTtcbiAgQGluY2x1ZGUgY29sb3IobWFpbik7XG4gIEBpbmNsdWRlIHNwYWNpbmcociAxLzIpO1xuICBsaW5lLWhlaWdodDogJGhlaWdodC1oZWFkZXI7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZsb2F0OiByaWdodDtcblxuICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmcociAkd2lkdGgtbGluay1zZWN0aW9uKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC5zaXRlLS1ob21lcGFnZSAmIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4uaGVhZGVyX19jb2RlIHtcbiAgQGluY2x1ZGUgY29sb3IobWFpbik7XG4gIEBpbmNsdWRlIHNwYWNpbmcociAkd2lkdGgtbGluay1zZWN0aW9uICogMS41KTtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGgxLW1vYmlsZSk7XG4gIGxpbmUtaGVpZ2h0OiAkaGVpZ2h0LWhlYWRlcjtcbiAgZGlzcGxheTogbm9uZTtcbiAgZmxvYXQ6IHJpZ2h0O1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgQGluY2x1ZGUgY29sb3IoaW52ZXJ0ZWQpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmcobCAxKTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4iLCIvLyBuYXZpZ2F0aW9uIHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4ubmF2IHtcbiAgQGV4dGVuZCAlYW5pbWF0ZS0taGVpZ2h0O1xuICBAaW5jbHVkZSBibG9jayhibG9jayk7XG4gIEBpbmNsdWRlIGJhY2tncm91bmQtY29sb3IoZGVmYXVsdCk7XG4gIGhlaWdodDogMDtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KGwpIHtcbiAgICBAaW5jbHVkZSBjZW50ZXIoaG9yaXpvbnRhbCk7XG4gICAgQGluY2x1ZGUgei1pbmRleChoZWFkKTtcbiAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKHRyYW5zcGFyZW50KTtcbiAgICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKGwgNCk7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHRyYW5zaXRpb246IHVuc2V0O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIobCAwKTtcbiAgfVxuXG4gICYtLWFjdGl2ZSB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gI3skaGVpZ2h0LWhlYWRlcn0pO1xuXG4gICAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICB9XG59XG5cbi5uYXZfX2xpc3Qge1xuICBAaW5jbHVkZSBzcGFjaW5nKGIgMCk7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgd2lkdGg6IDQwdnc7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICB3aWR0aDogMzB2dztcbiAgfVxufVxuXG4ubmF2X19pdGVtIHtcbiAgQGluY2x1ZGUgZm9udC1zaXplKGgxLW1vYmlsZSk7XG4gIEBpbmNsdWRlIGZvbnQtd2VpZ2h0KGRlZmF1bHQpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZsZXg6IDI7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShtaW5oZWlnaHQsIHRydWUpIHtcbiAgICBmbGV4OiA0O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcih0cmFuc3BhcmVudCk7XG4gICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihhIDApO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZsZXg6IG5vbmU7XG4gIH1cbn1cblxuLm5hdl9fbGluayB7XG4gIEBpbmNsdWRlIGNlbnRlcihjb3Zlcik7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoaCAxLzIpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIEBpbmNsdWRlIGZvbnQtc2l6ZShkZWZhdWx0KTtcbiAgICBAaW5jbHVkZSBjb2xvcihtYWluKTtcbiAgICBAaW5jbHVkZSBzdGF0aWM7XG4gICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihhIDApO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogJGhlaWdodC1oZWFkZXI7XG5cbiAgICBAaW5jbHVkZSBhdHRlbnRpb24ge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbiAgfVxufVxuXG4ubmF2X19pdGVtLS1sZWdhbC1ub3RpY2Uge1xuICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWNvbG9yKGRlZmF1bHQpO1xuICBAaW5jbHVkZSBmb250LXNpemUoaDMpO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgY29sb3IobWFpbik7XG4gIGZsZXg6IDE7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIEBpbmNsdWRlIGNvbG9yKG1haW4pO1xuICB9XG59XG5cbkBlYWNoICRuYXYtaXRlbS1jb2xvciBpbiAkYXJlYXMge1xuICAubmF2X19pdGVtLS0jeyRuYXYtaXRlbS1jb2xvcn0ge1xuICAgIC5uYXZfX2xpbmsge1xuICAgICAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgICAgIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgICAgICAgQGluY2x1ZGUgY29sb3IoJG5hdi1pdGVtLWNvbG9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5uYXZfX2l0ZW0tLSN7JG5hdi1pdGVtLWNvbG9yfSB7XG4gICAgLm5hdl9fbGluay0tYWN0aXZlIHtcbiAgICAgIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgICAgICBAaW5jbHVkZSBjb2xvcigkbmF2LWl0ZW0tY29sb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4iLCIvLyBwYWdlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4ucGFnZSB7XG4gIEBpbmNsdWRlIGJsb2NrKGJsb2NrKTtcbiAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcihhIDEvMik7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkobCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAxKTtcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKHYgMS41LCBoIDIpO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKHQgJGhlaWdodC1oZWFkZXIpO1xuICB9XG59XG5cbkBlYWNoICR0aWxlLWNvbG9yIGluICRhcmVhcyB7XG4gIC5wYWdlLS0jeyR0aWxlLWNvbG9yfSB7XG4gICAgQGluY2x1ZGUgYmFja2dyb3VuZC1jb2xvcigkdGlsZS1jb2xvcik7XG4gIH1cbn1cblxuXG4ucGFnZS0taG9tZSB7XG4gIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIoYSAwKTtcbiAgbWluLWhlaWdodDogMDsgLy8gZG9udCBjYXJlXG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsYW5kc2NhcGUpIHtcbiAgICBmb250LXNpemU6IDZ2dztcbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkocG9ydHJhaXQpIHtcbiAgICBmb250LXNpemU6IDYuNXZoO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4eGwpIHtcbiAgICBAaW5jbHVkZSBzcGFjaW5nKHQgMCk7XG4gIH1cbn1cblxuLnBhZ2UtLWNvbnRhY3Qge1xuICAubGluay1zZWN0aW9uLS1ibG9nLFxuICAubGluay1zZWN0aW9uLS13b3JrIHtcbiAgICByaWdodDogMDtcbiAgfVxufVxuXG4ucGFnZS0tbGVnYWwtbm90aWNlLFxuLnBhZ2UtLWJsb2cge1xuICAubGluay1zZWN0aW9uLS1ibG9nLFxuICAubGluay1zZWN0aW9uLS1jb250YWN0LFxuICAubGluay1zZWN0aW9uLS13b3JrIHtcbiAgICBsZWZ0OiAwO1xuICB9XG59XG5cbi5wYWdlLS13b3JrIHtcbiAgLmxpbmstc2VjdGlvbi0tY29udGFjdCB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIC5saW5rLXNlY3Rpb24tLWJsb2cge1xuICAgIHJpZ2h0OiAwO1xuICB9XG59XG5cbi5wYWdlLS1lcnJvciB7XG4gIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvNDA0LnBuZycpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ucGFnZS0tbG92ZSB7XG4gIEBpbmNsdWRlIGNvbG9yKGludmVydGVkKTtcblxuICAuZ3JhZi0taDEge1xuICAgIEBpbmNsdWRlIGFic29sdXRlKHQgNjAlLCBsIDAsIHIgMCk7XG4gICAgQGluY2x1ZGUgei1pbmRleChmZWV0KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuXG4vLyBwYWdlIGVsZW1lbnRzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi5wYWdlX19oZWFkZXIge1xuICBAZXh0ZW5kICVoMTtcbiAgQGV4dGVuZCAlcmh5dGhtO1xuICBAaW5jbHVkZSBzcGFjaW5nLWlubmVyKGIgMS80KTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gIEBpbmNsdWRlIGF0dGVudGlvbiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG59XG4iLCIvLyBjb250ZW50IHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uY29udGVudC13cmFwcGVyIHtcbiAgQGV4dGVuZCAlY2xlYXJmaXg7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIodCAxKTtcbiAgfVxuXG59XG5cbi5jb250ZW50IHtcbiAgQGluY2x1ZGUgbWVkaWFxdWVyeSh4bCkge1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIobCAyKTtcbiAgICB3aWR0aDogNjAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG59XG5cbi5jb250ZW50LS1wcm9qZWN0IHtcbiAgZGlzcGxheTogbm9uZTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuLmNvbnRlbnQtLWJsb2cge1xuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyh0IC0yLjUpO1xuICAgIHdpZHRoOiA3MiU7XG4gIH1cbn1cblxuLmNvbnRlbnQtLWxlZ2FsLW5vdGljZSB7XG4gIEBpbmNsdWRlIGZvbnQtc2l6ZShzbWFsbCk7XG5cbiAgQGluY2x1ZGUgbWVkaWFxdWVyeShsKSB7XG4gICAgQGluY2x1ZGUgZm9udC1zaXplKGg0KTtcbiAgfVxufVxuXG4vLyBzdHVmZiBpbnNpZGUgdGhlIGNvbnRlbnRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLmNvbnRlbnRfX2J1enp3b3JkcyB7XG4gIEBleHRlbmQgJWNsZWFyZml4O1xuXG4gIC5saXN0LS11bCB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyhiIDAsIGwgMiUpO1xuICAgIEBpbmNsdWRlIHNwYWNpbmctaW5uZXIobCAwKTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNDglO1xuICAgIGxpbmUtaGVpZ2h0OiAyO1xuICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCBjb2xvcihkZWZhdWx0KTtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgJjpudGgtY2hpbGQoMm4pIHtcbiAgICAgIEBpbmNsdWRlIHNwYWNpbmcobCAwLCByIDIlKTtcbiAgICB9XG5cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgQGluY2x1ZGUgc3BhY2luZyhhIDApO1xuICAgICAgQGluY2x1ZGUgc3BhY2luZy1pbm5lcih2IDEvNCk7XG4gICAgICBAaW5jbHVkZSBsaW5lLWhlaWdodChkZWZhdWx0KTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZmxvYXQ6IG5vbmU7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gIH1cblxuICAubGlzdF9faXRlbSB7XG4gICAgQGluY2x1ZGUgc3BhY2luZyhiIDApO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCBjb2xvcihkZWZhdWx0KTtcblxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIH1cbiAgfVxufVxuXG4iLCIvLyBzaWRlYmFyIHN0eWxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uc2lkZWJhciB7XG4gIEBpbmNsdWRlIG1lZGlhcXVlcnkoeGwpIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNDAlO1xuICB9XG59XG5cbi5zaWRlYmFyLS1ibG9nIHtcbiAgZGlzcGxheTogbm9uZTtcblxuICBAaW5jbHVkZSBtZWRpYXF1ZXJ5KHhsKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDI4JTtcbiAgfVxufVxuIiwiLy8gQSBtb2Rlcm4gY2xlYXJmaXgtdmFyaWFudFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4uY2xlYXJmaXgsXG4lY2xlYXJmaXgge1xuICAmOjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIi8vIGhlbHBlcnMgdG8gaGlkZSBlbGVtZW50cyBpbiB2YXJpb3VzIHdheXNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gY29tcGxldGVseSBoaWRkZW5cbi5oaWRkZW4sXG4laGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi8vIGhpZGRlbiwgYnV0IGZvY3VzYWJsZSBhbmQgc2NyZWVucmVhZGVyLWNvbXBhdGlibGVcbi52aXN1YWxseWhpZGRlbixcbiV2aXN1YWxseWhpZGRlbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuXG4gICYuZm9jdXNhYmxlIHtcbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgY2xpcDogYXV0bztcbiAgICB9XG4gIH1cbn1cblxuLy8gaGlkZSwgYnV0IG1haW50YWluIGxheW91dFxuLmludmlzaWJsZSxcbiVpbnZpc2libGUge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbiJdLCJzb3VyY2VSb290IjoiLi8ifQ== */
