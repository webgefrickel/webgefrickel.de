/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feature-settings: 'kern', 'liga', 'clig', 'calt'; }

*, *::before, *::after {
  box-sizing: inherit; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
dl,
dd,
ol,
ul,
hr,
form,
fieldset,
legend,
figure,
table,
th,
td,
caption,
hr {
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

fieldset {
  border: 0; }

label {
  display: block;
  cursor: pointer; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

audio,
iframe,
img,
video {
  max-width: 100%;
  height: auto; }

nav ul,
nav ol,
fieldset ul,
fieldset ol {
  list-style: none; }

table {
  width: 100%; }

td,
th {
  vertical-align: top; }

th {
  text-align: left; }

hr {
  display: block;
  height: 1px;
  margin: 0 auto;
  border: 0;
  background: currentColor; }

html {
  color: #323232;
  background-color: white;
  font-size: 24px; }

body {
  font-family: Helvetica, Arial, sans-serif;
  font-weight: 600;
  font-style: normal;
  line-height: 1.3333;
  font-size: 0.75rem;
  background-color: #323232; }
  .fonts-loaded body {
    font-family: "Geomanist", Helvetica, Arial, sans-serif; }
  @media (min-width: 45em) {
    body {
      font-size: 1rem; } }
  @media print {
    body * {
      display: none; }
    body::after {
      content: 'Please, do not waste paper by printing webpages.'; } }

::-moz-selection {
  background-color: #8a8a8a;
  color: white;
  text-shadow: none; }

::selection {
  background-color: #8a8a8a;
  color: white;
  text-shadow: none; }

h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
blockquote,
p,
hr,
table,
fieldset,
figure,
pre,
.rhythm,
.page__header {
  margin-bottom: 1.3333rem; }

@font-face {
  font-family: "Geomanist";
  font-weight: 600;
  font-style: normal;
  src: url("../fonts/geomanist-medium.woff2") format("woff2"), url("../fonts/geomanist-medium.woff") format("woff"); }

@font-face {
  font-family: "Geomanist";
  font-weight: 400;
  font-style: normal;
  src: url("../fonts/geomanist-regular.woff2") format("woff2"), url("../fonts/geomanist-regular.woff") format("woff"); }

.article__header--single, .tile__title, .page__header,
h1 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.05;
  letter-spacing: -0.01em; }
  @media (min-width: 45em) {
    .article__header--single, .tile__title, .page__header,
    h1 {
      font-size: 2.66667rem; } }


h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.33332rem;
  line-height: 1.05;
  letter-spacing: -0.01em; }
  @media (min-width: 45em) {
    
    h2 {
      font-size: 2rem;
      margin-bottom: 0.66665rem;
      line-height: 1.1; } }


h3 {
  font-size: 0.75rem;
  margin-bottom: 0.33332rem;
  font-weight: 900;
  line-height: 1.3; }
  @media (min-width: 45em) {
    
    h3 {
      font-size: 1rem; } }
  h2 +
  h3 {
    margin-top: 1.3333rem; }


h4,
h5,
h6 {
  font-size: 0.75rem;
  font-weight: 600; }

a {
  color: #323232;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    text-decoration: none; }

pre,
code {
  background-color: #323232;
  font-family: "Inconsolata", Hack, Menlo, Courier, monospace;
  font-weight: 400;
  font-style: normal;
  line-height: 1.2; }

pre {
  position: relative;
  display: block;
  padding: 0.66665rem;
  color: white;
  font-size: 0.58333rem;
  overflow: scroll; }
  pre > code {
    background-color: transparent; }

p > code {
  padding: 0.16666rem;
  font-size: 0.58333rem;
  background-color: rgba(0, 0, 0, 0.1); }

hr {
  color: #323232;
  height: 0.22222rem; }

strong,
b,
i,
em {
  font-family: Helvetica, Arial, sans-serif;
  font-weight: 400;
  font-style: normal; }
  .fonts-loaded strong, .fonts-loaded
  b, .fonts-loaded
  i, .fonts-loaded
  em {
    font-family: "Geomanist", Helvetica, Arial, sans-serif; }

iframe {
  width: 100%;
  border: 0;
  background: transparent; }

#baguetteBox-overlay {
  display: none;
  opacity: 0;
  position: fixed;
  overflow: hidden;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000000;
  background-color: #222;
  background-color: rgba(0, 0, 0, 0.8);
  transition: opacity .5s ease; }
  #baguetteBox-overlay.visible {
    opacity: 1; }
  #baguetteBox-overlay .full-image {
    display: inline-block;
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center; }
    #baguetteBox-overlay .full-image figure {
      display: inline;
      margin: 0;
      height: 100%; }
    #baguetteBox-overlay .full-image img {
      display: inline-block;
      width: auto;
      height: auto;
      max-height: 100%;
      max-width: 100%;
      vertical-align: middle;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.6); }
    #baguetteBox-overlay .full-image figcaption {
      display: block;
      position: absolute;
      bottom: 0;
      width: 100%;
      text-align: center;
      line-height: 1.8;
      white-space: normal;
      color: #ccc;
      background-color: #000;
      background-color: rgba(0, 0, 0, 0.6);
      font-family: sans-serif; }
    #baguetteBox-overlay .full-image:before {
      content: "";
      display: inline-block;
      height: 50%;
      width: 1px;
      margin-right: -1px; }

#baguetteBox-slider {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  white-space: nowrap;
  transition: left .4s ease, transform .4s ease; }
  #baguetteBox-slider.bounce-from-right {
    animation: bounceFromRight .4s ease-out; }
  #baguetteBox-slider.bounce-from-left {
    animation: bounceFromLeft .4s ease-out; }

@keyframes bounceFromRight {
  0% {
    margin-left: 0; }
  50% {
    margin-left: -30px; }
  100% {
    margin-left: 0; } }

@keyframes bounceFromLeft {
  0% {
    margin-left: 0; }
  50% {
    margin-left: 30px; }
  100% {
    margin-left: 0; } }

.baguetteBox-button#next-button, .baguetteBox-button#previous-button {
  top: 50%;
  top: calc(50% - 30px);
  width: 44px;
  height: 60px; }

.baguetteBox-button {
  color: white;
  position: absolute;
  cursor: pointer;
  outline: none;
  padding: 0;
  margin: 0;
  border: 0;
  border-radius: 15%;
  background-color: transparent;
  font: 1.6em sans-serif;
  transition: background-color .4s ease; }
  .baguetteBox-button#next-button {
    right: 2%; }
  .baguetteBox-button#previous-button {
    left: 2%; }
  .baguetteBox-button#close-button {
    top: 20px;
    right: 2%;
    right: calc(2% + 6px);
    width: 30px;
    height: 30px; }
  .baguetteBox-button svg {
    position: absolute;
    left: 0;
    top: 0; }
    .baguetteBox-button svg g,
    .baguetteBox-button svg polyline {
      stroke: white; }

/*
Preloader
Borrowed from http://tobiasahlin.com/spinkit/
 */
.baguetteBox-spinner {
  width: 40px;
  height: 40px;
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px;
  margin-left: -20px; }

.baguetteBox-double-bounce1,
.baguetteBox-double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  opacity: .6;
  position: absolute;
  top: 0;
  left: 0;
  animation: bounce 2s infinite ease-in-out; }

.baguetteBox-double-bounce2 {
  animation-delay: -1s; }

@keyframes bounce {
  0%, 100% {
    transform: scale(0); }
  50% {
    transform: scale(1); } }

/*

Orginal Style from ethanschoonover.com/solarized (c) Jeremy Hull <sourdrums@gmail.com>

*/
.hljs {
  display: block;
  overflow-x: auto;
  color: #839496; }

.hljs-comment,
.hljs-quote {
  color: #586e75; }

/* Solarized Green */
.hljs-keyword,
.hljs-selector-tag,
.hljs-addition {
  color: #859900; }

/* Solarized Cyan */
.hljs-number,
.hljs-string,
.hljs-meta .hljs-meta-string,
.hljs-literal,
.hljs-doctag,
.hljs-regexp {
  color: #2aa198; }

/* Solarized Blue */
.hljs-title,
.hljs-section,
.hljs-name,
.hljs-selector-id,
.hljs-selector-class {
  color: #268bd2; }

/* Solarized Yellow */
.hljs-attribute,
.hljs-attr,
.hljs-variable,
.hljs-template-variable,
.hljs-class .hljs-title,
.hljs-type {
  color: #b58900; }

/* Solarized Orange */
.hljs-symbol,
.hljs-bullet,
.hljs-subst,
.hljs-meta,
.hljs-meta .hljs-keyword,
.hljs-selector-attr,
.hljs-selector-pseudo,
.hljs-link {
  color: #cb4b16; }

/* Solarized Red */
.hljs-built_in,
.hljs-deletion {
  color: #dc322f; }

.hljs-formula {
  background: #073642; }

.hljs-emphasis {
  font-style: italic; }

.hljs-strong {
  font-weight: bold; }

.welcome {
  transition: top 0.7s ease, opacity 0.7s ease, transform 0.7s ease; }

.header, .nav {
  transition: height 0.4s ease; }

.link-section {
  transition: background-color 0.2s ease, width 0.4s ease; }

@keyframes pulse {
  0% {
    transform: translateX(-50%) translateY(-50%) scale(1); }
  50% {
    transform: translateX(-50%) translateY(-50%) scale(1.2); }
  100% {
    transform: translateX(-50%) translateY(-50%) scale(1); } }

.markup--link,
.link-default {
  color: inherit;
  text-decoration: underline; }
  .markup--link:hover, .markup--link:active, .markup--link:focus,
  .link-default:hover,
  .link-default:active,
  .link-default:focus {
    text-decoration: none; }

.link-large,
.link-inverted {
  color: inherit;
  text-decoration: none; }
  .link-large:hover, .link-large:active, .link-large:focus,
  .link-inverted:hover,
  .link-inverted:active,
  .link-inverted:focus {
    text-decoration: underline; }


.decorated {
  border-color: #323232;
  border-bottom: 0.33332rem solid;
  text-decoration: none; }
  
  .decorated--thin {
    border-bottom: 0.16666rem solid; }

.link-section {
  display: none; }
  @media (min-width: 60em) {
    .link-section {
      position: relative;
      display: block;
      overflow: hidden;
      position: absolute;
      top: 0;
      bottom: 0;
      color: transparent;
      z-index: 20;
      width: 0.66665rem; } }
  @media (min-width: 68.75em) {
    .link-section {
      width: 0.99997rem; } }
  .link-section:hover, .link-section:active, .link-section:focus {
    width: 0.99997rem; }
    @media (min-width: 68.75em) {
      .link-section:hover, .link-section:active, .link-section:focus {
        width: 1.3333rem; } }
  .link-section--fake {
    left: 0;
    width: 0; }
    @media (min-width: 68.75em) {
      .link-section--fake {
        width: 0; } }
  .link-section--change {
    width: 100%; }
    .link-section--change:hover, .link-section--change:active, .link-section--change:focus {
      width: 100%; }

.link-as-button {
  background-color: #323232;
  padding-right: 0.33332rem;
  padding-left: 0.33332rem;
  color: #8a8a8a;
  border: 0.22222rem solid #323232; }
  @media (min-width: 45em) {
    .link-as-button {
      padding-top: 0.66665rem;
      padding-bottom: 0.66665rem;
      padding-right: 1.3333rem;
      padding-left: 1.3333rem; } }
  .link-as-button:hover, .link-as-button:active, .link-as-button:focus {
    color: #323232;
    background-color: transparent;
    text-decoration: none; }

.link-section--contact {
  background-color: #70c382; }

.link-section--blog {
  background-color: #5dc5dc; }

.link-section--work {
  background-color: #f78474; }

.link-section--legal-notice {
  background-color: white; }

.link-section--error {
  background-color: #70c382; }

.list--ul {
  padding-left: 1.1em; }
  .list--ul .list__item {
    margin-bottom: 0.33332rem; }

.list--ol {
  counter-reset: step-counter;
  list-style: none; }
  .list--ol .list__item {
    padding-left: 1.8em;
    position: relative;
    counter-increment: step-counter; }
    .list--ol .list__item::before {
      position: absolute;
      top: 0;
      left: 0;
      display: block;
      content: counter(step-counter) "."; }

.graf--codeblock {
  font-size: 0.58333rem; }

.graf--h3 {
  max-width: 90%; }

.article {
  position: relative; }
  .article--preview {
    margin-bottom: 1.3333rem; }
    @media (min-width: 60em) {
      .article--preview {
        margin-bottom: 1.99995rem;
        padding-bottom: 0.66665rem; } }

.article__date {
  margin-bottom: 0.33332rem;
  display: block; }
  @media (min-width: 60em) {
    .article--single .article__date {
      display: none; } }

.article__header {
  margin-bottom: 0.66665rem; }

.article__intro {
  font-size: 1rem;
  line-height: 1.2; }
  @media (min-width: 45em) {
    .article__intro {
      font-size: 1.5rem; } }

.article__footer {
  margin-bottom: 1.3333rem;
  font-size: 0.58333rem; }
  @media (min-width: 45em) {
    .article__footer {
      font-size: 0.75rem; } }

.article__author {
  margin-bottom: 0.66665rem; }

.article__author-image {
  margin-right: 0.66665rem;
  float: left;
  width: 12%;
  border-radius: 100%; }

.note {
  margin-bottom: 1.3333rem; }

.note__footer {
  font-size: 0.58333rem;
  margin-bottom: 0.66665rem; }
  @media (min-width: 45em) {
    .note__footer {
      font-size: 0.75rem; } }

.note__image {
  margin-bottom: 0.66665rem; }

.box {
  position: relative;
  display: block;
  overflow: hidden; }
  .box::before {
    position: relative;
    display: block;
    content: ''; }
    .box::before::before {
      padding-top: 100%; }

.box__content {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.box--2-1::before {
  padding-top: 50%; }

.box--4-3::before {
  padding-top: 75%; }

.button {
  background: transparent;
  padding: 0;
  margin: 0;
  border: 0;
  outline: 0;
  display: inline-block;
  cursor: pointer;
  color: inherit;
  line-height: 1; }

.button--close {
  color: white; }
  .button--close--welcome {
    z-index: 20;
    position: absolute;
    top: 0.66665rem;
    right: 0.66665rem; }
    .close-state--welcome:checked ~ .button--close--welcome {
      display: none; }

.button--nav {
  color: #8a8a8a;
  font-size: 1.5rem;
  margin-right: 0.66665rem;
  line-height: 1.99995rem;
  float: right; }
  @media (min-width: 45em) {
    .button--nav {
      display: none; } }

.device {
  padding-top: 1.99995rem;
  padding-bottom: 1.99995rem;
  padding-right: 0.33332rem;
  padding-left: 0.33332rem;
  z-index: 20;
  background-color: #323232;
  position: relative;
  max-width: 30%;
  border-radius: 0.66665rem; }
  @media (min-width: 60em) {
    .device {
      margin-top: -63%;
      margin-left: -1.3333rem; } }
  .device__inner {
    background-color: #323232; }

@media (min-width: 60em) {
  .device--tablet + .device--mobile {
    margin-top: -55%;
    margin-left: 0;
    margin-right: 1.3333rem;
    float: right; } }

.device--tablet {
  margin: 0;
  padding: 0.99997rem;
  max-width: 80%; }
  @media (min-width: 68.75em) {
    .device--tablet {
      padding: 1.66662rem; } }

.device--desktop {
  padding-top: 3vw;
  padding-right: 2vw;
  padding-bottom: 2vw;
  padding-left: 2vw;
  display: block;
  margin-left: auto;
  margin-right: auto;
  border-radius: 0.33332rem 0.33332rem 0 0;
  max-width: 70%; }
  @media (min-width: 60em) {
    .device--desktop {
      margin: 0;
      max-width: 90%; } }
  @media (min-width: 60em) {
    .device--desktop {
      padding-top: 0.99997rem;
      padding-right: 0.66665rem;
      padding-bottom: 0.66665rem;
      padding-left: 0.66665rem; } }
  .device--desktop::after {
    position: relative;
    display: block;
    content: '';
    background-color: #323232;
    position: absolute;
    bottom: -3vw;
    left: 50%;
    right: auto;
    margin-left: -62%;
    width: 124%;
    height: 3.5vw;
    border-radius: 0 0 1vw 1vw; }
    @media (min-width: 60em) {
      .device--desktop::after {
        bottom: -0.99997rem;
        height: 0.99997rem;
        border-radius: 0 0 0.16666rem 0.16666rem; } }

.gallery {
  margin-bottom: 1.3333rem; }
  .gallery__link {
    float: left;
    text-decoration: none; }
  .gallery__thumb {
    margin-right: 0.33332rem;
    margin-bottom: 0.33332rem;
    height: 90px; }
    @media (min-width: 60em) {
      .gallery__thumb {
        height: 105px; } }
    @media (min-width: 68.75em) {
      .gallery__thumb {
        height: 120px; } }

.grid {
  margin-left: -1.3333rem;
  padding: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  list-style: none; }
  @media (min-width: 45em) {
    .grid {
      -ms-flex-direction: row;
          flex-direction: row; } }

.grid__column {
  padding-left: 1.3333rem;
  -ms-flex: 1;
      flex: 1; }

.icon {
  position: relative;
  top: -0.0625em;
  display: inline-block;
  width: 1em;
  height: 1em;
  fill: currentColor; }

.icon--logo {
  width: 150px;
  height: 24px; }

.icon--heart {
  fill: #f78474;
  width: 100%;
  height: 100%; }

.webmentions-mentions,
.webmentions-reposts,
.webmentions-replies,
.webmentions-likes {
  clear: both; }

.webmention {
  margin-bottom: 0.66665rem; }
  @media (min-width: 30em) {
    .webmention {
      padding-right: 0.66665rem;
      float: left;
      width: 50%; } }
  @media (min-width: 45em) {
    .webmention {
      width: 33.3333%; } }

.webmention-author {
  margin-bottom: 0;
  position: relative; }

.webmention-author__meta {
  font-size: 0.58333rem;
  padding-top: 0.33332rem; }

.webmention-author__photo {
  margin-right: 0.33332rem;
  float: left;
  display: block;
  width: 60px;
  height: 60px;
  border-radius: 100%; }

.webmention-text {
  font-size: 0.58333rem;
  margin-top: 0.66665rem;
  margin-bottom: 0.66665rem;
  clear: left; }

.logo {
  color: #8a8a8a;
  margin-left: 0.66665rem;
  float: left;
  line-height: 1.99995rem; }
  .logo:hover, .logo:active, .logo:focus {
    color: white; }
  @media (min-width: 45em) {
    .logo {
      margin-left: 0.66665rem; } }
  @media (min-width: 68.75em) {
    .logo {
      margin-left: 0.99997rem; } }

.love {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transform: translateX(-50%) translateY(-50%) scale(1);
  transform-origin: 50% 50%;
  width: 70%;
  height: 70%;
  animation-name: pulse;
  animation-duration: 2s;
  animation-iteration-count: infinite; }

.pagination {
  margin-top: 1.3333rem; }
  .pagination__newer {
    float: right; }
  .pagination__older {
    float: left; }

.project {
  padding-bottom: 2.6666rem;
  margin-bottom: 1.3333rem; }
  .project:last-of-type {
    border-bottom: 0; }
  @media (min-width: 60em) {
    .project.decorated {
      border-bottom: 0; } }

.project__header {
  margin-bottom: 0.66665rem; }
  @media (min-width: 45em) {
    .project__header {
      font-size: 2.66667rem;
      letter-spacing: -0.01em;
      line-height: 1.05; } }

.project__link {
  padding-top: 0.33332rem;
  padding-bottom: 0.33332rem;
  padding-right: 1.3333rem;
  padding-left: 1.3333rem;
  display: block;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  color: #f78474;
  position: relative;
  display: inline-block; }
  @media (min-width: 60em) {
    .project__link {
      left: 0;
      transform: none; } }

.project__figure {
  margin-bottom: 1.3333rem; }
  @media (min-width: 60em) {
    .project__figure--first {
      display: none; } }
  .project__figure--desktop {
    margin-bottom: calc(1.3333rem + 5vw); }

.sourcebox {
  position: fixed;
  top: 1.99995rem;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #323232;
  color: white;
  z-index: 20;
  font-size: 0.58333rem;
  transform: translateZ(10px); }
  .sourcebox__inner {
    width: 100%;
    height: 100%;
    overflow: scroll; }

.taglist {
  list-style: none; }

.tiles {
  height: calc(100vh - 1.99995rem);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  @media (min-width: 60em) {
    .tiles {
      -ms-flex-direction: row;
          flex-direction: row;
      height: 100vh; } }

.tile {
  padding-right: 0.66665rem;
  padding-left: 0.66665rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex: 1;
      flex: 1;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 60em) {
    .tile {
      position: relative;
      -ms-flex-align: start;
          align-items: flex-start;
      width: 33.3333%; } }
  @media (min-width: 78.125em) {
    .tile {
      padding-top: 0;
      padding-right: 2.33327rem;
      padding-left: 2.33327rem;
      position: relative; } }
  .tile:hover .tile__teaser, .tile:active .tile__teaser, .tile:focus .tile__teaser {
    text-decoration: underline; }

.tile--contact {
  background-color: #70c382; }

.tile--blog {
  background-color: #5dc5dc; }

.tile--work {
  background-color: #f78474; }

.tile--legal-notice {
  background-color: white; }

.tile--error {
  background-color: #70c382; }

@media (min-width: 60em) {
  .tile__inner {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 245px; } }

@media (min-width: 68.75em) {
  .tile__inner {
    width: 285px; } }

@media (min-width: 100em) {
  .tile__inner {
    width: 410px; } }

.tile__title {
  margin-bottom: 0; }
  @media (min-width: 45em) {
    .tile__title {
      margin-bottom: 0;
      font-size: 2rem; } }
  @media (min-width: 60em) {
    .tile__title {
      margin-bottom: 1.3333rem;
      font-size: 1rem; } }

.tile__teaser {
  margin-bottom: 0;
  display: none; }
  @media (min-width: 60em) {
    .tile__teaser {
      font-size: 2.66667rem;
      display: block;
      width: 100%;
      line-height: 1.05; } }
  @media (max-height: 640px) {
    .tile__teaser {
      font-size: 8vh; } }

.welcome {
  position: absolute;
  top: 0;
  left: 0.66665rem;
  right: 0;
  bottom: 0;
  padding: 0.66665rem;
  background-color: #323232;
  color: white;
  z-index: 10;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 60em) {
    .welcome {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 1.3333rem;
      padding: 1.3333rem; } }
  .close-state--welcome:checked ~ .welcome {
    transform: translateX(100%); }
    @media (min-width: 60em) {
      .close-state--welcome:checked ~ .welcome {
        top: 1.99995rem;
        transform: translateY(-100%); } }
  .welcome--done {
    transition: unset; }

.welcome__inner {
  margin-bottom: 0;
  -ms-flex: 1;
      flex: 1;
  font-size: inherit; }
  @media (min-width: 720px) and (max-height: 640px) {
    .welcome__inner {
      font-size: 10vh; } }

@media (min-width: 60em) {
  .wrapper {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 1180px; } }

.header {
  background-color: #323232;
  color: white;
  font-size: 1rem;
  height: 1.99995rem; }
  @media (min-width: 68.75em) {
    .header {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      z-index: 50; } }
  .header--nav--active {
    height: 100vh; }
    @media (min-width: 45em) {
      .header--nav--active {
        height: 1.99995rem; } }
  @media (min-width: 60em) {
    .site--homepage .header--top {
      display: none; } }
  .header--welcome {
    display: none; }
    @media (min-width: 60em) {
      .header--welcome {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        top: auto;
        display: block; } }

.header__legal {
  font-size: 0.58333rem;
  color: #8a8a8a;
  margin-right: 0.66665rem;
  line-height: 1.99995rem;
  display: none;
  float: right; }
  .header__legal:hover, .header__legal:active, .header__legal:focus {
    color: white; }
  @media (min-width: 45em) {
    .header__legal {
      margin-right: 0.66665rem;
      display: block; } }
  .site--homepage .header__legal {
    display: block; }

.header__code {
  color: #8a8a8a;
  margin-right: 0.99997rem;
  font-size: 1.5rem;
  line-height: 1.99995rem;
  display: none;
  float: right; }
  .header__code:hover, .header__code:active, .header__code:focus {
    color: white; }
  @media (min-width: 60em) {
    .header__code {
      margin-left: 1.3333rem;
      display: block; } }

.nav {
  position: relative;
  display: block;
  overflow: hidden;
  background-color: #323232;
  height: 0; }
  @media (min-width: 45em) {
    .nav {
      display: block;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      z-index: 40;
      background-color: transparent;
      padding-left: 5.3332rem;
      width: auto;
      height: auto;
      transition: unset; } }
  @media (min-width: 60em) {
    .nav {
      padding-left: 0; } }
  .nav--active {
    height: calc(100vh - 1.99995rem); }
    @media (min-width: 45em) {
      .nav--active {
        height: auto; } }

.nav__list {
  margin-bottom: 0; }
  @media (min-width: 45em) {
    .nav__list {
      width: 40vw;
      height: auto;
      -ms-flex-direction: row;
          flex-direction: row;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media (min-width: 68.75em) {
    .nav__list {
      width: 30vw; } }

.nav__item {
  font-size: 1.5rem;
  font-weight: 600;
  position: relative;
  -ms-flex: 2;
      flex: 2; }
  @media (min-height: 480px) {
    .nav__item {
      -ms-flex: 4;
          flex: 4; } }
  @media (min-width: 45em) {
    .nav__item {
      background-color: transparent;
      padding: 0;
      width: auto;
      -ms-flex: none;
          flex: none; } }

.nav__link {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding-right: 0.66665rem;
  padding-left: 0.66665rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  @media (min-width: 45em) {
    .nav__link {
      font-size: 1rem;
      color: #8a8a8a;
      position: static;
      top: auto;
      left: auto;
      padding: 0;
      display: block;
      width: 100%;
      text-align: center;
      line-height: 1.99995rem; }
      .nav__link:hover, .nav__link:active, .nav__link:focus {
        text-decoration: none; } }

.nav__item--legal-notice {
  background-color: #323232;
  font-size: 1rem;
  border-bottom: 1px solid #8a8a8a;
  -ms-flex: 1;
      flex: 1; }
  @media (min-width: 45em) {
    .nav__item--legal-notice {
      display: none; } }
  .nav__item--legal-notice .nav__link {
    color: #8a8a8a; }

@media (min-width: 45em) {
  .nav__item--contact .nav__link:hover, .nav__item--contact .nav__link:active, .nav__item--contact .nav__link:focus {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--contact .nav__link--active {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--blog .nav__link:hover, .nav__item--blog .nav__link:active, .nav__item--blog .nav__link:focus {
    color: #5dc5dc; } }

@media (min-width: 45em) {
  .nav__item--blog .nav__link--active {
    color: #5dc5dc; } }

@media (min-width: 45em) {
  .nav__item--work .nav__link:hover, .nav__item--work .nav__link:active, .nav__item--work .nav__link:focus {
    color: #f78474; } }

@media (min-width: 45em) {
  .nav__item--work .nav__link--active {
    color: #f78474; } }

@media (min-width: 45em) {
  .nav__item--legal-notice .nav__link:hover, .nav__item--legal-notice .nav__link:active, .nav__item--legal-notice .nav__link:focus {
    color: white; } }

@media (min-width: 45em) {
  .nav__item--legal-notice .nav__link--active {
    color: white; } }

@media (min-width: 45em) {
  .nav__item--error .nav__link:hover, .nav__item--error .nav__link:active, .nav__item--error .nav__link:focus {
    color: #70c382; } }

@media (min-width: 45em) {
  .nav__item--error .nav__link--active {
    color: #70c382; } }

.page {
  position: relative;
  display: block;
  overflow: hidden;
  padding: 0.66665rem;
  min-height: 100vh; }
  @media (min-width: 45em) {
    .page {
      padding: 1.3333rem; } }
  @media (min-width: 60em) {
    .page {
      padding-top: 1.99995rem;
      padding-bottom: 1.99995rem;
      padding-right: 2.6666rem;
      padding-left: 2.6666rem; } }
  @media (min-width: 68.75em) {
    .page {
      margin-top: 1.99995rem; } }

.page--contact {
  background-color: #70c382; }

.page--blog {
  background-color: #5dc5dc; }

.page--work {
  background-color: #f78474; }

.page--legal-notice {
  background-color: white; }

.page--error {
  background-color: #70c382; }

.page--home {
  padding: 0;
  min-height: 0; }
  @media (orientation: landscape) {
    .page--home {
      font-size: 6vw; } }
  @media (orientation: portrait) {
    .page--home {
      font-size: 6.5vh; } }
  @media (min-width: 68.75em) {
    .page--home {
      margin-top: 0; } }

.page--contact .link-section--blog,
.page--contact .link-section--work {
  right: 0; }

.page--legal-notice .link-section--blog,
.page--legal-notice .link-section--contact,
.page--legal-notice .link-section--work,
.page--blog .link-section--blog,
.page--blog .link-section--contact,
.page--blog .link-section--work {
  left: 0; }

.page--work .link-section--contact {
  left: 0; }

.page--work .link-section--blog {
  right: 0; }

.page--error {
  color: white;
  background-image: url("../img/404.png");
  background-repeat: no-repeat;
  background-size: cover; }

.page--love {
  color: white; }
  .page--love .graf--h1 {
    position: absolute;
    top: 60%;
    left: 0;
    right: 0;
    z-index: 1;
    text-align: center; }

.page__header {
  padding-bottom: 0.33332rem;
  display: inline-block; }
  .page__header:hover, .page__header:active, .page__header:focus {
    text-decoration: none; }

@media (min-width: 60em) {
  .content-wrapper {
    padding-top: 1.3333rem; } }

@media (min-width: 60em) {
  .content {
    padding-left: 2.6666rem;
    width: 60%;
    float: left; } }

.content--project {
  display: none; }
  @media (min-width: 60em) {
    .content--project {
      display: block; } }

@media (min-width: 60em) {
  .content--blog {
    margin-top: -3.33325rem;
    width: 72%; } }

.content--legal-notice {
  font-size: 0.58333rem; }
  @media (min-width: 45em) {
    .content--legal-notice {
      font-size: 0.75rem; } }

.content__buzzwords .list--ul {
  margin-bottom: 0;
  margin-left: 2%;
  padding-left: 0;
  float: left;
  width: 48%;
  line-height: 2;
  border-top: 4px solid #323232;
  list-style: none; }
  .content__buzzwords .list--ul:nth-child(2n) {
    margin-left: 0;
    margin-right: 2%; }
  .content__buzzwords .list--ul:last-child {
    margin: 0;
    padding-top: 0.33332rem;
    padding-bottom: 0.33332rem;
    line-height: 1.3333;
    width: 100%;
    float: none;
    clear: both; }

.content__buzzwords .list__item {
  margin-bottom: 0;
  border-bottom: 2px solid #323232; }
  .content__buzzwords .list__item:last-child {
    border-bottom: 0; }

@media (min-width: 60em) {
  .sidebar {
    float: left;
    width: 40%; } }

.sidebar--blog {
  display: none; }
  @media (min-width: 60em) {
    .sidebar--blog {
      display: block;
      width: 28%; } }

.clearfix::after,
.gallery::after,
.webmentions-mentions::after,
.webmentions-reposts::after,
.webmentions-replies::after,
.webmentions-likes::after,
.webmention-author::after,
.content-wrapper::after,
.content__buzzwords::after {
  display: block;
  content: '';
  clear: both; }

.hidden {
  display: none !important;
  visibility: hidden; }

.visuallyhidden,
.close-state {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  overflow: hidden;
  clip: rect(0 0 0 0); }
  .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus,
  .focusable.close-state:active,
  .focusable.close-state:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto; }

.invisible {
  visibility: hidden; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
